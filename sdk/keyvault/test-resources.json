{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseName": {
      "defaultValue": "[resourceGroup().name]",
      "type": "String",
      "metadata": {
        "description": "The base resource name."
      }
    },
    "keyName": {
      "defaultValue": "testKey",
      "type": "String",
      "metadata": {
        "description": "The initial key in the keys."
      }
    },
    "secretName": {
      "defaultValue": "testSecret",
      "type": "String",
      "metadata": {
        "description": "The initial secret in the secrets."
      }
    },
    "tenantId": {
      "defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47",
      "type": "String",
      "metadata": {
        "description": "The tenant ID to which the application and resources belong."
      }
    },
    "testApplicationId": {
      "type": "String",
      "metadata": {
        "description": "The application client ID used to run tests."
      }
    },
    "testApplicationSecret": {
      "type": "String",
      "metadata": {
        "description": "The application client secret used to run tests."
      }
    },
    "testApplicationOid": {
      "defaultValue": "b3653439-8136-4cd5-aac3-2a9460871ca6",
      "type": "String",
      "metadata": {
        "description": "The client OID to grant access to test resources."
      }
    },
    "location": {
      "defaultValue": "[resourceGroup().location]",
      "type": "String",
      "metadata": {
        "description": "The location of the resource. By default, this is the same as the resource group."
      }
    },
    "enableSoftDelete": {
      "defaultValue": true,
      "type": "Bool",
      "metadata": {
        "description": "Whether to enable soft delete for the Key Vault. The default is true."
      }
    },
    "keyVaultDomainSuffix": {
      "defaultValue": ".vault.azure.net",
      "type": "String",
      "metadata": {
        "description": "Domain suffix for sovereign clouds, requires the preceeding '.'. The default uses the public Azure Cloud (.vault.azure.net)"
      }
    },
    "keyVaultSku": {
      "defaultValue": "premium",
      "type": "String",
      "metadata": {
        "description": "Key Vault SKU to deploy. The default is 'premium'"
      }
    },
    "keyType": {
      "defaultValue": "RSA",
      "type": "String",
      "metadata": {
        "description": "The JsonWebKeyType of the key to be created."
      }
    },
    "keyOps": {
      "defaultValue": [],
      "type": "Array",
      "metadata": {
        "description": "The permitted JSON web key operations of the key to be created."
      }
    },
    "keySize": {
      "defaultValue": 2048,
      "type": "Int",
      "metadata": {
        "description": "The size in bits of the key to be created."
      }
    },
    "curveName": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "The JsonWebKeyCurveName of the key to be created."
      }
    },
    "provisionerApplicationOid": {
      "type": "String",
      "metadata": {
        "description": "The provisioner OID to grant access to test resources."
      }
    },
    "enableHsm": {
      "defaultValue": true,
      "type": "Bool",
      "metadata": {
        "description": "Whether to enable deployment of Managed HSM. The default is false."
      }
    },
    "hsmLocation": {
      "defaultValue": "eastus2",
      "allowedValues": [
        "australiacentral",
        "australiaeast",
        "canadacentral",
        "canadaeast",
        "centralindia",
        "centralus",
        "eastasia",
        "eastus",
        "eastus2",
        "francecentral",
        "japaneast",
        "koreacentral",
        "northcentralus",
        "northeurope",
        "southafricanorth",
        "southcentralus",
        "switzerlandnorth",
        "switzerlandwest",
        "uaenorth",
        "uksouth",
        "westcentralus",
        "westeurope",
        "westus",
        "westus2",
        "westus3"
      ],
      "type": "String",
      "metadata": {
        "description": "The location of the Managed HSM. By default, this is 'eastus2'."
      }
    }
  },
  "variables": {
    "azureKeyVaultUrl": "[format('https://{0}{1}/', parameters('baseName'), parameters('keyVaultDomainSuffix'))]",
    "hsmApiVersion": "2021-04-01-preview",
    "hsmName": "[concat(parameters('baseName'), 'hsm')]",
    "networkAcls": {
      "bypass": "AzureServices",
      "virtualNetworkRules": [],
      "ipRules": [],
      "defaultAction": "Allow"
    }
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2019-09-01",
      "name": "[parameters('baseName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "[parameters('keyVaultSku')]"
        },
        "tenantId": "[parameters('tenantId')]",
        "accessPolicies": [
          {
            "tenantId": "[parameters('tenantId')]",
            "objectId": "[parameters('testApplicationOid')]",
            "permissions": {
              "keys": [
                "get",
                "list",
                "update",
                "create",
                "import",
                "delete",
                "recover",
                "backup",
                "restore",
                "decrypt",
                "encrypt",
                "unwrapKey",
                "wrapKey",
                "verify",
                "sign",
                "purge",
                "release"
              ],
              "secrets": [
                "get",
                "list",
                "set",
                "delete",
                "recover",
                "backup",
                "restore",
                "purge"
              ],
              "certificates": [
                "get",
                "list",
                "update",
                "create",
                "import",
                "delete",
                "recover",
                "backup",
                "restore",
                "managecontacts",
                "manageissuers",
                "getissuers",
                "listissuers",
                "setissuers",
                "deleteissuers",
                "purge"
              ]
            }
          }
        ],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "enableSoftDelete": "[parameters('enableSoftDelete')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/keys",
      "apiVersion": "2019-09-01",
      "name": "[concat(parameters('baseName'), '/', parameters('keyName'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('baseName'))]"
      ],
      "properties": {
        "kty": "[parameters('keyType')]",
        "keyOps": "[parameters('keyOps')]",
        "keySize": "[parameters('keySize')]",
        "curveName": "[parameters('curveName')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/managedHSMs",
      "apiVersion": "[variables('hsmApiVersion')]",
      "name": "keyvaultHSM",
      "location": "eastus2",
      "sku": {
        "family": "B",
        "name": "Standard_B1"
      },
      "properties": {
        "tenantId": "[parameters('tenantId')]",
        "initialAdminObjectIds": "[union(array(parameters('testApplicationOid')), array(parameters('provisionerApplicationOid')))]",
        "enablePurgeProtection": false,
        "enableSoftDelete": false,
        "softDeleteRetentionInDays": 7,
        "publicNetworkAccess": "Enabled",
        "networkAcls": "[variables('networkAcls')]"
      }
    }
  ],
  "outputs": {
    "AZURE_KEYVAULT_URL": {
      "type": "String",
      "value": "[variables('azureKeyVaultUrl')]"
    },
    "AZURE_ENABLE_HSM": {
      "type": "Bool",
      "value": "[parameters('enableHsm')]"
    },
    "AZURE_KEYVAULT_HSM_URL": {
      "type": "String",
      "value": "[if(bool(parameters('enableHsm')),reference(variables('hsmName')).hsmUri,variables('azureKeyVaultUrl'))]"
    },
    "AZURE_TENANT_ID": {
      "type": "String",
      "value": "[parameters('tenantId')]"
    },
    "AZURE_CLIENT_ID": {
      "type": "String",
      "value": "[parameters('testApplicationId')]"
    },
    "AZURE_CLIENT_SECRET": {
      "type": "String",
      "value": "[parameters('testApplicationSecret')]"
    },
    "KEYVAULT_SKU": {
      "type": "String",
      "value": "[reference(parameters('baseName')).sku.name]"
    },
    "CLIENT_OBJECTID": {
      "type": "String",
      "value": "[parameters('testApplicationOid')]"
    }
  }
}