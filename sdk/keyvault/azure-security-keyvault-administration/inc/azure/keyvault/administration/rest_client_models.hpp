// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
//
// Code generated by Microsoft (R) AutoRest C++ Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
#pragma once

#include <azure/core/context.hpp>
#include <azure/core/internal/extendable_enumeration.hpp>
#include <azure/core/internal/http/pipeline.hpp>
#include <azure/core/nullable.hpp>
#include <azure/core/response.hpp>
#include <azure/core/url.hpp>
#include <azure/keyvault/administration/dll_import_export.hpp>

#include <memory>
#include <string>
#include <vector>

namespace Azure { namespace Security { namespace KeyVault { namespace Administration {
  namespace Models {

    /**
     * @brief The type specifier of the value.
     */
    class SettingType final : public Azure::Core::_internal::ExtendableEnumeration<SettingType> {
    public:
      /**
       * @brief Default constructor
       */
      SettingType() = default;

      /**
       * @brief Constructor
       * @param value Setting Value
       */
      explicit SettingType(std::string value) : ExtendableEnumeration(std::move(value)) {}

      /**
       * @brief Specifies that this represents the Boolean Type
       */
      AZURE_SECURITY_KEYVAULT_ADMINISTRATION_DLLEXPORT const static SettingType Boolean;
    };

    /**
     * @brief Setting struct
     */
    struct Setting final
    {
      /**
       * The account setting to be updated.
       */
      std::string Name;
      /**
       * The value of the pool setting.
       */
      std::string Value;
      /**
       * The type specifier of the value.
       */
      Azure::Nullable<SettingType> Type;
    };

    /**
     * @brief The settings list result.
     */
    struct SettingsListResult final
    {
      /**
       * A response message containing a list of account settings with their
       * associated value.
       */
      std::vector<Setting> Value;
    };

      /**
     * @brief Define the options to create an SDK Keys client.
     *
     */
    struct BackupRestoreClientOptions final : public Azure::Core::_internal::ClientOptions
    {
      /**
       * @brief Service Version used.
       *
       */
      const std::string ApiVersion{"7.5"};
    };
    struct Error final
    {
      std::string Code;
      std::string Message;
      std::unique_ptr<Error> InnerError;
    };

    struct FullBackupOperation final
    {
      std::string Status;
      std::string StatusDetails;
      Error Error;
      DateTime StartTime;
      Nullable<DateTime> EndTime;
      std::string JobId;
      std::string AzureStorageBlobContainerUri;
    };

    struct SasTokenParameter final
    {
      std::string StorageResourceUri;
      Nullable<std::string> Token;
      Nullable<bool> UseManagedIdentity;
    };

    struct FullBackupOptions final
    {
      SasTokenParameter AzureStorageBlobContainerUri;
    };

    struct FullBackupStatusOptions final
    {
      std::string JobId;
    };

    struct RestoreOperation final
    {
      std::string Status;
      std::string StatusDetails;
      Error Error;
      std::string JobId;
      DateTime StartTime;
      Nullable<DateTime> EndTime;
    };

    struct RestoreOperationParameters final
    {
      SasTokenParameter SasTokenParameters;
      std::string FolderToRestore;
    };

    struct FullRestoreOperationOptions final
    {
      RestoreOperationParameters RestoreBlobDetails;
    };

    struct RestoreStatusOptions final
    {
      std::string JobId;
    };

    struct SelectiveKeyRestoreOperation final
    {
      std::string Status;
      std::string StatusDetails;
      Error Error;
      std::string JobId;
      DateTime StartTime;
      Nullable<DateTime> EndTime;
    };

    struct SelectiveKeyRestoreOperationParameters final
    {
      SasTokenParameter SasTokenParameters;
      std::string Folder;
    };

    struct SelectiveKeyRestoreOperationOptions final
    {
      std::string KeyName;
      SelectiveKeyRestoreOperationParameters RestoreBlobDetails;
    };
}}}}} // namespace Azure::Security::KeyVault::Administration::Models
