<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="indexpage" kind="page">
    <compoundname>index</compoundname>
    <title>Azure Identity client library for C++</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><anchor id="index_1md__r_e_a_d_m_e"/>The Azure Identity library provides Microsoft Entra ID (<ulink url="https://learn.microsoft.com/azure/active-directory/fundamentals/new-name">formerly Azure Active Directory</ulink>) token authentication support across the Azure SDK. It provides a set of <computeroutput>TokenCredential</computeroutput> implementations which can be used to construct Azure SDK clients which support Microsoft Entra token authentication. This library follows the <ulink url="https://azure.github.io/azure-sdk/cpp_introduction.html">Azure SDK Design Guidelines for C++</ulink>.</para>
<para><ulink url="https://github.com/Azure/azure-sdk-for-cpp/tree/main/sdk/identity/azure-identity">Source code</ulink> | <ulink url="https://azure.github.io/azure-sdk-for-cpp/">API reference documentation</ulink> | <ulink url="https://learn.microsoft.com/azure/active-directory/">Microsoft Entra ID documentation</ulink></para>
<sect1 id="index_1getting-started">
<title>Getting started</title><sect2 id="index_1include-the-package">
<title>Include the package</title><para>The easiest way to acquire the C++ SDK is leveraging vcpkg package manager. See the corresponding <ulink url="https://github.com/Azure/azure-sdk-for-cpp#download--install-the-sdk">Azure SDK for C++ readme section</ulink>.</para>
<para>To install Azure Identity package via vcpkg:</para>
<para><programlisting filename=".cmd"><codeline><highlight class="normal">&gt;<sp/>vcpkg<sp/>install<sp/>azure-identity-cpp</highlight></codeline>
</programlisting></para>
<para>Then, use in your CMake file:</para>
<para><programlisting filename=".CMake"><codeline><highlight class="normal">find_package(azure-identity-cpp<sp/>CONFIG<sp/>REQUIRED)</highlight></codeline>
<codeline><highlight class="normal">target_link_libraries(&lt;your<sp/>project<sp/>name&gt;<sp/>PRIVATE<sp/>Azure::azure-identity)</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="index_1prerequisites">
<title>Prerequisites</title><para><itemizedlist>
<listitem><para>An [Azure subscription][azure_sub].</para>
</listitem><listitem><para>The <ulink url="https://learn.microsoft.com/cli/azure">Azure CLI</ulink> can also be useful for authenticating in a development environment, creating accounts, and managing account roles.</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="index_1authenticate-the-client">
<title>Authenticate the client</title><para>When debugging and executing code locally it is typical for a developer to use their own account for authenticating calls to Azure services. There are several developer tools which can be used to perform this authentication in your development environment.</para>
<sect3 id="index_1authenticate-via-the-azure-cli">
<title>Authenticate via the Azure CLI</title><para>Developers can use the <ulink url="https://learn.microsoft.com/cli/azure">Azure CLI</ulink> to authenticate. Applications using the <computeroutput>DefaultAzureCredential</computeroutput> or the <computeroutput>AzureCliCredential</computeroutput> can then use this account to authenticate calls in their application when running locally.</para>
<para>To authenticate with the <ulink url="https://learn.microsoft.com/cli/azure">Azure CLI</ulink>, users can run the command <computeroutput>az login</computeroutput>. For users running on a system with a default web browser, the Azure CLI will launch the browser to authenticate the user.</para>
</sect3>
</sect2>
</sect1>
<sect1 id="index_1key-concepts">
<title>Key concepts</title><sect2 id="index_1credentials">
<title>Credentials</title><para>A credential is a class which contains or can obtain the data needed for a service client to authenticate requests. Service clients across Azure SDK accept credentials when they are constructed, and service clients use those credentials to authenticate requests to the service.</para>
<para>The Azure Identity library focuses on OAuth authentication with Microsoft Entra ID, and it offers a variety of credential classes capable of acquiring a Microsoft Entra token to authenticate service requests. All of the credential classes in this library are implementations of the <computeroutput>TokenCredential</computeroutput> abstract class in <ulink url="https://github.com/Azure/azure-sdk-for-cpp/tree/main/sdk/core">azure-core</ulink>, and any of them can be used by to construct service clients capable of authenticating with a <computeroutput>TokenCredential</computeroutput>.</para>
<para>See <ref refid="index_1credential-classes" kindref="member">Credential Classes</ref> for a complete listing of available credential types.</para>
</sect2>
<sect2 id="index_1defaultazurecredential">
<title>DefaultAzureCredential</title><para><computeroutput>DefaultAzureCredential</computeroutput> combines credentials commonly used to authenticate when deployed, with credentials used to authenticate in a development environment.</para>
<para><blockquote><para><zwj/>Note: <computeroutput>DefaultAzureCredential</computeroutput> is intended to simplify getting started with the SDK by handling common scenarios with reasonable default behaviors. It is not recommended to use it in production. Developers who want more control or whose scenario isn&apos;t served by the default settings should use other credential types. </para>
</blockquote>The <computeroutput>DefaultAzureCredential</computeroutput> attempts to authenticate via the following mechanisms, in this order, stopping when one succeeds:</para>
<para><image type="html" name="https://github.com/Azure/azure-sdk-for-cpp/blob/main/sdk/identity/azure-identity/img/mermaidjs/DefaultAzureCredentialAuthFlow.svg" alt="DefaultAzureCredential authentication flow" inline="yes"></image>
</para>
<para><orderedlist>
<listitem><para><bold>Environment</bold> - The <computeroutput>DefaultAzureCredential</computeroutput> will read account information specified via <ref refid="index_1environment-variables" kindref="member">environment variables</ref> and use it to authenticate.</para>
</listitem></orderedlist>
<orderedlist>
<listitem><para><bold>Workload Identity Credential</bold> - If the developer authenticates using a Kubernetes service account token.</para>
</listitem></orderedlist>
<orderedlist>
<listitem><para><bold>Azure CLI</bold> - If the developer has authenticated an account via the Azure CLI <computeroutput>az login</computeroutput> command, the <computeroutput>DefaultAzureCredential</computeroutput> will authenticate with that account.</para>
</listitem></orderedlist>
<orderedlist>
<listitem><para><bold>Managed Identity</bold> - If the application is deployed to an Azure host with Managed Identity enabled, the <computeroutput>DefaultAzureCredential</computeroutput> will authenticate with that account.</para>
</listitem></orderedlist>
</para>
<para>Even though the credentials being used and their order is documented, it may change from release to release.</para>
<para><computeroutput>DefaultAzureCredential</computeroutput> intends to provide a credential that &quot;just works out of the box and without requiring any information&quot;, if only the environment is set up sufficiently for the credential to work. Therefore, it could be simple to use, but since it uses a chain of credentials, it could be a bit complicated to diagnose if the environment setup is not sufficient. To help with this, <computeroutput>DefaultAzureCredential</computeroutput> code paths are instrumented with <ref refid="index_1troubleshooting" kindref="member">log messages</ref>.</para>
</sect2>
</sect1>
<sect1 id="index_1examples">
<title>Examples</title><para>See the <ulink url="https://github.com/Azure/azure-sdk-for-cpp/tree/main/sdk/identity/azure-identity/samples">code samples</ulink>.</para>
</sect1>
<sect1 id="index_1chained-token-credential">
<title>Chained Token Credential</title><para><computeroutput>ChainedTokenCredential</computeroutput> allows users to set up custom authentication flow consisting of multiple credentials.</para>
<para>An example below demonstrates using <computeroutput>ChainedTokenCredential</computeroutput> which will attempt to authenticate using <computeroutput>EnvironmentCredential</computeroutput>, and fall back to authenticate using <computeroutput>ManagedIdentityCredential</computeroutput>. <programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>A<sp/>configuration<sp/>demonstrated<sp/>below<sp/>would<sp/>authenticate<sp/>using<sp/>EnvironmentCredential<sp/>if<sp/>it<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>available,<sp/>and<sp/>if<sp/>it<sp/>is<sp/>not<sp/>available,<sp/>would<sp/>fall<sp/>back<sp/>to<sp/>use<sp/>AzureCliCredential,<sp/>and<sp/>then<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>ManagedIdentityCredential.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>chainedTokenCredential<sp/>=<sp/>std::make_shared&lt;Azure::Identity::ChainedTokenCredential&gt;(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_azure_1_1_identity_1_1_chained_token_credential_1a5e012bf32300712f1f9dbdbbf2af2db0" kindref="member">Azure::Identity::ChainedTokenCredential::Sources</ref>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;Azure::Identity::EnvironmentCredential&gt;(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;Azure::Identity::AzureCliCredential&gt;(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;Azure::Identity::ManagedIdentityCredential&gt;()});</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">Azure::Service::Client<sp/>azureServiceClient(</highlight><highlight class="stringliteral">&quot;serviceUrl&quot;</highlight><highlight class="normal">,<sp/>chainedTokenCredential);</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="index_1managed-identity-support">
<title>Managed Identity Support</title><para>The <ulink url="https://docs.microsoft.com/azure/active-directory/managed-identities-azure-resources/overview">Managed identity authentication</ulink> is supported via the <computeroutput>ManagedIdentityCredential</computeroutput> for the following Azure Services:<itemizedlist>
<listitem><para><ulink url="https://docs.microsoft.com/azure/app-service/overview-managed-identity">Azure App Service and Azure Functions</ulink></para>
</listitem><listitem><para><ulink url="https://docs.microsoft.com/azure/cloud-shell/msi-authorization">Azure Cloud Shell</ulink></para>
</listitem><listitem><para><ulink url="https://docs.microsoft.com/azure/azure-arc/servers/managed-identity-authentication">Azure Arc</ulink></para>
</listitem><listitem><para><ulink url="https://docs.microsoft.com/azure/active-directory/managed-identities-azure-resources/how-to-use-vm-token">Azure Virtual Machines</ulink></para>
</listitem></itemizedlist>
</para>
</sect1>
<sect1 id="index_1environment-variables">
<title>Environment Variables</title><para><computeroutput>DefaultAzureCredential</computeroutput> and <computeroutput>EnvironmentCredential</computeroutput> can be configured with environment variables. Each type of authentication requires values for specific variables:</para>
<sect2 id="index_1service-principal-with-secret">
<title>Service principal with secret</title><para><table rows="5" cols="2"><row>
<entry thead="yes"><para>Variable name   </para>
</entry><entry thead="yes"><para>Value    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>AZURE_TENANT_ID</computeroutput>   </para>
</entry><entry thead="no"><para>ID of the application&apos;s Microsoft Entra tenant    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>AZURE_CLIENT_ID</computeroutput>   </para>
</entry><entry thead="no"><para>ID of a Microsoft Entra application    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>AZURE_CLIENT_SECRET</computeroutput>   </para>
</entry><entry thead="no"><para>one of the application&apos;s client secrets    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>AZURE_AUTHORITY_HOST</computeroutput>   </para>
</entry><entry thead="no"><para>(optional) <ulink url="https://docs.microsoft.com/azure/active-directory/develop/authentication-national-cloud">authentication authority URL</ulink>   </para>
</entry></row>
</table>
</para>
</sect2>
<sect2 id="index_1service-principal-with-certificate">
<title>Service principal with certificate</title><para><table rows="5" cols="2"><row>
<entry thead="yes"><para>variable name   </para>
</entry><entry thead="yes"><para>Value    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>AZURE_CLIENT_ID</computeroutput>   </para>
</entry><entry thead="no"><para>ID of a Microsoft Entra application    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>AZURE_TENANT_ID</computeroutput>   </para>
</entry><entry thead="no"><para>ID of the application&apos;s Microsoft Entra tenant    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>AZURE_CLIENT_CERTIFICATE_PATH</computeroutput>   </para>
</entry><entry thead="no"><para>path to a PFX or PEM-encoded certificate file including private key    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>AZURE_AUTHORITY_HOST</computeroutput>   </para>
</entry><entry thead="no"><para>(optional) <ulink url="https://docs.microsoft.com/azure/active-directory/develop/authentication-national-cloud">authentication authority URL</ulink>   </para>
</entry></row>
</table>
</para>
<para>Configuration is attempted in the above order. For example, if values for a client secret and certificate are both present, the client secret will be used.</para>
</sect2>
</sect1>
<sect1 id="index_1credential-classes">
<title>Credential classes</title><sect2 id="index_1authenticate-azure-hosted-applications">
<title>Authenticate Azure-hosted applications</title><para><table rows="6" cols="2"><row>
<entry thead="yes"><para>Credential   </para>
</entry><entry thead="yes"><para>Usage    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>DefaultAzureCredential</computeroutput>   </para>
</entry><entry thead="no"><para>Provides a simplified authentication experience to quickly start developing applications run in Azure.    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>ChainedTokenCredential</computeroutput>   </para>
</entry><entry thead="no"><para>Allows users to define custom authentication flows composing multiple credentials.    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>ManagedIdentityCredential</computeroutput>   </para>
</entry><entry thead="no"><para>Authenticates the managed identity of an Azure resource.    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>EnvironmentCredential</computeroutput>   </para>
</entry><entry thead="no"><para>Authenticates a service principal or user via credential information specified in environment variables.    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>WorkloadIdentityCredential</computeroutput>   </para>
</entry><entry thead="no"><para>Authenticate a workload identity on Kubernetes.   </para>
</entry></row>
</table>
</para>
</sect2>
<sect2 id="index_1authenticate-service-principals">
<title>Authenticate service principals</title><para><table rows="3" cols="2"><row>
<entry thead="yes"><para>Credential   </para>
</entry><entry thead="yes"><para>Usage    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>ClientSecretCredential</computeroutput>   </para>
</entry><entry thead="no"><para>Authenticates a service principal <ulink url="https://learn.microsoft.com/azure/active-directory/develop/app-objects-and-service-principals">using a secret</ulink>.    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>ClientCertificateCredential</computeroutput>   </para>
</entry><entry thead="no"><para>Authenticates a service principal <ulink url="https://learn.microsoft.com/azure/active-directory/develop/app-objects-and-service-principals">using a certificate</ulink>.   </para>
</entry></row>
</table>
</para>
</sect2>
<sect2 id="index_1authenticate-via-development-tools">
<title>Authenticate via development tools</title><para><table rows="2" cols="2"><row>
<entry thead="yes"><para>Credential   </para>
</entry><entry thead="yes"><para>Usage    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>AzureCliCredential</computeroutput>   </para>
</entry><entry thead="no"><para>Authenticates in a development environment <ulink url="https://learn.microsoft.com/cli/azure/authenticate-azure-cli">with the Azure CLI</ulink>.   </para>
</entry></row>
</table>
</para>
</sect2>
</sect1>
<sect1 id="index_1troubleshooting">
<title>Troubleshooting</title><para><orderedlist>
<listitem><para>Azure Identity <ulink url="https://github.com/Azure/azure-sdk-for-cpp/tree/main/sdk/core/azure-core#sdk-log-messages">SDK log messages</ulink> contain disgnostic information, and start with &quot;`Identity: `&quot;.</para>
</listitem></orderedlist>
<orderedlist>
<listitem><para>Credentials raise exceptions either when they fail to authenticate or cannot execute authentication. When a credential fails to authenticate, an <computeroutput>AuthenticationException</computeroutput> is thrown. The exception has the <computeroutput>what()</computeroutput> function that provides more information about the failure.</para>
</listitem></orderedlist>
</para>
</sect1>
<sect1 id="index_1contributing">
<title>Contributing</title><para>For details on contributing to this repository, see the <ulink url="https://github.com/Azure/azure-sdk-for-cpp/blob/main/CONTRIBUTING.md">contributing guide</ulink>.</para>
<para>This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit the <ulink url="https://cla.microsoft.com">Contributor License Agreement</ulink>.</para>
<para>When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.</para>
<para>This project has adopted the <ulink url="https://opensource.microsoft.com/codeofconduct/">Microsoft Open Source Code of Conduct</ulink>. For more information see the <ulink url="https://opensource.microsoft.com/codeofconduct/faq/">Code of Conduct FAQ</ulink> or contact <ulink url="mailto:opencode@microsoft.com">opencode@microsoft.com</ulink> with any additional questions or comments.</para>
<sect2 id="index_1additional-helpful-links-for-contributors">
<title>Additional Helpful Links for Contributors</title><para>Many people all over the world have helped make this project better. You&apos;ll want to check out:</para>
<para><itemizedlist>
<listitem><para><ulink url="https://github.com/azure/azure-sdk-for-cpp/issues?q=is%3Aopen+is%3Aissue+label%3A%22up+for+grabs%22">What are some good first issues for new contributors to the repo?</ulink></para>
</listitem><listitem><para><ulink url="https://github.com/Azure/azure-sdk-for-cpp/blob/main/CONTRIBUTING.md#developer-guide">How to build and test your change</ulink></para>
</listitem><listitem><para><ulink url="https://github.com/Azure/azure-sdk-for-cpp/blob/main/CONTRIBUTING.md#pull-requests">How you can make a change happen!</ulink></para>
</listitem><listitem><para>Frequently Asked Questions (FAQ) and Conceptual Topics in the detailed <ulink url="https://github.com/azure/azure-sdk-for-cpp/wiki">Azure SDK for C++ wiki</ulink>.</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="index_1reporting-security-issues-and-security-bugs">
<title>Reporting security issues and security bugs</title><para>Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) <ulink url="mailto:secure@microsoft.com">secure@microsoft.com</ulink>. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the <ulink url="https://www.microsoft.com/msrc/faqs-report-an-issue">Security TechCenter</ulink>.</para>
</sect2>
<sect2 id="index_1license">
<title>License</title><para>Azure SDK for C++ is licensed under the <ulink url="https://github.com/Azure/azure-sdk-for-cpp/blob/main/LICENSE.txt">MIT</ulink> license. </para>
</sect2>
</sect1>
    </detaileddescription>
    <location file="README.md"/>
  </compounddef>
</doxygen>
