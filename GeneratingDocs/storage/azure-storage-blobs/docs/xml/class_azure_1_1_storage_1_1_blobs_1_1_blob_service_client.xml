<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Azure::Storage::Blobs::BlobServiceClient</compoundname>
    <includes refid="blob__service__client_8hpp" local="no">blob_service_client.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a143d6dfbae859a563d35780639d743a2" prot="private" static="no" mutable="no">
        <type>Azure::Core::Url</type>
        <definition>Azure::Core::Url Azure::Storage::Blobs::BlobServiceClient::m_serviceUrl</definition>
        <argsstring></argsstring>
        <name>m_serviceUrl</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::m_serviceUrl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="272" column="22" bodyfile="inc/azure/storage/blobs/blob_service_client.hpp" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1ab4d4f43b83c2052fb6dc84724fc1f989" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; Azure::Core::Http::_internal::HttpPipeline &gt;</type>
        <definition>std::shared_ptr&lt;Azure::Core::Http::_internal::HttpPipeline&gt; Azure::Storage::Blobs::BlobServiceClient::m_pipeline</definition>
        <argsstring></argsstring>
        <name>m_pipeline</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::m_pipeline</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="273" column="21" bodyfile="inc/azure/storage/blobs/blob_service_client.hpp" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a9aace1b9d09181a84cdca90d8acfdea1" prot="private" static="no" mutable="no">
        <type>Azure::Nullable&lt; <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_encryption_key" kindref="compound">EncryptionKey</ref> &gt;</type>
        <definition>Azure::Nullable&lt;EncryptionKey&gt; Azure::Storage::Blobs::BlobServiceClient::m_customerProvidedKey</definition>
        <argsstring></argsstring>
        <name>m_customerProvidedKey</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::m_customerProvidedKey</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="274" column="21" bodyfile="inc/azure/storage/blobs/blob_service_client.hpp" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1ab990bb5a4cdf108008e63429abfe1766" prot="private" static="no" mutable="no">
        <type>Azure::Nullable&lt; std::string &gt;</type>
        <definition>Azure::Nullable&lt;std::string&gt; Azure::Storage::Blobs::BlobServiceClient::m_encryptionScope</definition>
        <argsstring></argsstring>
        <name>m_encryptionScope</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::m_encryptionScope</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="275" column="21" bodyfile="inc/azure/storage/blobs/blob_service_client.hpp" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a91e6b84beaf880a5f30438a16c9152ee" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; Azure::Core::Http::_internal::HttpPipeline &gt;</type>
        <definition>std::shared_ptr&lt;Azure::Core::Http::_internal::HttpPipeline&gt; Azure::Storage::Blobs::BlobServiceClient::m_batchRequestPipeline</definition>
        <argsstring></argsstring>
        <name>m_batchRequestPipeline</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::m_batchRequestPipeline</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="277" column="21" bodyfile="inc/azure/storage/blobs/blob_service_client.hpp" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1ac3f74b6c32fb42c18964b53720051f09" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; Azure::Core::Http::_internal::HttpPipeline &gt;</type>
        <definition>std::shared_ptr&lt;Azure::Core::Http::_internal::HttpPipeline&gt; Azure::Storage::Blobs::BlobServiceClient::m_batchSubrequestPipeline</definition>
        <argsstring></argsstring>
        <name>m_batchSubrequestPipeline</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::m_batchSubrequestPipeline</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="278" column="21" bodyfile="inc/azure/storage/blobs/blob_service_client.hpp" bodystart="278" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a3538ab1cd294e3a0aaa2832621cc6fa8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BlobServiceBatch</definition>
        <argsstring></argsstring>
        <name>BlobServiceBatch</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::BlobServiceBatch</qualifiedname>
        <param>
          <type><ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_batch" kindref="compound">BlobServiceBatch</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="280" column="18" bodyfile="inc/azure/storage/blobs/blob_service_client.hpp" bodystart="280" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a242d4409ff882572579c2cf650c4eaca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client" kindref="compound">BlobServiceClient</ref></type>
        <definition>BlobServiceClient Azure::Storage::Blobs::BlobServiceClient::CreateFromConnectionString</definition>
        <argsstring>(const std::string &amp;connectionString, const BlobClientOptions &amp;options=BlobClientOptions())</argsstring>
        <name>CreateFromConnectionString</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::CreateFromConnectionString</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>connectionString</declname>
        </param>
        <param>
          <type>const <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_blob_client_options" kindref="compound">BlobClientOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_blob_client_options" kindref="compound">BlobClientOptions</ref>()</defval>
        </param>
        <briefdescription>
<para>Initialize a new instance of <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client" kindref="compound">BlobServiceClient</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connectionString</parametername>
</parameternamelist>
<parameterdescription>
<para>A connection string includes the authentication information required for your application to access data in an Azure Storage account at runtime. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional client options that define the transport pipeline policies for authentication, retries, etc., that are applied to every request. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client" kindref="compound">BlobServiceClient</ref> instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="33" column="30" bodyfile="src/blob_service_client.cpp" bodystart="21" bodyend="37"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1aa6a1310a65862c0c2995eb91d0e0b63e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azure::Storage::Blobs::BlobServiceClient::BlobServiceClient</definition>
        <argsstring>(const std::string &amp;serviceUrl, std::shared_ptr&lt; StorageSharedKeyCredential &gt; credential, const BlobClientOptions &amp;options=BlobClientOptions())</argsstring>
        <name>BlobServiceClient</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::BlobServiceClient</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>serviceUrl</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; StorageSharedKeyCredential &gt;</type>
          <declname>credential</declname>
        </param>
        <param>
          <type>const <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_blob_client_options" kindref="compound">BlobClientOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_blob_client_options" kindref="compound">BlobClientOptions</ref>()</defval>
        </param>
        <briefdescription>
<para>Initialize a new instance of <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client" kindref="compound">BlobServiceClient</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>serviceUrl</parametername>
</parameternamelist>
<parameterdescription>
<para>A URL referencing the blob that includes the name of the account. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>credential</parametername>
</parameternamelist>
<parameterdescription>
<para>The shared key credential used to sign requests. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional client options that define the transport pipeline policies for authentication, retries, etc., that are applied to every request. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="45" column="14" bodyfile="src/blob_service_client.cpp" bodystart="39" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a86077a1f1f3d239531106d9e1c6d02c2" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azure::Storage::Blobs::BlobServiceClient::BlobServiceClient</definition>
        <argsstring>(const std::string &amp;serviceUrl, std::shared_ptr&lt; Core::Credentials::TokenCredential &gt; credential, const BlobClientOptions &amp;options=BlobClientOptions())</argsstring>
        <name>BlobServiceClient</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::BlobServiceClient</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>serviceUrl</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; Core::Credentials::TokenCredential &gt;</type>
          <declname>credential</declname>
        </param>
        <param>
          <type>const <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_blob_client_options" kindref="compound">BlobClientOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_blob_client_options" kindref="compound">BlobClientOptions</ref>()</defval>
        </param>
        <briefdescription>
<para>Initialize a new instance of <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client" kindref="compound">BlobServiceClient</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>serviceUrl</parametername>
</parameternamelist>
<parameterdescription>
<para>A URL referencing the blob that includes the name of the account. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>credential</parametername>
</parameternamelist>
<parameterdescription>
<para>The token credential used to sign requests. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional client options that define the transport pipeline policies for authentication, retries, etc., that are applied to every request. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="58" column="14" bodyfile="src/blob_service_client.cpp" bodystart="71" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a7033edd44abb8de807ccc618b09e81e2" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azure::Storage::Blobs::BlobServiceClient::BlobServiceClient</definition>
        <argsstring>(const std::string &amp;serviceUrl, const BlobClientOptions &amp;options=BlobClientOptions())</argsstring>
        <name>BlobServiceClient</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::BlobServiceClient</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>serviceUrl</declname>
        </param>
        <param>
          <type>const <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_blob_client_options" kindref="compound">BlobClientOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_blob_client_options" kindref="compound">BlobClientOptions</ref>()</defval>
        </param>
        <briefdescription>
<para>Initialize a new instance of <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client" kindref="compound">BlobServiceClient</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>serviceUrl</parametername>
</parameternamelist>
<parameterdescription>
<para>A URL referencing the blob that includes the name of the account, and possibly also a SAS token. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional client options that define the transport pipeline policies for authentication, retries, etc., that are applied to every request. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="71" column="14" bodyfile="src/blob_service_client.cpp" bodystart="110" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a2fc5a1b74486c5ac486063ef8cafeb60" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_container_client" kindref="compound">BlobContainerClient</ref></type>
        <definition>BlobContainerClient Azure::Storage::Blobs::BlobServiceClient::GetBlobContainerClient</definition>
        <argsstring>(const std::string &amp;blobContainerName) const</argsstring>
        <name>GetBlobContainerClient</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::GetBlobContainerClient</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>blobContainerName</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_container_client" kindref="compound">BlobContainerClient</ref> object with the same URL as this <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client" kindref="compound">BlobServiceClient</ref>. The new <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_container_client" kindref="compound">BlobContainerClient</ref> uses the same request policy pipeline as this <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client" kindref="compound">BlobServiceClient</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>blobContainerName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the container to reference. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_container_client" kindref="compound">BlobContainerClient</ref> instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="82" column="25" bodyfile="src/blob_service_client.cpp" bodystart="137" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a9cc5a9e05028ac608c17e50f4d379fc7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Azure::Storage::Blobs::BlobServiceClient::GetUrl</definition>
        <argsstring>() const</argsstring>
        <name>GetUrl</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::GetUrl</qualifiedname>
        <briefdescription>
<para>Gets the blob service&apos;s primary URL endpoint. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the blob service&apos;s primary URL endpoint. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="89" column="17" bodyfile="inc/azure/storage/blobs/blob_service_client.hpp" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a4c1b81e4745e98a79e75b340bc66f9f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_azure_1_1_storage_1_1_blobs_1_1_list_blob_containers_paged_response" kindref="compound">ListBlobContainersPagedResponse</ref></type>
        <definition>ListBlobContainersPagedResponse Azure::Storage::Blobs::BlobServiceClient::ListBlobContainers</definition>
        <argsstring>(const ListBlobContainersOptions &amp;options=ListBlobContainersOptions(), const Azure::Core::Context &amp;context=Azure::Core::Context()) const</argsstring>
        <name>ListBlobContainers</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::ListBlobContainers</qualifiedname>
        <param>
          <type>const <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_list_blob_containers_options" kindref="compound">ListBlobContainersOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_list_blob_containers_options" kindref="compound">ListBlobContainersOptions</ref>()</defval>
        </param>
        <param>
          <type>const Azure::Core::Context &amp;</type>
          <declname>context</declname>
          <defval>Azure::Core::Context()</defval>
        </param>
        <briefdescription>
<para>Returns a collection of blob containers in the storage account. Enumerating the blob containers may make multiple requests to the service while fetching all the values. Containers are ordered lexicographically by name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional parameters to execute this function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context for cancelling long running operations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_list_blob_containers_paged_response" kindref="compound">ListBlobContainersPagedResponse</ref> describing the blob containers in the storage account. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="101" column="37" bodyfile="src/blob_service_client.cpp" bodystart="152" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a0a6c2305c9f339c75f074946105b69bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Azure::Response&lt; <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_models_1_1_user_delegation_key" kindref="compound">Models::UserDelegationKey</ref> &gt;</type>
        <definition>Azure::Response&lt; Models::UserDelegationKey &gt; Azure::Storage::Blobs::BlobServiceClient::GetUserDelegationKey</definition>
        <argsstring>(const Azure::DateTime &amp;expiresOn, const GetUserDelegationKeyOptions &amp;options=GetUserDelegationKeyOptions(), const Azure::Core::Context &amp;context=Azure::Core::Context()) const</argsstring>
        <name>GetUserDelegationKey</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::GetUserDelegationKey</qualifiedname>
        <param>
          <type>const Azure::DateTime &amp;</type>
          <declname>expiresOn</declname>
        </param>
        <param>
          <type>const <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_get_user_delegation_key_options" kindref="compound">GetUserDelegationKeyOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_get_user_delegation_key_options" kindref="compound">GetUserDelegationKeyOptions</ref>()</defval>
        </param>
        <param>
          <type>const Azure::Core::Context &amp;</type>
          <declname>context</declname>
          <defval>Azure::Core::Context()</defval>
        </param>
        <briefdescription>
<para>Retrieves a key that can be used to delegate Active Directory authorization to shared access signatures. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expiresOn</parametername>
</parameternamelist>
<parameterdescription>
<para>Expiration of the key&apos;s validity. The time should be specified in UTC, and will be truncated to second. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional parameters to execute this function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context for cancelling long running operations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A deserialized UserDelegationKey instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="115" column="21" bodyfile="src/blob_service_client.cpp" bodystart="177" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a76584c35a0d8b7762174f1b69d9c5d97" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Azure::Response&lt; <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_models_1_1_set_service_properties_result" kindref="compound">Models::SetServicePropertiesResult</ref> &gt;</type>
        <definition>Azure::Response&lt; Models::SetServicePropertiesResult &gt; Azure::Storage::Blobs::BlobServiceClient::SetProperties</definition>
        <argsstring>(Models::BlobServiceProperties properties, const SetServicePropertiesOptions &amp;options=SetServicePropertiesOptions(), const Azure::Core::Context &amp;context=Azure::Core::Context()) const</argsstring>
        <name>SetProperties</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::SetProperties</qualifiedname>
        <param>
          <type><ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_service_properties" kindref="compound">Models::BlobServiceProperties</ref></type>
          <declname>properties</declname>
        </param>
        <param>
          <type>const <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_set_service_properties_options" kindref="compound">SetServicePropertiesOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_set_service_properties_options" kindref="compound">SetServicePropertiesOptions</ref>()</defval>
        </param>
        <param>
          <type>const Azure::Core::Context &amp;</type>
          <declname>context</declname>
          <defval>Azure::Core::Context()</defval>
        </param>
        <briefdescription>
<para>Sets properties for a storage account&apos;s Blob service endpoint, including properties for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft delete settings. You can also use this operation to set the default request version for all incoming requests to the Blob service that do not have a version specified. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>The blob service properties. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional parameters to execute this function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context for cancelling long running operations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SetServicePropertiesResult on successfully setting the properties. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="131" column="21" bodyfile="src/blob_service_client.cpp" bodystart="191" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a1d4e28d0b2266fc3634891387e550e3e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Azure::Response&lt; <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_service_properties" kindref="compound">Models::BlobServiceProperties</ref> &gt;</type>
        <definition>Azure::Response&lt; Models::BlobServiceProperties &gt; Azure::Storage::Blobs::BlobServiceClient::GetProperties</definition>
        <argsstring>(const GetServicePropertiesOptions &amp;options=GetServicePropertiesOptions(), const Azure::Core::Context &amp;context=Azure::Core::Context()) const</argsstring>
        <name>GetProperties</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::GetProperties</qualifiedname>
        <param>
          <type>const <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_get_service_properties_options" kindref="compound">GetServicePropertiesOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_get_service_properties_options" kindref="compound">GetServicePropertiesOptions</ref>()</defval>
        </param>
        <param>
          <type>const Azure::Core::Context &amp;</type>
          <declname>context</declname>
          <defval>Azure::Core::Context()</defval>
        </param>
        <briefdescription>
<para>Gets the properties of a storage account&apos;s blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional parameters to execute this function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context for cancelling long running operations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A BlobServiceProperties describing the service properties. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="144" column="21" bodyfile="src/blob_service_client.cpp" bodystart="203" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a6fdba0f0336b075806cfa199827348e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Azure::Response&lt; <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_models_1_1_account_info" kindref="compound">Models::AccountInfo</ref> &gt;</type>
        <definition>Azure::Response&lt; Models::AccountInfo &gt; Azure::Storage::Blobs::BlobServiceClient::GetAccountInfo</definition>
        <argsstring>(const GetAccountInfoOptions &amp;options=GetAccountInfoOptions(), const Azure::Core::Context &amp;context=Azure::Core::Context()) const</argsstring>
        <name>GetAccountInfo</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::GetAccountInfo</qualifiedname>
        <param>
          <type>const <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_get_account_info_options" kindref="compound">GetAccountInfoOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_get_account_info_options" kindref="compound">GetAccountInfoOptions</ref>()</defval>
        </param>
        <param>
          <type>const Azure::Core::Context &amp;</type>
          <declname>context</declname>
          <defval>Azure::Core::Context()</defval>
        </param>
        <briefdescription>
<para>Returns the sku name and account kind for the specified account. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional parameters to execute this function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context for cancelling long running operations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>AccountInfo describing the account. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="155" column="21" bodyfile="src/blob_service_client.cpp" bodystart="213" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a6c68548a65a91cb3eacf64cc02e433a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Azure::Response&lt; <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_models_1_1_service_statistics" kindref="compound">Models::ServiceStatistics</ref> &gt;</type>
        <definition>Azure::Response&lt; Models::ServiceStatistics &gt; Azure::Storage::Blobs::BlobServiceClient::GetStatistics</definition>
        <argsstring>(const GetBlobServiceStatisticsOptions &amp;options=GetBlobServiceStatisticsOptions(), const Azure::Core::Context &amp;context=Azure::Core::Context()) const</argsstring>
        <name>GetStatistics</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::GetStatistics</qualifiedname>
        <param>
          <type>const <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_get_blob_service_statistics_options" kindref="compound">GetBlobServiceStatisticsOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_get_blob_service_statistics_options" kindref="compound">GetBlobServiceStatisticsOptions</ref>()</defval>
        </param>
        <param>
          <type>const Azure::Core::Context &amp;</type>
          <declname>context</declname>
          <defval>Azure::Core::Context()</defval>
        </param>
        <briefdescription>
<para>Retrieves statistics related to replication for the Blob service. It is only available on the secondary location endpoint when read-access geo-redundant replication is enabled for the storage account. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional parameters to execute this function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context for cancelling long running operations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A ServiceStatistics describing the service replication statistics. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="168" column="21" bodyfile="src/blob_service_client.cpp" bodystart="223" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a1f9dee55ba02c4935824de8288b9f451" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_azure_1_1_storage_1_1_blobs_1_1_find_blobs_by_tags_paged_response" kindref="compound">FindBlobsByTagsPagedResponse</ref></type>
        <definition>FindBlobsByTagsPagedResponse Azure::Storage::Blobs::BlobServiceClient::FindBlobsByTags</definition>
        <argsstring>(const std::string &amp;tagFilterSqlExpression, const FindBlobsByTagsOptions &amp;options=FindBlobsByTagsOptions(), const Azure::Core::Context &amp;context=Azure::Core::Context()) const</argsstring>
        <name>FindBlobsByTags</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::FindBlobsByTags</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>tagFilterSqlExpression</declname>
        </param>
        <param>
          <type>const <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_find_blobs_by_tags_options" kindref="compound">FindBlobsByTagsOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_find_blobs_by_tags_options" kindref="compound">FindBlobsByTagsOptions</ref>()</defval>
        </param>
        <param>
          <type>const Azure::Core::Context &amp;</type>
          <declname>context</declname>
          <defval>Azure::Core::Context()</defval>
        </param>
        <briefdescription>
<para>The Filter Blobs operation enables callers to list blobs across all containers whose tags match a given search expression. Filter blobs searches across all containers within a storage account but can be scoped within the expression to a single container. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagFilterSqlExpression</parametername>
</parameternamelist>
<parameterdescription>
<para>The where parameter enables the caller to query blobs whose tags match a given expression. The given expression must evaluate to true for a blob to be returned in the results. The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter, however, only a subset of the OData filter syntax is supported in the Blob service. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional parameters to execute this function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context for cancelling long running operations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_find_blobs_by_tags_paged_response" kindref="compound">FindBlobsByTagsPagedResponse</ref> describing the blobs. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="186" column="34" bodyfile="src/blob_service_client.cpp" bodystart="233" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a6a5a1b5d666fe80533f3c25323de228e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Azure::Response&lt; <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_container_client" kindref="compound">BlobContainerClient</ref> &gt;</type>
        <definition>Azure::Response&lt; BlobContainerClient &gt; Azure::Storage::Blobs::BlobServiceClient::CreateBlobContainer</definition>
        <argsstring>(const std::string &amp;blobContainerName, const CreateBlobContainerOptions &amp;options=CreateBlobContainerOptions(), const Azure::Core::Context &amp;context=Azure::Core::Context()) const</argsstring>
        <name>CreateBlobContainer</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::CreateBlobContainer</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>blobContainerName</declname>
        </param>
        <param>
          <type>const <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_create_blob_container_options" kindref="compound">CreateBlobContainerOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_create_blob_container_options" kindref="compound">CreateBlobContainerOptions</ref>()</defval>
        </param>
        <param>
          <type>const Azure::Core::Context &amp;</type>
          <declname>context</declname>
          <defval>Azure::Core::Context()</defval>
        </param>
        <briefdescription>
<para>Creates a new blob container under the specified account. If the container with the same name already exists, the operation fails. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>blobContainerName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the container to create. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional parameters to execute this function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context for cancelling long running operations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_container_client" kindref="compound">BlobContainerClient</ref> referencing the newly created container. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="200" column="21" bodyfile="src/blob_service_client.cpp" bodystart="258" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1ae256ba4df8ce65922a94a07ee6957a64" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Azure::Response&lt; <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_models_1_1_delete_blob_container_result" kindref="compound">Models::DeleteBlobContainerResult</ref> &gt;</type>
        <definition>Azure::Response&lt; Models::DeleteBlobContainerResult &gt; Azure::Storage::Blobs::BlobServiceClient::DeleteBlobContainer</definition>
        <argsstring>(const std::string &amp;blobContainerName, const DeleteBlobContainerOptions &amp;options=DeleteBlobContainerOptions(), const Azure::Core::Context &amp;context=Azure::Core::Context()) const</argsstring>
        <name>DeleteBlobContainer</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::DeleteBlobContainer</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>blobContainerName</declname>
        </param>
        <param>
          <type>const <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_delete_blob_container_options" kindref="compound">DeleteBlobContainerOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_delete_blob_container_options" kindref="compound">DeleteBlobContainerOptions</ref>()</defval>
        </param>
        <param>
          <type>const Azure::Core::Context &amp;</type>
          <declname>context</declname>
          <defval>Azure::Core::Context()</defval>
        </param>
        <briefdescription>
<para>Marks the specified blob container for deletion. The container and any blobs contained within it are later deleted during garbage collection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>blobContainerName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the container to delete. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional parameters to execute this function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context for cancelling long running operations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A DeleteBlobContainerResult if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="214" column="21" bodyfile="src/blob_service_client.cpp" bodystart="269" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1ac94d07bc951b72bd238ea7360a9fde59" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Azure::Response&lt; <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_container_client" kindref="compound">BlobContainerClient</ref> &gt;</type>
        <definition>Azure::Response&lt; BlobContainerClient &gt; Azure::Storage::Blobs::BlobServiceClient::UndeleteBlobContainer</definition>
        <argsstring>(const std::string &amp;deletedBlobContainerName, const std::string &amp;deletedBlobContainerVersion, const UndeleteBlobContainerOptions &amp;options=UndeleteBlobContainerOptions(), const Azure::Core::Context &amp;context=Azure::Core::Context()) const</argsstring>
        <name>UndeleteBlobContainer</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::UndeleteBlobContainer</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>deletedBlobContainerName</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>deletedBlobContainerVersion</declname>
        </param>
        <param>
          <type>const <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_undelete_blob_container_options" kindref="compound">UndeleteBlobContainerOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_undelete_blob_container_options" kindref="compound">UndeleteBlobContainerOptions</ref>()</defval>
        </param>
        <param>
          <type>const Azure::Core::Context &amp;</type>
          <declname>context</declname>
          <defval>Azure::Core::Context()</defval>
        </param>
        <briefdescription>
<para>Restores a previously deleted container. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deletedBlobContainerName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the previously deleted container. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deletedBlobContainerVersion</parametername>
</parameternamelist>
<parameterdescription>
<para>The version of the previously deleted container. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional parameters to execute this function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context for cancelling long running operations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_container_client" kindref="compound">BlobContainerClient</ref> referencing the undeleted container. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="228" column="21" bodyfile="src/blob_service_client.cpp" bodystart="278" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1ae36f455c373a9b31121d839568021dad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Azure::Response&lt; <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_container_client" kindref="compound">BlobContainerClient</ref> &gt;</type>
        <definition>Azure::Response&lt; BlobContainerClient &gt; Azure::Storage::Blobs::BlobServiceClient::RenameBlobContainer</definition>
        <argsstring>(const std::string &amp;sourceBlobContainerName, const std::string &amp;destinationBlobContainerName, const RenameBlobContainerOptions &amp;options=RenameBlobContainerOptions(), const Azure::Core::Context &amp;context=Azure::Core::Context()) const</argsstring>
        <name>RenameBlobContainer</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::RenameBlobContainer</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>sourceBlobContainerName</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>destinationBlobContainerName</declname>
        </param>
        <param>
          <type>const <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_rename_blob_container_options" kindref="compound">RenameBlobContainerOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_rename_blob_container_options" kindref="compound">RenameBlobContainerOptions</ref>()</defval>
        </param>
        <param>
          <type>const Azure::Core::Context &amp;</type>
          <declname>context</declname>
          <defval>Azure::Core::Context()</defval>
        </param>
        <briefdescription>
<para>Renames an existing blob container. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sourceBlobContainerName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the source container. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destinationBlobContainerName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the destination container. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional parameters to execute this function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context for cancelling long running operations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_container_client" kindref="compound">BlobContainerClient</ref> referencing the renamed container. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="242" column="21" bodyfile="src/blob_service_client.cpp" bodystart="298" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1ab1eebb7f3a5e1cb6f3f14d349eb9efea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_batch" kindref="compound">BlobServiceBatch</ref></type>
        <definition>BlobServiceBatch Azure::Storage::Blobs::BlobServiceClient::CreateBatch</definition>
        <argsstring>() const</argsstring>
        <name>CreateBatch</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::CreateBatch</qualifiedname>
        <briefdescription>
<para>Creates a new batch object to collect subrequests that can be submitted together via SubmitBatch. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A new batch object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="254" column="22" bodyfile="src/blob_service_client.cpp" bodystart="316" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a1ee857beb2d70d56c0400563bb6043c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Response&lt; <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_models_1_1_submit_blob_batch_result" kindref="compound">Models::SubmitBlobBatchResult</ref> &gt;</type>
        <definition>Response&lt; Models::SubmitBlobBatchResult &gt; Azure::Storage::Blobs::BlobServiceClient::SubmitBatch</definition>
        <argsstring>(const BlobServiceBatch &amp;batch, const SubmitBlobBatchOptions &amp;options=SubmitBlobBatchOptions(), const Core::Context &amp;context=Core::Context()) const</argsstring>
        <name>SubmitBatch</name>
        <qualifiedname>Azure::Storage::Blobs::BlobServiceClient::SubmitBatch</qualifiedname>
        <param>
          <type>const <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_batch" kindref="compound">BlobServiceBatch</ref> &amp;</type>
          <declname>batch</declname>
        </param>
        <param>
          <type>const <ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_submit_blob_batch_options" kindref="compound">SubmitBlobBatchOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_submit_blob_batch_options" kindref="compound">SubmitBlobBatchOptions</ref>()</defval>
        </param>
        <param>
          <type>const Core::Context &amp;</type>
          <declname>context</declname>
          <defval>Core::Context()</defval>
        </param>
        <briefdescription>
<para>Submits a batch of subrequests. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>batch</parametername>
</parameternamelist>
<parameterdescription>
<para>The batch object containing subrequests. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional parameters to execute this function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context for cancelling long running operations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SubmitBlobBatchResult. </para>
</simplesect>
<simplesect kind="remark"><para>This function will throw only if there&apos;s something wrong with the batch request (parent request). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="266" column="14" bodyfile="src/blob_service_client.cpp" bodystart="318" bodyend="335"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client" kindref="compound">BlobServiceClient</ref> allows you to manipulate Azure Storage service resources and blob containers. The storage account provides the top-level namespace for the Blob service. </para>
    </detaileddescription>
    <location file="inc/azure/storage/blobs/blob_service_client.hpp" line="22" column="3" bodyfile="inc/azure/storage/blobs/blob_service_client.hpp" bodystart="22" bodyend="281"/>
    <listofallmembers>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a3538ab1cd294e3a0aaa2832621cc6fa8" prot="private" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>BlobServiceBatch</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1aa6a1310a65862c0c2995eb91d0e0b63e" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>BlobServiceClient</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a86077a1f1f3d239531106d9e1c6d02c2" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>BlobServiceClient</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a7033edd44abb8de807ccc618b09e81e2" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>BlobServiceClient</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1ab1eebb7f3a5e1cb6f3f14d349eb9efea" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>CreateBatch</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a6a5a1b5d666fe80533f3c25323de228e" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>CreateBlobContainer</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a242d4409ff882572579c2cf650c4eaca" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>CreateFromConnectionString</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1ae256ba4df8ce65922a94a07ee6957a64" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>DeleteBlobContainer</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a1f9dee55ba02c4935824de8288b9f451" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>FindBlobsByTags</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a6fdba0f0336b075806cfa199827348e5" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>GetAccountInfo</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a2fc5a1b74486c5ac486063ef8cafeb60" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>GetBlobContainerClient</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a1d4e28d0b2266fc3634891387e550e3e" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>GetProperties</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a6c68548a65a91cb3eacf64cc02e433a8" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>GetStatistics</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a9cc5a9e05028ac608c17e50f4d379fc7" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>GetUrl</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a0a6c2305c9f339c75f074946105b69bf" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>GetUserDelegationKey</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a4c1b81e4745e98a79e75b340bc66f9f7" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>ListBlobContainers</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a91e6b84beaf880a5f30438a16c9152ee" prot="private" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>m_batchRequestPipeline</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1ac3f74b6c32fb42c18964b53720051f09" prot="private" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>m_batchSubrequestPipeline</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a9aace1b9d09181a84cdca90d8acfdea1" prot="private" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>m_customerProvidedKey</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1ab990bb5a4cdf108008e63429abfe1766" prot="private" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>m_encryptionScope</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1ab4d4f43b83c2052fb6dc84724fc1f989" prot="private" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>m_pipeline</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a143d6dfbae859a563d35780639d743a2" prot="private" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>m_serviceUrl</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1ae36f455c373a9b31121d839568021dad" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>RenameBlobContainer</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a76584c35a0d8b7762174f1b69d9c5d97" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>SetProperties</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1a1ee857beb2d70d56c0400563bb6043c8" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>SubmitBatch</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_service_client_1ac94d07bc951b72bd238ea7360a9fde59" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::BlobServiceClient</scope><name>UndeleteBlobContainer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
