<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Azure::Storage::Blobs::Models::BlobType</compoundname>
    <includes refid="rest__client_8hpp" local="no">rest_client.hpp</includes>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type_1a7a460df482b2ce66428a26730380166e" prot="public" static="yes" mutable="no">
        <type>AZ_STORAGE_BLOBS_DLLEXPORT static const <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type" kindref="compound">BlobType</ref></type>
        <definition>const BlobType Azure::Storage::Blobs::Models::BlobType::BlockBlob</definition>
        <argsstring></argsstring>
        <name>BlockBlob</name>
        <qualifiedname>Azure::Storage::Blobs::Models::BlobType::BlockBlob</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constant value of type <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type" kindref="compound">BlobType</ref>: BlockBlob </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/rest_client.hpp" line="1454" column="56" bodyfile="inc/azure/storage/blobs/rest_client.hpp" bodystart="1454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type_1ac38eb2e6b86d5e2f2890a37e5ec236fb" prot="public" static="yes" mutable="no">
        <type>AZ_STORAGE_BLOBS_DLLEXPORT static const <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type" kindref="compound">BlobType</ref></type>
        <definition>const BlobType Azure::Storage::Blobs::Models::BlobType::PageBlob</definition>
        <argsstring></argsstring>
        <name>PageBlob</name>
        <qualifiedname>Azure::Storage::Blobs::Models::BlobType::PageBlob</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constant value of type <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type" kindref="compound">BlobType</ref>: PageBlob </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/rest_client.hpp" line="1456" column="56" bodyfile="inc/azure/storage/blobs/rest_client.hpp" bodystart="1456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type_1a229f856c22d6e88eb37f8c6828dbcf12" prot="public" static="yes" mutable="no">
        <type>AZ_STORAGE_BLOBS_DLLEXPORT static const <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type" kindref="compound">BlobType</ref></type>
        <definition>const BlobType Azure::Storage::Blobs::Models::BlobType::AppendBlob</definition>
        <argsstring></argsstring>
        <name>AppendBlob</name>
        <qualifiedname>Azure::Storage::Blobs::Models::BlobType::AppendBlob</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constant value of type <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type" kindref="compound">BlobType</ref>: AppendBlob </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/rest_client.hpp" line="1458" column="56" bodyfile="inc/azure/storage/blobs/rest_client.hpp" bodystart="1458" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type_1a1e314a6b65125667a8c5e19a1a092089" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Azure::Storage::Blobs::Models::BlobType::m_value</definition>
        <argsstring></argsstring>
        <name>m_value</name>
        <qualifiedname>Azure::Storage::Blobs::Models::BlobType::m_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/rest_client.hpp" line="1461" column="19" bodyfile="inc/azure/storage/blobs/rest_client.hpp" bodystart="1461" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type_1a1ede41a44d22469cf7c2da41f7eeab84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azure::Storage::Blobs::Models::BlobType::BlobType</definition>
        <argsstring>()=default</argsstring>
        <name>BlobType</name>
        <qualifiedname>Azure::Storage::Blobs::Models::BlobType::BlobType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type" kindref="compound">BlobType</ref> instance </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/rest_client.hpp" line="1444" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type_1aa7961036151d9f977a0af62520b20a48" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Azure::Storage::Blobs::Models::BlobType::BlobType</definition>
        <argsstring>(std::string value)</argsstring>
        <name>BlobType</name>
        <qualifiedname>Azure::Storage::Blobs::Models::BlobType::BlobType</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type" kindref="compound">BlobType</ref> from a string. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/rest_client.hpp" line="1446" column="16" bodyfile="inc/azure/storage/blobs/rest_client.hpp" bodystart="1446" bodyend="1446"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type_1a579e610ea8494a6681cce813e9865168" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Azure::Storage::Blobs::Models::BlobType::operator==</definition>
        <argsstring>(const BlobType &amp;other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>Azure::Storage::Blobs::Models::BlobType::operator==</qualifiedname>
        <param>
          <type>const <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type" kindref="compound">BlobType</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares with another <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type" kindref="compound">BlobType</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/rest_client.hpp" line="1448" column="12" bodyfile="inc/azure/storage/blobs/rest_client.hpp" bodystart="1448" bodyend="1448"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type_1ab8aa4ad2b25c79370b36622d3d0553c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Azure::Storage::Blobs::Models::BlobType::operator!=</definition>
        <argsstring>(const BlobType &amp;other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>Azure::Storage::Blobs::Models::BlobType::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type" kindref="compound">BlobType</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares with another <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type" kindref="compound">BlobType</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/rest_client.hpp" line="1450" column="12" bodyfile="inc/azure/storage/blobs/rest_client.hpp" bodystart="1450" bodyend="1450"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type_1ad02fed477a21259f2686d4b745445d0d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; Azure::Storage::Blobs::Models::BlobType::ToString</definition>
        <argsstring>() const</argsstring>
        <name>ToString</name>
        <qualifiedname>Azure::Storage::Blobs::Models::BlobType::ToString</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts the value to a string. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/rest_client.hpp" line="1452" column="25" bodyfile="inc/azure/storage/blobs/rest_client.hpp" bodystart="1452" bodyend="1452"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Type of the blob. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Azure::Storage::Blobs::Models::BlobType</label>
        <link refid="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type"/>
        <childnode refid="1" relation="usage">
          <edgelabel>AppendBlob</edgelabel>
          <edgelabel>BlockBlob</edgelabel>
          <edgelabel>PageBlob</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="inc/azure/storage/blobs/rest_client.hpp" line="1441" column="5" bodyfile="inc/azure/storage/blobs/rest_client.hpp" bodystart="1441" bodyend="1462"/>
    <listofallmembers>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type_1a229f856c22d6e88eb37f8c6828dbcf12" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::Models::BlobType</scope><name>AppendBlob</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type_1a1ede41a44d22469cf7c2da41f7eeab84" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::Models::BlobType</scope><name>BlobType</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type_1aa7961036151d9f977a0af62520b20a48" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::Models::BlobType</scope><name>BlobType</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type_1a7a460df482b2ce66428a26730380166e" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::Models::BlobType</scope><name>BlockBlob</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type_1a1e314a6b65125667a8c5e19a1a092089" prot="private" virt="non-virtual"><scope>Azure::Storage::Blobs::Models::BlobType</scope><name>m_value</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type_1ab8aa4ad2b25c79370b36622d3d0553c3" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::Models::BlobType</scope><name>operator!=</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type_1a579e610ea8494a6681cce813e9865168" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::Models::BlobType</scope><name>operator==</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type_1ac38eb2e6b86d5e2f2890a37e5ec236fb" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::Models::BlobType</scope><name>PageBlob</name></member>
      <member refid="class_azure_1_1_storage_1_1_blobs_1_1_models_1_1_blob_type_1ad02fed477a21259f2686d4b745445d0d" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::Models::BlobType</scope><name>ToString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
