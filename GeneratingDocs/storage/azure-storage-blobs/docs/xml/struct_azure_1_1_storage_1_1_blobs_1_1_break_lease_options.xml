<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="struct_azure_1_1_storage_1_1_blobs_1_1_break_lease_options" kind="struct" language="C++" prot="public" final="yes">
    <compoundname>Azure::Storage::Blobs::BreakLeaseOptions</compoundname>
    <includes refid="blob__options_8hpp" local="no">blob_options.hpp</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_azure_1_1_storage_1_1_blobs_1_1_break_lease_options_1a4d190c6abe70863660cc956437193cd5" prot="public" static="no" mutable="no">
        <type>Azure::Nullable&lt; std::chrono::seconds &gt;</type>
        <definition>Azure::Nullable&lt;std::chrono::seconds&gt; Azure::Storage::Blobs::BreakLeaseOptions::BreakPeriod</definition>
        <argsstring></argsstring>
        <name>BreakPeriod</name>
        <qualifiedname>Azure::Storage::Blobs::BreakLeaseOptions::BreakPeriod</qualifiedname>
        <briefdescription>
<para>Proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. This break period is only used if it is shorter than the time remaining on the lease. If longer, the time remaining on the lease is used. A new lease will not be available before the break period has expired, but the lease may be held for longer than the break period. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_options.hpp" line="812" column="21" bodyfile="inc/azure/storage/blobs/blob_options.hpp" bodystart="812" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_azure_1_1_storage_1_1_blobs_1_1_break_lease_options_1a688188a6ba68569a4e107bbc28d1f0cf" prot="public" static="no" mutable="no">
        <type><ref refid="struct_azure_1_1_storage_1_1_blobs_1_1_lease_blob_access_conditions" kindref="compound">LeaseBlobAccessConditions</ref></type>
        <definition>LeaseBlobAccessConditions Azure::Storage::Blobs::BreakLeaseOptions::AccessConditions</definition>
        <argsstring></argsstring>
        <name>AccessConditions</name>
        <qualifiedname>Azure::Storage::Blobs::BreakLeaseOptions::AccessConditions</qualifiedname>
        <briefdescription>
<para>Optional conditions that must be met to perform this operation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/storage/blobs/blob_options.hpp" line="817" column="31" bodyfile="inc/azure/storage/blobs/blob_options.hpp" bodystart="817" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Optional parameters for <ref refid="class_azure_1_1_storage_1_1_blobs_1_1_blob_lease_client_1a5687c70b70270a7ae72a79f75482459b" kindref="member">Azure::Storage::Blobs::BlobLeaseClient::Break</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>Azure::MatchConditions</label>
      </node>
      <node id="3">
        <label>Azure::ModifiedConditions</label>
      </node>
      <node id="1">
        <label>Azure::Storage::Blobs::BreakLeaseOptions</label>
        <link refid="struct_azure_1_1_storage_1_1_blobs_1_1_break_lease_options"/>
        <childnode refid="2" relation="usage">
          <edgelabel>AccessConditions</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Azure::Storage::Blobs::LeaseBlobAccessConditions</label>
        <link refid="struct_azure_1_1_storage_1_1_blobs_1_1_lease_blob_access_conditions"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Azure::Storage::Blobs::TagAccessConditions</label>
        <link refid="struct_azure_1_1_storage_1_1_blobs_1_1_tag_access_conditions"/>
      </node>
    </collaborationgraph>
    <location file="inc/azure/storage/blobs/blob_options.hpp" line="803" column="3" bodyfile="inc/azure/storage/blobs/blob_options.hpp" bodystart="804" bodyend="818"/>
    <listofallmembers>
      <member refid="struct_azure_1_1_storage_1_1_blobs_1_1_break_lease_options_1a688188a6ba68569a4e107bbc28d1f0cf" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::BreakLeaseOptions</scope><name>AccessConditions</name></member>
      <member refid="struct_azure_1_1_storage_1_1_blobs_1_1_break_lease_options_1a4d190c6abe70863660cc956437193cd5" prot="public" virt="non-virtual"><scope>Azure::Storage::Blobs::BreakLeaseOptions</scope><name>BreakPeriod</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
