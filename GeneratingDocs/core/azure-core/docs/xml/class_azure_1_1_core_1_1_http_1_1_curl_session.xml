<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="class_azure_1_1_core_1_1_http_1_1_curl_session" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Azure::Core::Http::CurlSession</compoundname>
    <basecompoundref refid="class_azure_1_1_core_1_1_i_o_1_1_body_stream" prot="public" virt="non-virtual">Azure::Core::IO::BodyStream</basecompoundref>
    <includes refid="curl__session__private_8hpp" local="no">curl_session_private.hpp</includes>
    <innerclass refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1_1_response_buffer_parser" prot="private">Azure::Core::Http::CurlSession::ResponseBufferParser</innerclass>
    <sectiondef kind="private-type">
      <memberdef kind="enum" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1ae3778a135fa83746efc77c360a88393d" prot="private" static="no" strong="yes">
        <type></type>
        <name>SessionState</name>
        <qualifiedname>Azure::Core::Http::CurlSession::SessionState</qualifiedname>
        <enumvalue id="class_azure_1_1_core_1_1_http_1_1_curl_session_1ae3778a135fa83746efc77c360a88393da8b73b304074fd2f4fa2a0f606956ae17" prot="private">
          <name>PERFORM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_azure_1_1_core_1_1_http_1_1_curl_session_1ae3778a135fa83746efc77c360a88393dab8f87bd0ae829f0fa0fcaa1a0a2bf91e" prot="private">
          <name>STREAMING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>This is used to set the current state of a session. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>The session needs to know what&apos;s the state on it when an exception occurs so the connection is not moved back to the connection pool. When a new request is going to be sent, the session will be in <computeroutput>PERFORM</computeroutput> until the request has been uploaded and a response code is received from the server. At that point the state will change to <computeroutput>STREAMING</computeroutput>. If there is any error before changing the state, the connection need to be cleaned up. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="72" column="5" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="enum" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a7e6c9a401178ea3964958717282872be" prot="private" static="no" strong="yes">
        <type></type>
        <name>ResponseParserState</name>
        <qualifiedname>Azure::Core::Http::CurlSession::ResponseParserState</qualifiedname>
        <enumvalue id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a7e6c9a401178ea3964958717282872bea61386e8f85dfd630abd7ea3afb6472b6" prot="private">
          <name>StatusLine</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a7e6c9a401178ea3964958717282872bea883d7615c4d2de3fa1218f1298c46d0e" prot="private">
          <name>Headers</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a7e6c9a401178ea3964958717282872bea17d326d45a19e3fa18214a1110a3b08f" prot="private">
          <name>EndOfHeaders</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="83" column="5" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="84" bodyend="88"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a6a1d66b277c6d739a429873d13937314" prot="private" static="no" mutable="no">
        <type>SessionState</type>
        <definition>SessionState Azure::Core::Http::CurlSession::m_sessionState</definition>
        <argsstring></argsstring>
        <name>m_sessionState</name>
        <qualifiedname>Azure::Core::Http::CurlSession::m_sessionState</qualifiedname>
        <initializer>= SessionState::PERFORM</initializer>
        <briefdescription>
<para>The current state of the session. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>The state of the session is used to determine if a connection can be moved back to the connection pool or not. A connection can be re-used only when the session state is <computeroutput>STREAMING</computeroutput> and the response has been read completely. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="221" column="18" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a402887408e9047871948c6b54d21966f" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_azure_1_1_core_1_1_http_1_1_curl_network_connection" kindref="compound">CurlNetworkConnection</ref> &gt;</type>
        <definition>std::unique_ptr&lt;CurlNetworkConnection&gt; Azure::Core::Http::CurlSession::m_connection</definition>
        <argsstring></argsstring>
        <name>m_connection</name>
        <qualifiedname>Azure::Core::Http::CurlSession::m_connection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="223" column="21" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a95aa1b97045a0e4a8d68812b97a9b486" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_azure_1_1_core_1_1_http_1_1_raw_response" kindref="compound">RawResponse</ref> &gt;</type>
        <definition>std::unique_ptr&lt;RawResponse&gt; Azure::Core::Http::CurlSession::m_response</definition>
        <argsstring></argsstring>
        <name>m_response</name>
        <qualifiedname>Azure::Core::Http::CurlSession::m_response</qualifiedname>
        <briefdescription>
<para>unique ptr for the HTTP <ref refid="class_azure_1_1_core_1_1_http_1_1_raw_response" kindref="compound">RawResponse</ref>. The session is responsable for creating the response once that an HTTP status line is received. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="230" column="21" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1ae1a32b41d21684d04ba531951b832b43" prot="private" static="no" mutable="no">
        <type><ref refid="class_azure_1_1_core_1_1_http_1_1_request" kindref="compound">Request</ref> &amp;</type>
        <definition>Request&amp; Azure::Core::Http::CurlSession::m_request</definition>
        <argsstring></argsstring>
        <name>m_request</name>
        <qualifiedname>Azure::Core::Http::CurlSession::m_request</qualifiedname>
        <briefdescription>
<para>The HTTP <ref refid="class_azure_1_1_core_1_1_http_1_1_request" kindref="compound">Request</ref> for to be used by the session. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="236" column="13" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a80cdacb0f2136fc1987f6b956fad0b97" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Azure::Core::Http::CurlSession::m_bodyStartInBuffer</definition>
        <argsstring></argsstring>
        <name>m_bodyStartInBuffer</name>
        <qualifiedname>Azure::Core::Http::CurlSession::m_bodyStartInBuffer</qualifiedname>
        <initializer>= _detail::DefaultLibcurlReaderSize</initializer>
        <briefdescription>
<para>Control field to handle the case when part of HTTP response body was copied to the inner buffer. When a libcurl stream tries to read part of the body, this field will help to decide how much data to take from the inner buffer before pulling more data from network. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The initial value is set to the size of the inner buffer as a sentinel that indicate that the buffer has not data or all data has already taken from it. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="246" column="12" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1ad82eabc21b14a7e22c254fa068243d4a" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Azure::Core::Http::CurlSession::m_innerBufferSize</definition>
        <argsstring></argsstring>
        <name>m_innerBufferSize</name>
        <qualifiedname>Azure::Core::Http::CurlSession::m_innerBufferSize</qualifiedname>
        <initializer>= _detail::DefaultLibcurlReaderSize</initializer>
        <briefdescription>
<para>Control field to handle the number of bytes containing relevant data within the internal buffer. This is because internal buffer can be set to be size N but after writing from wire into it, it can be holding less then N bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="254" column="12" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1af380343c49531c80e3233ac669731693" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Azure::Core::Http::CurlSession::m_isChunkedResponseType</definition>
        <argsstring></argsstring>
        <name>m_isChunkedResponseType</name>
        <qualifiedname>Azure::Core::Http::CurlSession::m_isChunkedResponseType</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="256" column="10" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a9d71aa2cf2706c41968cffe5ccef32a5" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t Azure::Core::Http::CurlSession::m_contentLength</definition>
        <argsstring></argsstring>
        <name>m_contentLength</name>
        <qualifiedname>Azure::Core::Http::CurlSession::m_contentLength</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>This is a copy of the value of an HTTP response header <computeroutput>content-length</computeroutput>. The value is received as string and parsed to size_t. This field avoid parsing the string header every time from HTTP <ref refid="class_azure_1_1_core_1_1_http_1_1_raw_response" kindref="compound">RawResponse</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This value is also used to avoid trying to read more data from network than what we are expecting to. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="267" column="13" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a95afc4d115f05b6c2b4f2a13b83d7007" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Azure::Core::Http::CurlSession::m_chunkSize</definition>
        <argsstring></argsstring>
        <name>m_chunkSize</name>
        <qualifiedname>Azure::Core::Http::CurlSession::m_chunkSize</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>For chunked responses, this field knows the size of the current chuck size server will be sending. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="274" column="12" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1ad35301ccf09be1a1785954757b0bd13d" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Azure::Core::Http::CurlSession::m_sessionTotalRead</definition>
        <argsstring></argsstring>
        <name>m_sessionTotalRead</name>
        <qualifiedname>Azure::Core::Http::CurlSession::m_sessionTotalRead</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="276" column="12" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a653fa71fddae62af853802ec719d3c33" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Azure::Core::Http::CurlSession::m_connectionUpgraded</definition>
        <argsstring></argsstring>
        <name>m_connectionUpgraded</name>
        <qualifiedname>Azure::Core::Http::CurlSession::m_connectionUpgraded</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>If True, the connection is going to be &quot;upgraded&quot; into a websocket connection, so block moving the connection to the pool. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="282" column="10" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a1fee6256f660a6b6f07832154b7326e2" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t Azure::Core::Http::CurlSession::m_readBuffer[_detail::DefaultLibcurlReaderSize]</definition>
        <argsstring>[_detail::DefaultLibcurlReaderSize]</argsstring>
        <name>m_readBuffer</name>
        <qualifiedname>Azure::Core::Http::CurlSession::m_readBuffer</qualifiedname>
        <initializer>= {0}</initializer>
        <briefdescription>
<para>Internal buffer from a session used to read bytes from a socket. This buffer is only used while constructing an HTTP <ref refid="class_azure_1_1_core_1_1_http_1_1_raw_response" kindref="compound">RawResponse</ref> without adding a body to it. Customers would provide their own buffer to copy from socket when reading the HTTP body using streams. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="290" column="13" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="291" bodyend="291"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a175ed65e72ed0685ec32f2bd08d67b5d" prot="private" static="no" mutable="no">
        <type><ref refid="http__status__code_8hpp_1a60337476811e1ccf9ed39ce13f678d9d" kindref="member">Http::HttpStatusCode</ref></type>
        <definition>Http::HttpStatusCode Azure::Core::Http::CurlSession::m_lastStatusCode</definition>
        <argsstring></argsstring>
        <name>m_lastStatusCode</name>
        <qualifiedname>Azure::Core::Http::CurlSession::m_lastStatusCode</qualifiedname>
        <initializer>= <ref refid="http__status__code_8hpp_1a60337476811e1ccf9ed39ce13f678d9da9edf8fbf00a57d95a0af4923c9a1ec6f" kindref="member">Http::HttpStatusCode::BadRequest</ref></initializer>
        <briefdescription>
<para>Last HTTP status code read. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>The last status is initialized as a bad request just as a way to know that there&apos;s not a good request performed by the session. The status will be updated as soon as the session sent a request and it is used to decide if a connection can be re-used or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="340" column="26" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a6641efc184c7c67c661aac56316f1120" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Azure::Core::Http::CurlSession::m_keepAlive</definition>
        <argsstring></argsstring>
        <name>m_keepAlive</name>
        <qualifiedname>Azure::Core::Http::CurlSession::m_keepAlive</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
<para>All connections will request to keep the channel open to re-use the connection. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This option can be disabled from the transport adapter options. When disabled, the session won&apos;t return connections to the connection pool. Connection will be closed as soon as the request is completed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="368" column="10" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a331f99d562d3858c9531c935c2b1c7d1" prot="private" static="no" mutable="no">
        <type><ref refid="class_azure_1_1_nullable" kindref="compound">Azure::Nullable</ref>&lt; std::string &gt;</type>
        <definition>Azure::Nullable&lt;std::string&gt; Azure::Core::Http::CurlSession::m_httpProxy</definition>
        <argsstring></argsstring>
        <name>m_httpProxy</name>
        <qualifiedname>Azure::Core::Http::CurlSession::m_httpProxy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="370" column="21" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a249409f981db13d6da79e32aa2e9e51f" prot="private" static="no" mutable="no">
        <type><ref refid="class_azure_1_1_nullable" kindref="compound">Azure::Nullable</ref>&lt; std::string &gt;</type>
        <definition>Azure::Nullable&lt;std::string&gt; Azure::Core::Http::CurlSession::m_httpProxyUser</definition>
        <argsstring></argsstring>
        <name>m_httpProxyUser</name>
        <qualifiedname>Azure::Core::Http::CurlSession::m_httpProxyUser</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="371" column="21" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1ade423349a4ded1b6217df8948c0f0710" prot="private" static="no" mutable="no">
        <type><ref refid="class_azure_1_1_nullable" kindref="compound">Azure::Nullable</ref>&lt; std::string &gt;</type>
        <definition>Azure::Nullable&lt;std::string&gt; Azure::Core::Http::CurlSession::m_httpProxyPassword</definition>
        <argsstring></argsstring>
        <name>m_httpProxyPassword</name>
        <qualifiedname>Azure::Core::Http::CurlSession::m_httpProxyPassword</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="372" column="21" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="372" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a9feac22a9d0addaee3121329f947c03b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CurlSession::ReadExpected</definition>
        <argsstring>(uint8_t expected, Context const &amp;context)</argsstring>
        <name>ReadExpected</name>
        <qualifiedname>Azure::Core::Http::CurlSession::ReadExpected</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>expected</declname>
        </param>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Context</ref> const &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Read one expected byte and throw if it is different than the <computeroutput>expected</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Reads data from network and validates the data is equal to <computeroutput>expected</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expected</parametername>
</parameternamelist>
<parameterdescription>
<para>The data that should came from the wire. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>A context to control the request lifetime. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="53" column="10" bodyfile="src/http/curl/curl.cpp" bodystart="972" bodyend="995"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1ac310a7fe3ecb6b791e8d326cb91779d2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CurlSession::ReadCRLF</definition>
        <argsstring>(Context const &amp;context)</argsstring>
        <name>ReadCRLF</name>
        <qualifiedname>Azure::Core::Http::CurlSession::ReadCRLF</qualifiedname>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Context</ref> const &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Read <computeroutput>\\r\\n</computeroutput> from internal buffer or from the wire. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>throw if <computeroutput>\\r\\n</computeroutput> are not the next data read. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="60" column="10" bodyfile="src/http/curl/curl.cpp" bodystart="997" bodyend="1001"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a8270d2fded1a396967563c71edfcbac8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode CurlSession::SendRawHttp</definition>
        <argsstring>(Context const &amp;context)</argsstring>
        <name>SendRawHttp</name>
        <qualifiedname>Azure::Core::Http::CurlSession::SendRawHttp</qualifiedname>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Context</ref> const &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Function used when working with Streams to manually write from the HTTP <ref refid="class_azure_1_1_core_1_1_http_1_1_request" kindref="compound">Request</ref> to the wire. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>A context to control the request lifetime.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CURL_OK when response is sent successfully. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="301" column="14" bodyfile="src/http/curl/curl.cpp" bodystart="677" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a243b3a3cdbc3fd05c56ad9662cde9969" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode CurlSession::UploadBody</definition>
        <argsstring>(Context const &amp;context)</argsstring>
        <name>UploadBody</name>
        <qualifiedname>Azure::Core::Http::CurlSession::UploadBody</qualifiedname>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Context</ref> const &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Upload body. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>A context to control the request lifetime.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Curl code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="310" column="14" bodyfile="src/http/curl/curl.cpp" bodystart="649" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a7985f3d0f5f2fb622d0146767c58ef5c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode CurlSession::ReadStatusLineAndHeadersFromRawResponse</definition>
        <argsstring>(Context const &amp;context, bool reuseInternalBuffer=false)</argsstring>
        <name>ReadStatusLineAndHeadersFromRawResponse</name>
        <qualifiedname>Azure::Core::Http::CurlSession::ReadStatusLineAndHeadersFromRawResponse</qualifiedname>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Context</ref> const &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reuseInternalBuffer</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>This function is used after sending an HTTP request to the server to read the HTTP <ref refid="class_azure_1_1_core_1_1_http_1_1_raw_response" kindref="compound">RawResponse</ref> from wire until the end of headers only. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>A context to control the request lifetime. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reuseInternalBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether the internal buffer should be reused.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Curl code. CURLE_OK if successful, otherwise CURLE_RECV_ERROR. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="321" column="14" bodyfile="src/http/curl/curl.cpp" bodystart="829" bodyend="964"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1ad8d1e01553b233f57fa99451a0331099" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CurlSession::ParseChunkSize</definition>
        <argsstring>(Context const &amp;context)</argsstring>
        <name>ParseChunkSize</name>
        <qualifiedname>Azure::Core::Http::CurlSession::ParseChunkSize</qualifiedname>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Context</ref> const &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Reads from inner buffer or from Wire until chunkSize is parsed and converted to unsigned long long. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>A context to control the request lifetime. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="331" column="10" bodyfile="src/http/curl/curl.cpp" bodystart="749" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a97fd5aa3ad38744dc74028c9bbebaad3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Azure::Core::Http::CurlSession::IsEOF</definition>
        <argsstring>()</argsstring>
        <name>IsEOF</name>
        <qualifiedname>Azure::Core::Http::CurlSession::IsEOF</qualifiedname>
        <briefdescription>
<para>check whether an end of file has been reached. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if end of file has been reached; otherwise, <computeroutput>false</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="346" column="10" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="346" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1ab6e3d5e52bd439061419b51e3b133e6a" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t CurlSession::OnRead</definition>
        <argsstring>(uint8_t *buffer, size_t count, Azure::Core::Context const &amp;context) override</argsstring>
        <name>OnRead</name>
        <qualifiedname>Azure::Core::Http::CurlSession::OnRead</qualifiedname>
        <reimplements refid="class_azure_1_1_core_1_1_i_o_1_1_body_stream_1a806f13d7e3fa1cc91b4b316ccd164d49">OnRead</reimplements>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Azure::Core::Context</ref> const &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Implement Azure::Core::IO::BodyStream::OnRead. Calling this function pulls data from the wire. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>A context to control the request lifetime. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer where data from wire is written to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes to read from the network. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The actual number of bytes read from the network. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="383" column="12" bodyfile="src/http/curl/curl.cpp" bodystart="1004" bodyend="1099"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a8983fda0b8e7f0ad5da7b51abfb7169a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CurlSession::GetHTTPMessagePreBody</definition>
        <argsstring>(Azure::Core::Http::Request const &amp;request)</argsstring>
        <name>GetHTTPMessagePreBody</name>
        <qualifiedname>Azure::Core::Http::CurlSession::GetHTTPMessagePreBody</qualifiedname>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_http_1_1_request" kindref="compound">Azure::Core::Http::Request</ref> const &amp;</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="385" column="24" bodyfile="src/http/curl/curl.cpp" bodystart="724" bodyend="747"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a9e0b008044346b07b902f356fefb5822" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CurlSession::GetHeadersAsString</definition>
        <argsstring>(Azure::Core::Http::Request const &amp;request)</argsstring>
        <name>GetHeadersAsString</name>
        <qualifiedname>Azure::Core::Http::CurlSession::GetHeadersAsString</qualifiedname>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_http_1_1_request" kindref="compound">Azure::Core::Http::Request</ref> const &amp;</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="386" column="24" bodyfile="src/http/curl/curl.cpp" bodystart="706" bodyend="720"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1ac8b8c2c2f4bc8df836deebcc64b734ee" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CurlSession::SetHeader</definition>
        <argsstring>(Azure::Core::Http::RawResponse &amp;response, std::string const &amp;header)</argsstring>
        <name>SetHeader</name>
        <qualifiedname>Azure::Core::Http::CurlSession::SetHeader</qualifiedname>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_http_1_1_raw_response" kindref="compound">Azure::Core::Http::RawResponse</ref> &amp;</type>
          <declname>response</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="387" column="24" bodyfile="src/http/curl/curl.cpp" bodystart="696" bodyend="704"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a6b2ef37014a0eb9f0baa2629e8fd749c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Azure::Core::Http::CurlSession::CurlSession</definition>
        <argsstring>(Request &amp;request, std::unique_ptr&lt; CurlNetworkConnection &gt; connection, CurlTransportOptions curlOptions)</argsstring>
        <name>CurlSession</name>
        <qualifiedname>Azure::Core::Http::CurlSession::CurlSession</qualifiedname>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_http_1_1_request" kindref="compound">Request</ref> &amp;</type>
          <declname>request</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="class_azure_1_1_core_1_1_http_1_1_curl_network_connection" kindref="compound">CurlNetworkConnection</ref> &gt;</type>
          <declname>connection</declname>
        </param>
        <param>
          <type><ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options" kindref="compound">CurlTransportOptions</ref></type>
          <declname>curlOptions</declname>
        </param>
        <briefdescription>
<para>Construct a new Curl Session object. Init internal libcurl handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to an HTTP <ref refid="class_azure_1_1_core_1_1_http_1_1_request" kindref="compound">Request</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>connection</parametername>
</parameternamelist>
<parameterdescription>
<para>A connection from the connection pool. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>curlOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>Transport adapter options. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="399" column="5" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="399" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a4a09de0caf474853fbfc0768b5dd3fea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Azure::Core::Http::CurlSession::~CurlSession</definition>
        <argsstring>() override</argsstring>
        <name>~CurlSession</name>
        <qualifiedname>Azure::Core::Http::CurlSession::~CurlSession</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="409" column="5" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="409" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a86bc473a6a09215453abf4e3f063b194" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode CurlSession::Perform</definition>
        <argsstring>(Context const &amp;context)</argsstring>
        <name>Perform</name>
        <qualifiedname>Azure::Core::Http::CurlSession::Perform</qualifiedname>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Context</ref> const &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Function will use the HTTP request received in constructor to perform a network call based on the HTTP request configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>A context to control the request lifetime. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CURLE_OK when the network call is completed successfully. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="431" column="14" bodyfile="src/http/curl/curl.cpp" bodystart="408" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a88a6369b4b0acc9c79705dd15083bf0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="class_azure_1_1_core_1_1_http_1_1_raw_response" kindref="compound">Azure::Core::Http::RawResponse</ref> &gt;</type>
        <definition>std::unique_ptr&lt; RawResponse &gt; CurlSession::ExtractResponse</definition>
        <argsstring>()</argsstring>
        <name>ExtractResponse</name>
        <qualifiedname>Azure::Core::Http::CurlSession::ExtractResponse</qualifiedname>
        <briefdescription>
<para>Moved the ownership of the HTTP <ref refid="class_azure_1_1_core_1_1_http_1_1_raw_response" kindref="compound">RawResponse</ref> out of the session. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the unique ptr to the HTTP <ref refid="class_azure_1_1_core_1_1_http_1_1_raw_response" kindref="compound">RawResponse</ref> or null if the HTTP <ref refid="class_azure_1_1_core_1_1_http_1_1_raw_response" kindref="compound">RawResponse</ref> is not yet created or was moved before. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="439" column="21" bodyfile="src/http/curl/curl.cpp" bodystart="1154" bodyend="1154"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a6d8958274c0aa258f1127558b78d9cb8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int64_t</type>
        <definition>int64_t Azure::Core::Http::CurlSession::Length</definition>
        <argsstring>() const override</argsstring>
        <name>Length</name>
        <qualifiedname>Azure::Core::Http::CurlSession::Length</qualifiedname>
        <reimplements refid="class_azure_1_1_core_1_1_i_o_1_1_body_stream_1a2e73f394ca060cf94146e03d5cf46d74">Length</reimplements>
        <briefdescription>
<para>Implement <ref refid="class_azure_1_1_core_1_1_i_o_1_1_body_stream" kindref="compound">Azure::Core::IO::BodyStream</ref> length. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The size of the payload. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="446" column="13" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="446" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_http_1_1_curl_session_1a68641a2a760a2bd4a9962ebbcb042608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="class_azure_1_1_core_1_1_http_1_1_curl_network_connection" kindref="compound">CurlNetworkConnection</ref> &gt;</type>
        <definition>std::unique_ptr&lt; CurlNetworkConnection &gt; CurlSession::ExtractConnection</definition>
        <argsstring>()</argsstring>
        <name>ExtractConnection</name>
        <qualifiedname>Azure::Core::Http::CurlSession::ExtractConnection</qualifiedname>
        <briefdescription>
<para>Return the network connection if the server indicated that the connection is upgraded. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The network connection, or null if the connection was not upgraded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl_session_private.hpp" line="453" column="21" bodyfile="src/http/curl/curl.cpp" bodystart="528" bodyend="538"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Stateful component that controls sending an HTTP <ref refid="class_azure_1_1_core_1_1_http_1_1_request" kindref="compound">Request</ref> with libcurl over the wire. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="remark"><para>This component does not use the classic libcurl easy interface to send and receive bytes from the network using callbacks. Instead, <computeroutput><ref refid="class_azure_1_1_core_1_1_http_1_1_curl_session" kindref="compound">CurlSession</ref></computeroutput> supports working with the custom HTTP protocol option from libcurl to manually upload and download bytes from the network socket using curl_easy_send() and curl_easy_recv().</para>
</simplesect>
<simplesect kind="remark"><para>This component is expected to be used by an HTTP Transporter to ensure that transporter to be reusable in multiple pipelines while every call to network is unique. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Azure::Core::Http::CurlSession</label>
        <link refid="class_azure_1_1_core_1_1_http_1_1_curl_session"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Azure::Core::IO::BodyStream</label>
        <link refid="class_azure_1_1_core_1_1_i_o_1_1_body_stream"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Azure::Core::Http::CurlSession</label>
        <link refid="class_azure_1_1_core_1_1_http_1_1_curl_session"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Azure::Core::IO::BodyStream</label>
        <link refid="class_azure_1_1_core_1_1_i_o_1_1_body_stream"/>
      </node>
    </collaborationgraph>
    <location file="src/http/curl/curl_session_private.hpp" line="42" column="3" bodyfile="src/http/curl/curl_session_private.hpp" bodystart="42" bodyend="454"/>
    <listofallmembers>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a6b2ef37014a0eb9f0baa2629e8fd749c" prot="public" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>CurlSession</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a68641a2a760a2bd4a9962ebbcb042608" prot="public" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>ExtractConnection</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a88a6369b4b0acc9c79705dd15083bf0f" prot="public" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>ExtractResponse</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a9e0b008044346b07b902f356fefb5822" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>GetHeadersAsString</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a8983fda0b8e7f0ad5da7b51abfb7169a" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>GetHTTPMessagePreBody</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a97fd5aa3ad38744dc74028c9bbebaad3" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>IsEOF</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a6d8958274c0aa258f1127558b78d9cb8" prot="public" virt="virtual"><scope>Azure::Core::Http::CurlSession</scope><name>Length</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a80cdacb0f2136fc1987f6b956fad0b97" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>m_bodyStartInBuffer</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a95afc4d115f05b6c2b4f2a13b83d7007" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>m_chunkSize</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a402887408e9047871948c6b54d21966f" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>m_connection</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a653fa71fddae62af853802ec719d3c33" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>m_connectionUpgraded</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a9d71aa2cf2706c41968cffe5ccef32a5" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>m_contentLength</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a331f99d562d3858c9531c935c2b1c7d1" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>m_httpProxy</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1ade423349a4ded1b6217df8948c0f0710" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>m_httpProxyPassword</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a249409f981db13d6da79e32aa2e9e51f" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>m_httpProxyUser</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1ad82eabc21b14a7e22c254fa068243d4a" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>m_innerBufferSize</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1af380343c49531c80e3233ac669731693" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>m_isChunkedResponseType</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a6641efc184c7c67c661aac56316f1120" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>m_keepAlive</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a175ed65e72ed0685ec32f2bd08d67b5d" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>m_lastStatusCode</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a1fee6256f660a6b6f07832154b7326e2" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>m_readBuffer</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1ae1a32b41d21684d04ba531951b832b43" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>m_request</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a95aa1b97045a0e4a8d68812b97a9b486" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>m_response</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a6a1d66b277c6d739a429873d13937314" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>m_sessionState</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1ad35301ccf09be1a1785954757b0bd13d" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>m_sessionTotalRead</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1ab6e3d5e52bd439061419b51e3b133e6a" prot="private" virt="virtual"><scope>Azure::Core::Http::CurlSession</scope><name>OnRead</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1ad8d1e01553b233f57fa99451a0331099" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>ParseChunkSize</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a86bc473a6a09215453abf4e3f063b194" prot="public" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>Perform</name></member>
      <member refid="class_azure_1_1_core_1_1_i_o_1_1_body_stream_1ab7c962004d984d3bd1d32f33e6aa485d" prot="public" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>Read</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1ac310a7fe3ecb6b791e8d326cb91779d2" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>ReadCRLF</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a9feac22a9d0addaee3121329f947c03b" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>ReadExpected</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a7985f3d0f5f2fb622d0146767c58ef5c" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>ReadStatusLineAndHeadersFromRawResponse</name></member>
      <member refid="class_azure_1_1_core_1_1_i_o_1_1_body_stream_1ac02611cf3f72c181dcf393c571df6226" prot="public" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>ReadToCount</name></member>
      <member refid="class_azure_1_1_core_1_1_i_o_1_1_body_stream_1a6d2138790b0c79e24f7fbc0f776bb069" prot="public" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>ReadToEnd</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a7e6c9a401178ea3964958717282872be" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>ResponseParserState</name></member>
      <member refid="class_azure_1_1_core_1_1_i_o_1_1_body_stream_1a52c2ce02e8a7dec1f55276f664c7c8b6" prot="public" virt="virtual"><scope>Azure::Core::Http::CurlSession</scope><name>Rewind</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a8270d2fded1a396967563c71edfcbac8" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>SendRawHttp</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1ae3778a135fa83746efc77c360a88393d" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>SessionState</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1ac8b8c2c2f4bc8df836deebcc64b734ee" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>SetHeader</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a243b3a3cdbc3fd05c56ad9662cde9969" prot="private" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>UploadBody</name></member>
      <member refid="class_azure_1_1_core_1_1_i_o_1_1_body_stream_1a54e16528af689c00f5190858fff85e92" prot="public" virt="virtual"><scope>Azure::Core::Http::CurlSession</scope><name>~BodyStream</name></member>
      <member refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a4a09de0caf474853fbfc0768b5dd3fea" prot="public" virt="non-virtual"><scope>Azure::Core::Http::CurlSession</scope><name>~CurlSession</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
