<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options" kind="struct" language="C++" prot="public">
    <compoundname>Azure::Core::Http::CurlTransportOptions</compoundname>
    <includes refid="curl__transport_8hpp" local="no">curl_transport.hpp</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1ac6eb38a8ef89772e7e24f77950d550e9" prot="public" static="no" mutable="no">
        <type><ref refid="class_azure_1_1_nullable" kindref="compound">Azure::Nullable</ref>&lt; std::string &gt;</type>
        <definition>Azure::Nullable&lt;std::string&gt; Azure::Core::Http::CurlTransportOptions::Proxy</definition>
        <argsstring></argsstring>
        <name>Proxy</name>
        <qualifiedname>Azure::Core::Http::CurlTransportOptions::Proxy</qualifiedname>
        <briefdescription>
<para>The string for the proxy is passed directly to the libcurl handle without any parsing. </para>
        </briefdescription>
        <detaileddescription>
<para>libcurl will use system&apos;s environment proxy configuration (if it is set) when the <computeroutput>Proxy</computeroutput> setting is not set (is null). Setting an empty string will make libcurl to ignore any proxy settings from the system (use no proxy).</para>
<para><simplesect kind="remark"><para>No validation for the string is done by the <ref refid="namespace_azure" kindref="compound">Azure</ref> SDK. More about this option: <ulink url="https://curl.se/libcurl/c/CURLOPT_PROXY.html">https://curl.se/libcurl/c/CURLOPT_PROXY.html</ulink>.</para>
</simplesect>
<simplesect kind="remark"><para>The default value is an empty string (no proxy). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/http/curl_transport.hpp" line="90" column="21" bodyfile="inc/azure/core/http/curl_transport.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a6d0619f5f09ffdcc9a7fb87b97b59a1d" prot="public" static="no" mutable="no">
        <type><ref refid="class_azure_1_1_nullable" kindref="compound">Azure::Nullable</ref>&lt; std::string &gt;</type>
        <definition>Azure::Nullable&lt;std::string&gt; Azure::Core::Http::CurlTransportOptions::ProxyUsername</definition>
        <argsstring></argsstring>
        <name>ProxyUsername</name>
        <qualifiedname>Azure::Core::Http::CurlTransportOptions::ProxyUsername</qualifiedname>
        <briefdescription>
<para>Username to be used for proxy connections. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>No validation for the string is done by the <ref refid="namespace_azure" kindref="compound">Azure</ref> SDK. More about this option: <ulink url="https://curl.se/libcurl/c/CURLOPT_PROXYUSERNAME.html">https://curl.se/libcurl/c/CURLOPT_PROXYUSERNAME.html</ulink>.</para>
</simplesect>
<simplesect kind="remark"><para>The default value is an empty string (no proxy). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/http/curl_transport.hpp" line="101" column="21" bodyfile="inc/azure/core/http/curl_transport.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1aa6718b6de792b57dccf7b7648f43f2d9" prot="public" static="no" mutable="no">
        <type><ref refid="class_azure_1_1_nullable" kindref="compound">Azure::Nullable</ref>&lt; std::string &gt;</type>
        <definition>Azure::Nullable&lt;std::string&gt; Azure::Core::Http::CurlTransportOptions::ProxyPassword</definition>
        <argsstring></argsstring>
        <name>ProxyPassword</name>
        <qualifiedname>Azure::Core::Http::CurlTransportOptions::ProxyPassword</qualifiedname>
        <briefdescription>
<para>Password to be used for proxy connections. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>No validation for the string is done by the <ref refid="namespace_azure" kindref="compound">Azure</ref> SDK. More about this option: <ulink url="https://curl.se/libcurl/c/CURLOPT_PROXYPASSWORD.html">https://curl.se/libcurl/c/CURLOPT_PROXYPASSWORD.html</ulink>.</para>
</simplesect>
<simplesect kind="remark"><para>If a value is provided, the value will be used (this allows the caller to provide an empty password) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/http/curl_transport.hpp" line="113" column="21" bodyfile="inc/azure/core/http/curl_transport.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1aa0559cf03611e7b68f42094991e208fe" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Azure::Core::Http::CurlTransportOptions::CAInfo</definition>
        <argsstring></argsstring>
        <name>CAInfo</name>
        <qualifiedname>Azure::Core::Http::CurlTransportOptions::CAInfo</qualifiedname>
        <briefdescription>
<para>Path to a PEM encoded file containing the certificate authorities sent to libcurl handle directly. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>The <ref refid="namespace_azure" kindref="compound">Azure</ref> SDK will not check if the path is valid or not.</para>
</simplesect>
<simplesect kind="remark"><para>The default is the built-in system specific path. More about this option: <ulink url="https://curl.se/libcurl/c/CURLOPT_CAINFO.html">https://curl.se/libcurl/c/CURLOPT_CAINFO.html</ulink></para>
</simplesect>
<simplesect kind="remark"><para>This option is known to only work on Linux and might throw if set on other platforms. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/http/curl_transport.hpp" line="126" column="17" bodyfile="inc/azure/core/http/curl_transport.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a7e43d75e4f8ecfb96322d5b92b2aee17" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Azure::Core::Http::CurlTransportOptions::CAPath</definition>
        <argsstring></argsstring>
        <name>CAPath</name>
        <qualifiedname>Azure::Core::Http::CurlTransportOptions::CAPath</qualifiedname>
        <briefdescription>
<para>Path to a directory which holds PEM encoded file, containing the certificate authorities sent to libcurl handle directly. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>The <ref refid="namespace_azure" kindref="compound">Azure</ref> SDK will not check if the path is valid or not.</para>
</simplesect>
<simplesect kind="remark"><para>The default is the built-in system specific path. More about this option: <ulink url="https://curl.se/libcurl/c/CURLOPT_CAPATH.html">https://curl.se/libcurl/c/CURLOPT_CAPATH.html</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/http/curl_transport.hpp" line="138" column="17" bodyfile="inc/azure/core/http/curl_transport.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a6822790c8f34f241ddd5261b54b05c66" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Azure::Core::Http::CurlTransportOptions::HttpKeepAlive</definition>
        <argsstring></argsstring>
        <name>HttpKeepAlive</name>
        <qualifiedname>Azure::Core::Http::CurlTransportOptions::HttpKeepAlive</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
<para>All HTTP requests will keep the connection channel open to the service. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>The channel might be closed by the server if the server response has an error code. A connection won&apos;t be re-used if it is abandoned in the middle of an operation. operation.</para>
</simplesect>
<simplesect kind="remark"><para>This option is managed directly by the <ref refid="namespace_azure" kindref="compound">Azure</ref> SDK. No option is set for the curl handle. It is <computeroutput>true</computeroutput> by default. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/http/curl_transport.hpp" line="150" column="10" bodyfile="inc/azure/core/http/curl_transport.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a4be09cd52603cc58eeb66139650d7d16" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Azure::Core::Http::CurlTransportOptions::SslVerifyPeer</definition>
        <argsstring></argsstring>
        <name>SslVerifyPeer</name>
        <qualifiedname>Azure::Core::Http::CurlTransportOptions::SslVerifyPeer</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
<para>This option determines whether libcurl verifies the authenticity of the peer&apos;s certificate. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>The default value is <computeroutput>true</computeroutput>. More about this option: <ulink url="https://curl.se/libcurl/c/CURLOPT_SSL_VERIFYPEER.html">https://curl.se/libcurl/c/CURLOPT_SSL_VERIFYPEER.html</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/http/curl_transport.hpp" line="160" column="10" bodyfile="inc/azure/core/http/curl_transport.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a8e5e6b74029a927bb6635eeff2a898fd" prot="public" static="no" mutable="no">
        <type><ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_ssl_options" kindref="compound">CurlTransportSslOptions</ref></type>
        <definition>CurlTransportSslOptions Azure::Core::Http::CurlTransportOptions::SslOptions</definition>
        <argsstring></argsstring>
        <name>SslOptions</name>
        <qualifiedname>Azure::Core::Http::CurlTransportOptions::SslOptions</qualifiedname>
        <briefdescription>
<para>Define the SSL options for the libcurl handle. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>See more info here: <ulink url="https://curl.se/libcurl/c/CURLOPT_SSL_OPTIONS.html">https://curl.se/libcurl/c/CURLOPT_SSL_OPTIONS.html</ulink>. The default option is all options <computeroutput>false</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/http/curl_transport.hpp" line="169" column="29" bodyfile="inc/azure/core/http/curl_transport.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1ab78a134dd0c79a4a391f0f2cd55e9843" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Azure::Core::Http::CurlTransportOptions::NoSignal</definition>
        <argsstring></argsstring>
        <name>NoSignal</name>
        <qualifiedname>Azure::Core::Http::CurlTransportOptions::NoSignal</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>When true, libcurl will not use any functions that install signal handlers or any functions that cause signals to be sent to the process. </para>
        </briefdescription>
        <detaileddescription>
<para>This option is here to allow multi-threaded unix applications to still set/use all timeout options etc, without risking getting signals. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/http/curl_transport.hpp" line="179" column="10" bodyfile="inc/azure/core/http/curl_transport.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1adef7d1b687f06d8072888c14dfbbc856" prot="public" static="no" mutable="no">
        <type>std::chrono::milliseconds</type>
        <definition>std::chrono::milliseconds Azure::Core::Http::CurlTransportOptions::ConnectionTimeout</definition>
        <argsstring></argsstring>
        <name>ConnectionTimeout</name>
        <qualifiedname>Azure::Core::Http::CurlTransportOptions::ConnectionTimeout</qualifiedname>
        <initializer>= _detail::DefaultConnectionTimeout</initializer>
        <briefdescription>
<para>Contain the maximum time that you allow the connection phase to the server to take. </para>
        </briefdescription>
        <detaileddescription>
<para>This only limits the connection phase, it has no impact once it has connected.</para>
<para><simplesect kind="remark"><para>The default timeout is 300 seconds and using <computeroutput>0</computeroutput> would set this default value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/http/curl_transport.hpp" line="189" column="31" bodyfile="inc/azure/core/http/curl_transport.hpp" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1aaeda7fcfc4ac51ac45966d34464d5b50" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Azure::Core::Http::CurlTransportOptions::EnableCurlTracing</definition>
        <argsstring></argsstring>
        <name>EnableCurlTracing</name>
        <qualifiedname>Azure::Core::Http::CurlTransportOptions::EnableCurlTracing</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>If set, integrates libcurl&apos;s internal tracing with <ref refid="namespace_azure" kindref="compound">Azure</ref> logging. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/http/curl_transport.hpp" line="194" column="10" bodyfile="inc/azure/core/http/curl_transport.hpp" bodystart="194" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Set the libcurl connection options like a proxy and CA path. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Azure::Core::Http::CurlTransportOptions</label>
        <link refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options"/>
        <childnode refid="2" relation="usage">
          <edgelabel>Proxy</edgelabel>
          <edgelabel>ProxyPassword</edgelabel>
          <edgelabel>ProxyUsername</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>SslOptions</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Azure::Core::Http::CurlTransportSslOptions</label>
        <link refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_ssl_options"/>
      </node>
      <node id="3">
        <label>Azure::_detail::NontrivialEmptyType</label>
      </node>
      <node id="2">
        <label>Azure::Nullable&lt; std::string &gt;</label>
        <link refid="class_azure_1_1_nullable"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_disengaged</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="inc/azure/core/http/curl_transport.hpp" line="75" column="3" bodyfile="inc/azure/core/http/curl_transport.hpp" bodystart="76" bodyend="195"/>
    <listofallmembers>
      <member refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1aa0559cf03611e7b68f42094991e208fe" prot="public" virt="non-virtual"><scope>Azure::Core::Http::CurlTransportOptions</scope><name>CAInfo</name></member>
      <member refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a7e43d75e4f8ecfb96322d5b92b2aee17" prot="public" virt="non-virtual"><scope>Azure::Core::Http::CurlTransportOptions</scope><name>CAPath</name></member>
      <member refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1adef7d1b687f06d8072888c14dfbbc856" prot="public" virt="non-virtual"><scope>Azure::Core::Http::CurlTransportOptions</scope><name>ConnectionTimeout</name></member>
      <member refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1aaeda7fcfc4ac51ac45966d34464d5b50" prot="public" virt="non-virtual"><scope>Azure::Core::Http::CurlTransportOptions</scope><name>EnableCurlTracing</name></member>
      <member refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a6822790c8f34f241ddd5261b54b05c66" prot="public" virt="non-virtual"><scope>Azure::Core::Http::CurlTransportOptions</scope><name>HttpKeepAlive</name></member>
      <member refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1ab78a134dd0c79a4a391f0f2cd55e9843" prot="public" virt="non-virtual"><scope>Azure::Core::Http::CurlTransportOptions</scope><name>NoSignal</name></member>
      <member refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1ac6eb38a8ef89772e7e24f77950d550e9" prot="public" virt="non-virtual"><scope>Azure::Core::Http::CurlTransportOptions</scope><name>Proxy</name></member>
      <member refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1aa6718b6de792b57dccf7b7648f43f2d9" prot="public" virt="non-virtual"><scope>Azure::Core::Http::CurlTransportOptions</scope><name>ProxyPassword</name></member>
      <member refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a6d0619f5f09ffdcc9a7fb87b97b59a1d" prot="public" virt="non-virtual"><scope>Azure::Core::Http::CurlTransportOptions</scope><name>ProxyUsername</name></member>
      <member refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a8e5e6b74029a927bb6635eeff2a898fd" prot="public" virt="non-virtual"><scope>Azure::Core::Http::CurlTransportOptions</scope><name>SslOptions</name></member>
      <member refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a4be09cd52603cc58eeb66139650d7d16" prot="public" virt="non-virtual"><scope>Azure::Core::Http::CurlTransportOptions</scope><name>SslVerifyPeer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
