<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="class_azure_1_1_core_1_1_paged_response" kind="class" language="C++" prot="public">
    <compoundname>Azure::Core::PagedResponse</compoundname>
    <includes refid="paged__response_8hpp" local="no">paged_response.hpp</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_azure_1_1_core_1_1_paged_response_1a5b8dca23e1d50b9e543a57370823087b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Azure::Core::PagedResponse&lt; T &gt;::m_hasPage</definition>
        <argsstring></argsstring>
        <name>m_hasPage</name>
        <qualifiedname>Azure::Core::PagedResponse::m_hasPage</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/paged_response.hpp" line="35" column="10" bodyfile="inc/azure/core/paged_response.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_azure_1_1_core_1_1_paged_response_1a7130db25dd1ab171818b38a29b0c5e25" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Azure::Core::PagedResponse&lt; T &gt;::CurrentPageToken</definition>
        <argsstring></argsstring>
        <name>CurrentPageToken</name>
        <qualifiedname>Azure::Core::PagedResponse::CurrentPageToken</qualifiedname>
        <briefdescription>
<para>The token used to fetch the current page. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/paged_response.hpp" line="67" column="17" bodyfile="inc/azure/core/paged_response.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_core_1_1_paged_response_1a2c30229b5c25fe6d984ae85d92ff38c2" prot="public" static="no" mutable="no">
        <type><ref refid="class_azure_1_1_nullable" kindref="compound">Azure::Nullable</ref>&lt; std::string &gt;</type>
        <definition>Azure::Nullable&lt;std::string&gt; Azure::Core::PagedResponse&lt; T &gt;::NextPageToken</definition>
        <argsstring></argsstring>
        <name>NextPageToken</name>
        <qualifiedname>Azure::Core::PagedResponse::NextPageToken</qualifiedname>
        <briefdescription>
<para>The token for getting the next page. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If there are no more pages, this field becomes an empty string.</para>
</simplesect>
<simplesect kind="note"><para>Assumes all services will include NextPageToken in the payload, it is set to either null or empty for the last page or to a value used for getting the next page. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/paged_response.hpp" line="78" column="21" bodyfile="inc/azure/core/paged_response.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_azure_1_1_core_1_1_paged_response_1a8f6d994c3784918caac862fd7c64c116" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_azure_1_1_core_1_1_http_1_1_raw_response" kindref="compound">Azure::Core::Http::RawResponse</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Azure::Core::Http::RawResponse&gt; Azure::Core::PagedResponse&lt; T &gt;::RawResponse</definition>
        <argsstring></argsstring>
        <name>RawResponse</name>
        <qualifiedname>Azure::Core::PagedResponse::RawResponse</qualifiedname>
        <briefdescription>
<para>The HTTP response returned by the service. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/paged_response.hpp" line="84" column="21" bodyfile="inc/azure/core/paged_response.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_azure_1_1_core_1_1_paged_response_1a75be341ab9c1e777fd1ecc96f359e4a5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azure::Core::PagedResponse&lt; T &gt;::PagedResponse</definition>
        <argsstring>()=default</argsstring>
        <name>PagedResponse</name>
        <qualifiedname>Azure::Core::PagedResponse::PagedResponse</qualifiedname>
        <briefdescription>
<para>Constructs a default instance of <computeroutput>PagedResponse</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/paged_response.hpp" line="42" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_paged_response_1ae5fbd2f1d9060b6c714f495105bc7e49" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azure::Core::PagedResponse&lt; T &gt;::PagedResponse</definition>
        <argsstring>(PagedResponse &amp;&amp;)=default</argsstring>
        <name>PagedResponse</name>
        <qualifiedname>Azure::Core::PagedResponse::PagedResponse</qualifiedname>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_paged_response" kindref="compound">PagedResponse</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Constructs <computeroutput>PagedResponse</computeroutput> by moving in another instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/paged_response.hpp" line="48" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_paged_response_1a1318df2afc520592939df8a02548b032" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_azure_1_1_core_1_1_paged_response" kindref="compound">PagedResponse</ref> &amp;</type>
        <definition>PagedResponse &amp; Azure::Core::PagedResponse&lt; T &gt;::operator=</definition>
        <argsstring>(PagedResponse &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>Azure::Core::PagedResponse::operator=</qualifiedname>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_paged_response" kindref="compound">PagedResponse</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Assigns another instance of <computeroutput>PagedResponse</computeroutput> by moving it in. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/paged_response.hpp" line="54" column="19"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_azure_1_1_core_1_1_paged_response_1afd14ac53847596903a1d6fc5b3e4ff5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Azure::Core::PagedResponse&lt; T &gt;::~PagedResponse</definition>
        <argsstring>()=default</argsstring>
        <name>~PagedResponse</name>
        <qualifiedname>Azure::Core::PagedResponse::~PagedResponse</qualifiedname>
        <briefdescription>
<para>Destructs <computeroutput>PagedResponse</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/paged_response.hpp" line="61" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_paged_response_1a141d5d914a9e1e440da4526a0ca20932" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Azure::Core::PagedResponse&lt; T &gt;::HasPage</definition>
        <argsstring>() const</argsstring>
        <name>HasPage</name>
        <qualifiedname>Azure::Core::PagedResponse::HasPage</qualifiedname>
        <briefdescription>
<para>Checks if a page exists. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Returns false after the last page. </para>
</simplesect>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if there are additional pages; otherwise, <computeroutput>false</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/paged_response.hpp" line="93" column="10" bodyfile="inc/azure/core/paged_response.hpp" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_paged_response_1a4a4acdaf4aed625e4d9bdfece37bfa01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Azure::Core::PagedResponse&lt; T &gt;::MoveToNextPage</definition>
        <argsstring>(const Azure::Core::Context &amp;context=Azure::Core::Context())</argsstring>
        <name>MoveToNextPage</name>
        <qualifiedname>Azure::Core::PagedResponse::MoveToNextPage</qualifiedname>
        <param>
          <type>const <ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Azure::Core::Context</ref> &amp;</type>
          <declname>context</declname>
          <defval><ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Azure::Core::Context</ref>()</defval>
        </param>
        <briefdescription>
<para>Moves to the next page of the response. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Calling this method on the last page will set <ref refid="class_azure_1_1_core_1_1_paged_response_1a141d5d914a9e1e440da4526a0ca20932" kindref="member">HasPage()</ref> to <computeroutput>false</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>A context to control the request lifetime. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/paged_response.hpp" line="102" column="10" bodyfile="inc/azure/core/paged_response.hpp" bodystart="102" bodyend="117"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>The base type and behavior for a paged response. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="remark"><para>The template is used for static-inheritance.</para>
</simplesect>
<simplesect kind="remark"><para>T classes must implement the way to get and move to the next page.</para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>A class type for static-inheritance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Azure::Core::PagedResponse&lt; T &gt;</label>
        <link refid="class_azure_1_1_core_1_1_paged_response"/>
        <childnode refid="2" relation="usage">
          <edgelabel>NextPageToken</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Azure::_detail::NontrivialEmptyType</label>
      </node>
      <node id="2">
        <label>Azure::Nullable&lt; std::string &gt;</label>
        <link refid="class_azure_1_1_nullable"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_disengaged</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="inc/azure/core/paged_response.hpp" line="29" column="14" bodyfile="inc/azure/core/paged_response.hpp" bodystart="29" bodyend="118"/>
    <listofallmembers>
      <member refid="class_azure_1_1_core_1_1_paged_response_1a7130db25dd1ab171818b38a29b0c5e25" prot="public" virt="non-virtual"><scope>Azure::Core::PagedResponse</scope><name>CurrentPageToken</name></member>
      <member refid="class_azure_1_1_core_1_1_paged_response_1a141d5d914a9e1e440da4526a0ca20932" prot="public" virt="non-virtual"><scope>Azure::Core::PagedResponse</scope><name>HasPage</name></member>
      <member refid="class_azure_1_1_core_1_1_paged_response_1a5b8dca23e1d50b9e543a57370823087b" prot="private" virt="non-virtual"><scope>Azure::Core::PagedResponse</scope><name>m_hasPage</name></member>
      <member refid="class_azure_1_1_core_1_1_paged_response_1a4a4acdaf4aed625e4d9bdfece37bfa01" prot="public" virt="non-virtual"><scope>Azure::Core::PagedResponse</scope><name>MoveToNextPage</name></member>
      <member refid="class_azure_1_1_core_1_1_paged_response_1a2c30229b5c25fe6d984ae85d92ff38c2" prot="public" virt="non-virtual"><scope>Azure::Core::PagedResponse</scope><name>NextPageToken</name></member>
      <member refid="class_azure_1_1_core_1_1_paged_response_1a1318df2afc520592939df8a02548b032" prot="protected" virt="non-virtual"><scope>Azure::Core::PagedResponse</scope><name>operator=</name></member>
      <member refid="class_azure_1_1_core_1_1_paged_response_1a75be341ab9c1e777fd1ecc96f359e4a5" prot="protected" virt="non-virtual"><scope>Azure::Core::PagedResponse</scope><name>PagedResponse</name></member>
      <member refid="class_azure_1_1_core_1_1_paged_response_1ae5fbd2f1d9060b6c714f495105bc7e49" prot="protected" virt="non-virtual"><scope>Azure::Core::PagedResponse</scope><name>PagedResponse</name></member>
      <member refid="class_azure_1_1_core_1_1_paged_response_1a8f6d994c3784918caac862fd7c64c116" prot="public" virt="non-virtual"><scope>Azure::Core::PagedResponse</scope><name>RawResponse</name></member>
      <member refid="class_azure_1_1_core_1_1_paged_response_1afd14ac53847596903a1d6fc5b3e4ff5d" prot="public" virt="virtual"><scope>Azure::Core::PagedResponse</scope><name>~PagedResponse</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
