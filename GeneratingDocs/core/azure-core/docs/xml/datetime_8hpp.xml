<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="datetime_8hpp" kind="file" language="C++">
    <compoundname>datetime.hpp</compoundname>
    <includes local="yes">azure/core/dll_import_export.hpp</includes>
    <includes local="no">chrono</includes>
    <includes local="no">ostream</includes>
    <includes local="no">string</includes>
    <includedby refid="core_8hpp" local="yes">inc/azure/core.hpp</includedby>
    <includedby refid="context_8hpp" local="yes">inc/azure/core/context.hpp</includedby>
    <includedby refid="credentials_8hpp" local="yes">inc/azure/core/credentials/credentials.hpp</includedby>
    <includedby refid="tracing__impl_8hpp" local="yes">inc/azure/core/internal/tracing/tracing_impl.hpp</includedby>
    <includedby refid="modified__conditions_8hpp" local="yes">inc/azure/core/modified_conditions.hpp</includedby>
    <includedby refid="datetime_8cpp" local="yes">src/datetime.cpp</includedby>
    <includedby refid="environment__log__level__listener_8cpp" local="yes">src/environment_log_level_listener.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>inc/azure/core/datetime.hpp</label>
        <link refid="datetime_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>azure/core/dll_import_export.hpp</label>
      </node>
      <node id="3">
        <label>chrono</label>
      </node>
      <node id="4">
        <label>ostream</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>inc/azure/core.hpp</label>
        <link refid="core_8hpp_source"/>
      </node>
      <node id="3">
        <label>inc/azure/core/context.hpp</label>
        <link refid="context_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>inc/azure/core/credentials/credentials.hpp</label>
        <link refid="credentials_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>inc/azure/core/credentials/token_credential_options.hpp</label>
        <link refid="token__credential__options_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>inc/azure/core/datetime.hpp</label>
        <link refid="datetime_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>inc/azure/core/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>inc/azure/core/http/curl_transport.hpp</label>
        <link refid="curl__transport_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>inc/azure/core/http/http.hpp</label>
        <link refid="http_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>inc/azure/core/http/policies/policy.hpp</label>
        <link refid="policy_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>inc/azure/core/http/raw_response.hpp</label>
        <link refid="raw__response_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>inc/azure/core/http/transport.hpp</label>
        <link refid="transport_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>inc/azure/core/http/win_http_transport.hpp</label>
        <link refid="win__http__transport_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>inc/azure/core/internal/client_options.hpp</label>
        <link refid="client__options_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>inc/azure/core/internal/credentials/authorization_challenge_parser.hpp</label>
        <link refid="authorization__challenge__parser_8hpp"/>
      </node>
      <node id="13">
        <label>inc/azure/core/internal/http/pipeline.hpp</label>
        <link refid="pipeline_8hpp"/>
      </node>
      <node id="26">
        <label>inc/azure/core/internal/io/null_body_stream.hpp</label>
        <link refid="null__body__stream_8hpp"/>
      </node>
      <node id="14">
        <label>inc/azure/core/internal/tracing/service_tracing.hpp</label>
        <link refid="service__tracing_8hpp_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>inc/azure/core/internal/tracing/tracing_impl.hpp</label>
        <link refid="tracing__impl_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>inc/azure/core/io/body_stream.hpp</label>
        <link refid="body__stream_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>inc/azure/core/modified_conditions.hpp</label>
        <link refid="modified__conditions_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>inc/azure/core/operation.hpp</label>
        <link refid="operation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>inc/azure/core/paged_response.hpp</label>
        <link refid="paged__response_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>inc/azure/core/response.hpp</label>
        <link refid="response_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>inc/azure/core/tracing/tracing.hpp</label>
        <link refid="tracing_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/http/curl/curl_connection_pool_private.hpp</label>
        <link refid="curl__connection__pool__private_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>src/http/curl/curl_connection_private.hpp</label>
        <link refid="curl__connection__private_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/http/curl/curl_session_private.hpp</label>
        <link refid="curl__session__private_8hpp"/>
      </node>
      <node id="15">
        <label>src/http/user_agent.cpp</label>
        <link refid="user__agent_8cpp"/>
      </node>
      <node id="10">
        <label>src/http/winhttp/win_http_request.hpp</label>
        <link refid="win__http__request_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_azure_1_1_date_time" prot="public">Azure::DateTime</innerclass>
    <innernamespace refid="namespace_azure">Azure</innernamespace>
    <innernamespace refid="namespace_azure_1_1_core">Azure::Core</innernamespace>
    <briefdescription>
<para>Support for date and time standardized string formats. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>Microsoft<sp/>Corporation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;azure/core/dll_import_export.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_azure" kindref="compound">Azure</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">_detail<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Clock<sp/>final<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">rep<sp/>=<sp/>int64_t;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">period<sp/>=<sp/>std::ratio&lt;1,<sp/>10000000&gt;;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">duration<sp/>=<sp/>std::chrono::duration&lt;rep,<sp/>period&gt;;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">time_point<sp/>=<sp/>std::chrono::time_point&lt;Clock&gt;;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>now()<sp/>calls<sp/>system_clock::now(),<sp/>we<sp/>have<sp/>the<sp/>same<sp/>to<sp/>say<sp/>about<sp/>the<sp/>clock<sp/>steadiness.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>system_clock<sp/>is<sp/>not<sp/>a<sp/>steady<sp/>clock.<sp/>It<sp/>is<sp/>calendar-based,<sp/>which<sp/>means<sp/>it<sp/>can<sp/>be<sp/>adjusted,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>it<sp/>may<sp/>go<sp/>backwards<sp/>in<sp/>time<sp/>after<sp/>adjustments,<sp/>or<sp/>jump<sp/>forward<sp/>faster<sp/>than<sp/>the<sp/>actual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>time<sp/>passes,<sp/>if<sp/>you<sp/>catch<sp/>the<sp/>moment<sp/>before<sp/>and<sp/>after<sp/>syncing<sp/>the<sp/>clock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Steady<sp/>clock<sp/>would<sp/>be<sp/>good<sp/>for<sp/>measuring<sp/>elapsed<sp/>time<sp/>without<sp/>reboots<sp/>(or<sp/>hibernation?).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Steady<sp/>clock&apos;s<sp/>epoch<sp/>=<sp/>boot<sp/>time,<sp/>and<sp/>it<sp/>would<sp/>only<sp/>go<sp/>forward<sp/>in<sp/>steady<sp/>fashion,<sp/>after<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>system<sp/>has<sp/>started.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Using<sp/>this<sp/>clock<sp/>in<sp/>combination<sp/>with<sp/>system_clock<sp/>is<sp/>common<sp/>scenario.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>would<sp/>not<sp/>be<sp/>possible<sp/>to<sp/>base<sp/>this<sp/>clock<sp/>on<sp/>steady_clock<sp/>and<sp/>provide<sp/>an<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>universally<sp/>works<sp/>in<sp/>any<sp/>context<sp/>in<sp/>predictable<sp/>manner.<sp/>However,<sp/>it<sp/>does<sp/>not<sp/>mean<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>implementation<sp/>can&apos;t<sp/>use<sp/>steady_clock<sp/>in<sp/>conjunction<sp/>with<sp/>this<sp/>clock:<sp/>an<sp/>author<sp/>can<sp/>get<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>duration<sp/>between<sp/>two<sp/>time_points<sp/>of<sp/>this<sp/>clock<sp/>(or<sp/>between<sp/>system_clock::time<sp/>point<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>clock&apos;s<sp/>time_point),<sp/>and<sp/>add<sp/>that<sp/>duration<sp/>to<sp/>steady<sp/>clock&apos;s<sp/>time_point<sp/>to<sp/>get<sp/>a<sp/>new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>time_point<sp/>in<sp/>the<sp/>steady<sp/>clock&apos;s<sp/>&quot;coordinate<sp/>system&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_steady<sp/>=<sp/>std::chrono::system_clock::is_steady;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>time_point<sp/>now();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>_detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="class_azure_1_1_date_time" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_azure_1_1_date_time" kindref="compound">DateTime</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>_detail::Clock::time_point<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>AZ_CORE_DLLEXPORT<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_date_time" kindref="compound">DateTime</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SystemClockEpoch;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="class_azure_1_1_date_time_1a4a47aa28681164fad63a17ff3b04df02" kindref="member">DateTime</ref>(</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>year,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>month,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>day,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>hour,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>minute,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>second,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>fracSec,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>dayOfWeek,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>localDiffHours,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>localDiffMinutes,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>roundFracSecUp<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThrowIfUnsupportedYear()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetDateTimeParts(</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16_t*<sp/>year,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int8_t*<sp/>month,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int8_t*<sp/>day,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int8_t*<sp/>hour,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int8_t*<sp/>minute,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int8_t*<sp/>second,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int32_t*<sp/>fracSec,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int8_t*<sp/>dayOfWeek)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>std::string<sp/>ToStringRfc1123()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91" refid="class_azure_1_1_date_time_1a4a47aa28681164fad63a17ff3b04df02" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_date_time_1a4a47aa28681164fad63a17ff3b04df02" kindref="member">DateTime</ref>()<sp/>:<sp/><ref refid="class_azure_1_1_date_time_1a47ebd257a65488440d2a00bdde9342d2" kindref="member">time_point</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="class_azure_1_1_date_time_1a31d945351b8c6061a69f1954a5984432" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_date_time_1a31d945351b8c6061a69f1954a5984432" kindref="member">DateTime</ref>(</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>year,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>month<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>day<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>hour<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>minute<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>second<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_azure_1_1_date_time" kindref="compound">DateTime</ref>(year,<sp/>month,<sp/>day,<sp/>hour,<sp/>minute,<sp/>second,<sp/>0,<sp/>-1,<sp/>0,<sp/>0)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="class_azure_1_1_date_time_1a2fd52469cf778230bcc178d7795c98c1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_date_time_1a2fd52469cf778230bcc178d7795c98c1" kindref="member">DateTime</ref>(<ref refid="class_azure_1_1_date_time_1a47ebd257a65488440d2a00bdde9342d2" kindref="member">time_point</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>timePoint)<sp/>:<sp/><ref refid="class_azure_1_1_date_time_1a47ebd257a65488440d2a00bdde9342d2" kindref="member">time_point</ref>(timePoint)<sp/>{}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="class_azure_1_1_date_time_1a480dea5c0d4099e8c0a91194eece5b91" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_azure_1_1_date_time_1a480dea5c0d4099e8c0a91194eece5b91" kindref="member">DateTime</ref>(std::chrono::system_clock::time_point<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>systemTime)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_azure_1_1_date_time" kindref="compound">DateTime</ref>(</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SystemClockEpoch<sp/>+<sp/>std::chrono::duration_cast&lt;duration&gt;(systemTime.time_since_epoch()))</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>std::chrono::system_clock::time_point()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="class_azure_1_1_date_time_1a5f0fff7186f08a21b26057923d3c6507" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_date_time_1a5f0fff7186f08a21b26057923d3c6507" kindref="member">TimeFractionFormat</ref></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_azure_1_1_date_time_1a5f0fff7186f08a21b26057923d3c6507ad2036c99295a7229c20dfecbbb2eb11f" kindref="member">DropTrailingZeros</ref>,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_azure_1_1_date_time_1a5f0fff7186f08a21b26057923d3c6507ac2d00adea7dc680aca053d273a441d57" kindref="member">AllDigits</ref>,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_azure_1_1_date_time_1a5f0fff7186f08a21b26057923d3c6507aa8156810bfee2bd2b44765b9e91db3bd" kindref="member">Truncate</ref></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="class_azure_1_1_date_time_1a9dd0e5265e6c5cf2ef419a30b7f806e5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_date_time_1a9dd0e5265e6c5cf2ef419a30b7f806e5" kindref="member">DateFormat</ref></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_azure_1_1_date_time_1a9dd0e5265e6c5cf2ef419a30b7f806e5a550760bbd51d117ffb22059b91d79d9f" kindref="member">Rfc1123</ref>,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_azure_1_1_date_time_1a9dd0e5265e6c5cf2ef419a30b7f806e5ac8d161c49f2f3a896d3848046f84feaa" kindref="member">Rfc3339</ref>,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_date_time" kindref="compound">DateTime</ref><sp/><ref refid="class_azure_1_1_date_time_1abe9f1e977e70d30c8efada1f41b4b30f" kindref="member">Parse</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>dateTime,<sp/><ref refid="class_azure_1_1_date_time_1a9dd0e5265e6c5cf2ef419a30b7f806e5" kindref="member">DateFormat</ref><sp/>format);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_azure_1_1_date_time_1aea9897a8e5668dc7ba30fa631d27482b" kindref="member">ToString</ref>(<ref refid="class_azure_1_1_date_time_1a9dd0e5265e6c5cf2ef419a30b7f806e5" kindref="member">DateFormat</ref><sp/>format<sp/>=<sp/><ref refid="class_azure_1_1_date_time_1a9dd0e5265e6c5cf2ef419a30b7f806e5ac8d161c49f2f3a896d3848046f84feaa" kindref="member">DateFormat::Rfc3339</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_azure_1_1_date_time_1aea9897a8e5668dc7ba30fa631d27482b" kindref="member">ToString</ref>(<ref refid="class_azure_1_1_date_time_1a9dd0e5265e6c5cf2ef419a30b7f806e5" kindref="member">DateFormat</ref><sp/>format,<sp/><ref refid="class_azure_1_1_date_time_1a5f0fff7186f08a21b26057923d3c6507" kindref="member">TimeFractionFormat</ref><sp/>fractionFormat)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">};</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>_detail::Clock::time_point<sp/>_detail::Clock::now()</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DateTime(std::chrono::system_clock::now());</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="namespace_azure_1ad5f802a27f1622bcffc8f6bfd20bbbf0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_azure_1ad5f802a27f1622bcffc8f6bfd20bbbf0" kindref="member">operator==</ref>(<ref refid="class_azure_1_1_date_time" kindref="compound">DateTime</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>dt,<sp/>std::chrono::system_clock::time_point<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>tp)</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dt<sp/>==<sp/><ref refid="class_azure_1_1_date_time" kindref="compound">DateTime</ref>(tp);</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="namespace_azure_1aac14644b6a38606b2e4fd57580b832a3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_azure_1aac14644b6a38606b2e4fd57580b832a3" kindref="member">operator&lt;</ref>(<ref refid="class_azure_1_1_date_time" kindref="compound">DateTime</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>dt,<sp/>std::chrono::system_clock::time_point<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>tp)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dt<sp/>&lt;<sp/><ref refid="class_azure_1_1_date_time" kindref="compound">DateTime</ref>(tp);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="namespace_azure_1a40c71f411622d257183ce5466ced4014" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_azure_1a40c71f411622d257183ce5466ced4014" kindref="member">operator&lt;=</ref>(<ref refid="class_azure_1_1_date_time" kindref="compound">DateTime</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>dt,<sp/>std::chrono::system_clock::time_point<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>tp)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dt<sp/>&lt;=<sp/><ref refid="class_azure_1_1_date_time" kindref="compound">DateTime</ref>(tp);</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="namespace_azure_1a8832e28c92a8f5e0bfeec8c472e263ba" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_azure_1a8832e28c92a8f5e0bfeec8c472e263ba" kindref="member">operator!=</ref>(<ref refid="class_azure_1_1_date_time" kindref="compound">DateTime</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>dt,<sp/>std::chrono::system_clock::time_point<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>tp)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(dt<sp/>==<sp/>tp);</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="namespace_azure_1a7752c823acda5b4e260716b587c58f94" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_azure_1a7752c823acda5b4e260716b587c58f94" kindref="member">operator&gt;</ref>(<ref refid="class_azure_1_1_date_time" kindref="compound">DateTime</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>dt,<sp/>std::chrono::system_clock::time_point<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>tp)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(dt<sp/>&lt;=<sp/>tp);</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="namespace_azure_1a67661c8f8de216401061590d5a5fa352" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_azure_1a67661c8f8de216401061590d5a5fa352" kindref="member">operator&gt;=</ref>(<ref refid="class_azure_1_1_date_time" kindref="compound">DateTime</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>dt,<sp/>std::chrono::system_clock::time_point<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>tp)</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(dt<sp/>&lt;<sp/>tp);</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="namespace_azure_1aeabed2737401e81de437422df6f154c1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_azure_1ad5f802a27f1622bcffc8f6bfd20bbbf0" kindref="member">operator==</ref>(std::chrono::system_clock::time_point<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>tp,<sp/><ref refid="class_azure_1_1_date_time" kindref="compound">DateTime</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>dt)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dt<sp/>==<sp/>tp;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="namespace_azure_1a8acbef4b5fbd8a2a6bcfd74a3ebe8c9b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_azure_1a8832e28c92a8f5e0bfeec8c472e263ba" kindref="member">operator!=</ref>(std::chrono::system_clock::time_point<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>tp,<sp/><ref refid="class_azure_1_1_date_time" kindref="compound">DateTime</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>dt)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dt<sp/>!=<sp/>tp;</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="namespace_azure_1abb7c58568e4970a697a304e7e912fd1f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_azure_1aac14644b6a38606b2e4fd57580b832a3" kindref="member">operator&lt;</ref>(std::chrono::system_clock::time_point<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>tp,<sp/><ref refid="class_azure_1_1_date_time" kindref="compound">DateTime</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>dt)</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(dt<sp/>&gt;<sp/>tp);</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="namespace_azure_1a35b2a6d5662a1dc95d9b9f1a60c60dc2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_azure_1a40c71f411622d257183ce5466ced4014" kindref="member">operator&lt;=</ref>(std::chrono::system_clock::time_point<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>tp,<sp/><ref refid="class_azure_1_1_date_time" kindref="compound">DateTime</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>dt)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(dt<sp/>&gt;=<sp/>tp);</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="namespace_azure_1a489f78638457fc1c4f263f51d0cfb381" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_azure_1a7752c823acda5b4e260716b587c58f94" kindref="member">operator&gt;</ref>(std::chrono::system_clock::time_point<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>tp,<sp/><ref refid="class_azure_1_1_date_time" kindref="compound">DateTime</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>dt)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(dt<sp/>&lt;<sp/>tp);</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="namespace_azure_1abb600836cfa0cbe98b3987b562512007" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_azure_1a67661c8f8de216401061590d5a5fa352" kindref="member">operator&gt;=</ref>(std::chrono::system_clock::time_point<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>tp,<sp/><ref refid="class_azure_1_1_date_time" kindref="compound">DateTime</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>dt)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(dt<sp/>&lt;=<sp/>tp);</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Core<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">_internal<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PosixTimeConverter<sp/>final<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>DateTime<sp/>PosixTimeToDateTime(int64_t<sp/>posixTime)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{DateTime(1970)<sp/>+<sp/>std::chrono::seconds(posixTime)};</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int64_t<sp/>DateTimeToPosixTime(DateTime<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>dateTime)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>This<sp/>count<sp/>starts<sp/>at<sp/>the<sp/>POSIX<sp/>epoch<sp/>which<sp/>is<sp/>January<sp/>1st,<sp/>1970<sp/>UTC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::duration_cast&lt;std::chrono::seconds&gt;(dateTime<sp/>-<sp/>DateTime(1970)).count();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>PosixTimeConverter()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>~PosixTimeConverter()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Core::_internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Azure</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="inc/azure/core/datetime.hpp"/>
  </compounddef>
</doxygen>
