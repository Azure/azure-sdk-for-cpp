<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="curl_8cpp" kind="file" language="C++">
    <compoundname>curl.cpp</compoundname>
    <includes refid="base64_8hpp" local="yes">azure/core/base64.hpp</includes>
    <includes refid="platform_8hpp" local="yes">azure/core/platform.hpp</includes>
    <includes refid="curl__transport_8hpp" local="yes">azure/core/http/curl_transport.hpp</includes>
    <includes refid="http_8hpp" local="yes">azure/core/http/http.hpp</includes>
    <includes refid="policy_8hpp" local="yes">azure/core/http/policies/policy.hpp</includes>
    <includes refid="transport_8hpp" local="yes">azure/core/http/transport.hpp</includes>
    <includes refid="log_8hpp" local="yes">azure/core/internal/diagnostics/log.hpp</includes>
    <includes refid="strings_8hpp" local="yes">azure/core/internal/strings.hpp</includes>
    <includes refid="curl__connection__pool__private_8hpp" local="yes">curl_connection_pool_private.hpp</includes>
    <includes refid="curl__connection__private_8hpp" local="yes">curl_connection_private.hpp</includes>
    <includes refid="curl__session__private_8hpp" local="yes">curl_session_private.hpp</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">chrono</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includes local="no">thread</includes>
    <incdepgraph>
      <node id="12">
        <label>azure/core/azure_assert.hpp</label>
        <link refid="azure__assert_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>azure/core/base64.hpp</label>
        <link refid="base64_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>azure/core/case_insensitive_containers.hpp</label>
        <link refid="case__insensitive__containers_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>azure/core/context.hpp</label>
        <link refid="context_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>azure/core/credentials/credentials.hpp</label>
        <link refid="credentials_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>azure/core/datetime.hpp</label>
        <link refid="datetime_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>azure/core/diagnostics/logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>azure/core/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>azure/core/http/curl_transport.hpp</label>
        <link refid="curl__transport_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>azure/core/http/http.hpp</label>
        <link refid="http_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>azure/core/http/http_status_code.hpp</label>
        <link refid="http__status__code_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>azure/core/http/policies/policy.hpp</label>
        <link refid="policy_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>azure/core/http/raw_response.hpp</label>
        <link refid="raw__response_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>azure/core/http/transport.hpp</label>
        <link refid="transport_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>azure/core/internal/contract.hpp</label>
        <link refid="contract_8hpp_source"/>
      </node>
      <node id="52">
        <label>azure/core/internal/diagnostics/log.hpp</label>
        <link refid="log_8hpp_source"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>azure/core/internal/http/http_sanitizer.hpp</label>
        <link refid="http__sanitizer_8hpp_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>azure/core/internal/http/user_agent.hpp</label>
        <link refid="user__agent_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>azure/core/internal/strings.hpp</label>
        <link refid="strings_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>azure/core/internal/unique_handle.hpp</label>
        <link refid="unique__handle_8hpp_source"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>azure/core/io/body_stream.hpp</label>
        <link refid="body__stream_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>azure/core/nullable.hpp</label>
        <link refid="nullable_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>azure/core/platform.hpp</label>
        <link refid="platform_8hpp"/>
      </node>
      <node id="39">
        <label>azure/core/url.hpp</label>
        <link refid="url_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>azure/core/uuid.hpp</label>
        <link refid="uuid_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/http/curl/curl.cpp</label>
        <link refid="curl_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>curl_connection_pool_private.hpp</label>
        <link refid="curl__connection__pool__private_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>curl_connection_private.hpp</label>
        <link refid="curl__connection__private_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>curl_session_private.hpp</label>
        <link refid="curl__session__private_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>algorithm</label>
      </node>
      <node id="49">
        <label>array</label>
      </node>
      <node id="20">
        <label>atomic</label>
      </node>
      <node id="16">
        <label>azure/core/dll_import_export.hpp</label>
      </node>
      <node id="19">
        <label>azure/core/rtti.hpp</label>
      </node>
      <node id="14">
        <label>cassert</label>
      </node>
      <node id="17">
        <label>chrono</label>
      </node>
      <node id="60">
        <label>condition_variable</label>
      </node>
      <node id="50">
        <label>cstddef</label>
      </node>
      <node id="4">
        <label>cstdint</label>
      </node>
      <node id="33">
        <label>cstdio</label>
      </node>
      <node id="13">
        <label>cstdlib</label>
      </node>
      <node id="26">
        <label>cstring</label>
      </node>
      <node id="59">
        <label>curl/curl.h</label>
      </node>
      <node id="43">
        <label>exception</label>
      </node>
      <node id="34">
        <label>functional</label>
      </node>
      <node id="65">
        <label>iomanip</label>
      </node>
      <node id="54">
        <label>iostream</label>
      </node>
      <node id="61">
        <label>list</label>
      </node>
      <node id="27">
        <label>map</label>
      </node>
      <node id="21">
        <label>memory</label>
      </node>
      <node id="44">
        <label>mutex</label>
      </node>
      <node id="37">
        <label>new</label>
      </node>
      <node id="18">
        <label>ostream</label>
      </node>
      <node id="28">
        <label>set</label>
      </node>
      <node id="51">
        <label>shared_mutex</label>
      </node>
      <node id="55">
        <label>sstream</label>
      </node>
      <node id="5">
        <label>stdexcept</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="62">
        <label>thread</label>
      </node>
      <node id="22">
        <label>type_traits</label>
      </node>
      <node id="63">
        <label>unordered_map</label>
      </node>
      <node id="40">
        <label>unordered_set</label>
      </node>
      <node id="38">
        <label>utility</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_azure">Azure</innernamespace>
    <innernamespace refid="namespace_azure_1_1_core">Azure::Core</innernamespace>
    <innernamespace refid="namespace_azure_1_1_core_1_1_http">Azure::Core::Http</innernamespace>
    <sectiondef kind="func">
      <memberdef kind="function" id="curl_8cpp_1ab6f5bfda651f4ce91f6f433951d8402e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="class_azure_1_1_core_1_1_http_1_1_raw_response" kindref="compound">RawResponse</ref> &gt;</type>
        <definition>static std::unique_ptr&lt; RawResponse &gt; CreateHTTPResponse</definition>
        <argsstring>(uint8_t const *const begin, uint8_t const *const last)</argsstring>
        <name>CreateHTTPResponse</name>
        <param>
          <type>uint8_t const *const</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>uint8_t const *const</type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl.cpp" line="541" column="24" bodyfile="src/http/curl/curl.cpp" bodystart="541" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="curl_8cpp_1a019fc87d24aff532876959b017cd40ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="class_azure_1_1_core_1_1_http_1_1_raw_response" kindref="compound">RawResponse</ref> &gt;</type>
        <definition>static std::unique_ptr&lt; RawResponse &gt; CreateHTTPResponse</definition>
        <argsstring>(std::string const &amp;header)</argsstring>
        <name>CreateHTTPResponse</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/http/curl/curl.cpp" line="573" column="24" bodyfile="src/http/curl/curl.cpp" bodystart="573" bodyend="578"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>Microsoft<sp/>Corporation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cspell:words<sp/>OCSP<sp/>crls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base64_8hpp" kindref="compound">azure/core/base64.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="platform_8hpp" kindref="compound">azure/core/platform.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AZ_PLATFORM_WINDOWS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(WIN32_LEAN_AND_MEAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WIN32_LEAN_AND_MEAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(NOMINMAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NOMINMAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="platform_8hpp" kindref="compound">azure/core/platform.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AZ_PLATFORM_WINDOWS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(WIN32_LEAN_AND_MEAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WIN32_LEAN_AND_MEAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(NOMINMAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NOMINMAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="curl__transport_8hpp" kindref="compound">azure/core/http/curl_transport.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="http_8hpp" kindref="compound">azure/core/http/http.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="policy_8hpp" kindref="compound">azure/core/http/policies/policy.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="transport_8hpp" kindref="compound">azure/core/http/transport.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;azure/core/internal/diagnostics/log.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="strings_8hpp" kindref="compound">azure/core/internal/strings.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Private<sp/>include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="curl__connection__pool__private_8hpp" kindref="compound">curl_connection_pool_private.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="curl__connection__private_8hpp" kindref="compound">curl_connection_private.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="curl__session__private_8hpp" kindref="compound">curl_session_private.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AZ_PLATFORM_POSIX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/opensslv.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>OPENSSL_VERSION_NUMBER<sp/>&lt;<sp/>0x30000000L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USE_OPENSSL_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USE_OPENSSL_3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>OPENSSL_VERSION_NUMBER<sp/>&lt;<sp/>0x30000000L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/asn1t.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/err.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>OpenSSL<sp/>&gt;<sp/>3.0,<sp/>we<sp/>can<sp/>use<sp/>the<sp/>new<sp/>API<sp/>to<sp/>get<sp/>the<sp/>certificate&apos;s<sp/>OCSP<sp/>URL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_OPENSSL_3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/http.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_OPENSSL_1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/ocsp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(USE_OPENSSL_1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/safestack.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/ssl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/x509.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/x509_vfy.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/x509v3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>AZ_PLATFORM_POSIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AZ_PLATFORM_POSIX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;poll.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>for<sp/>poll()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/socket.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>for<sp/>socket<sp/>shutdown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(AZ_PLATFORM_WINDOWS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;winsock2.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>for<sp/>WSAPoll();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>AZ_PLATFORM_POSIX/AZ_PLATFORM_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal">std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LogMsgPrefix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;[CURL<sp/>Transport<sp/>Adapter]:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(push)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C26812:<sp/>The<sp/>enum<sp/>type<sp/>&apos;CURLoption&apos;<sp/>is<sp/>un-scoped.<sp/>Prefer<sp/>&apos;enum<sp/>class&apos;<sp/>over<sp/>&apos;enum&apos;<sp/>(Enum.3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable<sp/>:<sp/>26812)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SetLibcurlOption(</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>Azure::Core::_internal::UniqueHandle&lt;CURL&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>CURLoption<sp/>option,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>value,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>CURLcode*<sp/>outError)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>*outError<sp/>=<sp/>curl_easy_setopt(handle.get(),<sp/>option,<sp/>value);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*outError<sp/>==<sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>PollSocketDirection</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>Read<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>Write<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pollSocketUntilEventOrTimeout(</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Azure::Core::Context</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>context,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>curl_socket_t<sp/>socketFileDescriptor,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>PollSocketDirection<sp/>direction,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>timeout)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(AZ_PLATFORM_WINDOWS)<sp/>&amp;&amp;<sp/>!defined(AZ_PLATFORM_POSIX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>platform<sp/>does<sp/>not<sp/>support<sp/>Poll().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">TransportException</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>while<sp/>sending<sp/>request.<sp/>Platform<sp/>does<sp/>not<sp/>support<sp/>Poll()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">pollfd<sp/>poller;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>poller.fd<sp/>=<sp/>socketFileDescriptor;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/>PollSocketDirection::Read)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>poller.events<sp/>=<sp/>POLLIN;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>poller.events<sp/>=<sp/>POLLOUT;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>poll<sp/>with<sp/>the<sp/>poller<sp/>struct.<sp/>Poll<sp/>can<sp/>handle<sp/>multiple<sp/>file<sp/>descriptors<sp/>by<sp/>making<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pollfd<sp/>array<sp/>and<sp/>passing<sp/>the<sp/>size<sp/>of<sp/>it<sp/>as<sp/>the<sp/>second<sp/>arg.<sp/>Since<sp/>we<sp/>are<sp/>only<sp/>passing<sp/>one<sp/>fd,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>use<sp/>1<sp/>as<sp/>arg.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Cancelation<sp/>is<sp/>possible<sp/>by<sp/>calling<sp/>poll()<sp/>with<sp/>small<sp/>time<sp/>intervals<sp/>instead<sp/>of<sp/>using<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>requested<sp/>timeout.<sp/>The<sp/>polling<sp/>interval<sp/>is<sp/>1<sp/>second.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::chrono::milliseconds<sp/>pollInterval(1000);<sp/></highlight><highlight class="comment">//<sp/>1<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>now<sp/>=<sp/>std::chrono::steady_clock::now();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>deadline<sp/>=<sp/>now<sp/>+<sp/>std::chrono::milliseconds(timeout);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(now<sp/>&lt;<sp/>deadline)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>doing<sp/>any<sp/>work,<sp/>check<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>context<sp/>hasn&apos;t<sp/>already<sp/>been<sp/>cancelled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>context.<ref refid="class_azure_1_1_core_1_1_context_1a08e3e60c70888f118ea0038a8b5e8df2" kindref="member">ThrowIfCancelled</ref>();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pollTimeoutMs<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::min)(</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pollInterval,<sp/>std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(deadline<sp/>-<sp/>now))</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.count());</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AZ_PLATFORM_POSIX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>poll(&amp;poller,<sp/>1,<sp/>pollTimeoutMs);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>EINTR<sp/>==<sp/>errno)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(AZ_PLATFORM_WINDOWS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>WSAPoll(&amp;poller,<sp/>1,<sp/>pollTimeoutMs);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>now<sp/>=<sp/>std::chrono::steady_clock::now();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>result<sp/>can<sp/>be<sp/>0<sp/>(timeout),<sp/>&gt;<sp/>0<sp/>(socket<sp/>ready),<sp/>or<sp/>&lt;<sp/>0<sp/>(error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_azure_1_1_core_1_1_diagnostics_1_1_logger" kindref="compound">Azure::Core::Diagnostics::Logger</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Azure::Core::Diagnostics::_internal::Log;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AZ_PLATFORM_WINDOWS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Windows<sp/>needs<sp/>this<sp/>after<sp/>every<sp/>write<sp/>to<sp/>socket<sp/>or<sp/>performance<sp/>would<sp/>be<sp/>reduced<sp/>to<sp/>1/4<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//<sp/>uploading<sp/>operation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/Azure/azure-sdk-for-cpp/issues/644</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WinSocketSetBuffSize(curl_socket_t<sp/>socket)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>ULONG<sp/>ideal{};</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>DWORD<sp/>ideallen{};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>WSAloctl<sp/>would<sp/>get<sp/>the<sp/>ideal<sp/>size<sp/>for<sp/>the<sp/>socket<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WSAIoctl(socket,<sp/>SIO_IDEAL_SEND_BACKLOG_QUERY,<sp/>0,<sp/>0,<sp/>&amp;ideal,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ideal),<sp/>&amp;ideallen,<sp/>0,<sp/>0)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>WSAloctl<sp/>succeeded<sp/>(returned<sp/>0),<sp/>set<sp/>the<sp/>socket<sp/>buffer<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Specifies<sp/>the<sp/>total<sp/>per-socket<sp/>buffer<sp/>space<sp/>reserved<sp/>for<sp/>sends.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>https://docs.microsoft.com/windows/win32/api/winsock/nf-winsock-setsockopt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>setsockopt(socket,<sp/>SOL_SOCKET,<sp/>SO_SNDBUF,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;ideal,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ideal));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CleanupThread()</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>Avoid<sp/>using<sp/>Log::Write<sp/>in<sp/>here<sp/>as<sp/>it<sp/>may<sp/>fail<sp/>on<sp/>macOS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>issue:<sp/>https://github.com/Azure/azure-sdk-for-cpp/issues/3224</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>method<sp/>can<sp/>wake<sp/>up<sp/>in<sp/>de-attached<sp/>mode<sp/>after<sp/>the<sp/>application<sp/>has<sp/>been<sp/>terminated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>that<sp/>happens,<sp/>trying<sp/>to<sp/>use<sp/>`Log`<sp/>would<sp/>cause<sp/>`abort`<sp/>as<sp/>it<sp/>was<sp/>previously<sp/>deallocated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Azure::Core::Http::_detail;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Won&apos;t<sp/>continue<sp/>until<sp/>the<sp/>ConnectionPoolMutex<sp/>is<sp/>released<sp/>from<sp/>MoveConnectionBackToPool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lockForPoolCleaning(</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurlConnectionPool::g_curlConnectionPool.ConnectionPoolMutex);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>the<sp/>default<sp/>time<sp/>OR<sp/>to<sp/>the<sp/>signal<sp/>from<sp/>the<sp/>conditional<sp/>variable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait_for<sp/>releases<sp/>the<sp/>mutex<sp/>lock<sp/>when<sp/>it<sp/>goes<sp/>to<sp/>sleep<sp/>and<sp/>it<sp/>takes<sp/>the<sp/>lock<sp/>again<sp/>when<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wakes<sp/>up<sp/>(or<sp/>it&apos;s<sp/>cancelled).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CurlConnectionPool::g_curlConnectionPool.ConditionalVariableForCleanThread.wait_for(</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lockForPoolCleaning,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::milliseconds(DefaultCleanerIntervalMilliseconds),</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[]()<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>CurlConnectionPool::g_curlConnectionPool.ConnectionPoolIndex.size()<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}))</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cancelled<sp/>by<sp/>another<sp/>thread<sp/>or<sp/>no<sp/>connections<sp/>on<sp/>wakeup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CurlConnectionPool::g_curlConnectionPool.IsCleanThreadRunning<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(CurlConnectionPool::g_curlConnectionPool</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ConnectionPoolIndex)::mapped_type<sp/>connectionsToBeCleaned;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>the<sp/>connection<sp/>pool<sp/>index<sp/>-<sp/>Note:<sp/>lock<sp/>is<sp/>re-taken<sp/>for<sp/>the<sp/>mutex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Notes:<sp/>The<sp/>size<sp/>of<sp/>each<sp/>host-index<sp/>is<sp/>always<sp/>expected<sp/>to<sp/>be<sp/>greater<sp/>than<sp/>0<sp/>because<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>host-index<sp/>is<sp/>removed<sp/>anytime<sp/>it<sp/>becomes<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>CurlConnectionPool::g_curlConnectionPool.ConnectionPoolIndex.begin();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>!=<sp/>CurlConnectionPool::g_curlConnectionPool.ConnectionPoolIndex.end();)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>pool<sp/>index<sp/>behaves<sp/>as<sp/>a<sp/>Last-in-First-out<sp/>(connections<sp/>are<sp/>added<sp/>to<sp/>the<sp/>pool<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>push_front).<sp/>The<sp/>last<sp/>connection<sp/>moved<sp/>to<sp/>the<sp/>pool<sp/>will<sp/>be<sp/>the<sp/>first<sp/>to<sp/>be<sp/>re-used.<sp/>Because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>this,<sp/>the<sp/>oldest<sp/>connection<sp/>in<sp/>the<sp/>pool<sp/>can<sp/>be<sp/>found<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>list.<sp/>Looping<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>connection<sp/>pool<sp/>backwards<sp/>until<sp/>a<sp/>connection<sp/>that<sp/>is<sp/>not<sp/>expired<sp/>is<sp/>found<sp/>or<sp/>until<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>connections<sp/>are<sp/>removed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>connectionList<sp/>=<sp/>index-&gt;second;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>connectionIter<sp/>=<sp/>connectionList.end();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(connectionIter<sp/>!=<sp/>connectionList.begin())</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--connectionIter;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*connectionIter)-&gt;IsExpired())</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>connection<sp/>from<sp/>the<sp/>pool<sp/>and<sp/>update<sp/>the<sp/>connection<sp/>to<sp/>the<sp/>next<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>is<sp/>going<sp/>to<sp/>be<sp/>list.end()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connectionsToBeCleaned.emplace_back(std::move(*connectionIter));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connectionIter<sp/>=<sp/>connectionList.erase(connectionIter);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(connectionList.empty())</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>CurlConnectionPool::g_curlConnectionPool.ConnectionPoolIndex.erase(index);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++index;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>lockForPoolCleaning.unlock();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>actual<sp/>connections<sp/>release<sp/>work<sp/>here,<sp/>without<sp/>holding<sp/>the<sp/>mutex.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal">std::string<sp/>PemEncodeFromBase64(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>base64,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pemType)</highlight></codeline>
<codeline lineno="278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>rv;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>rv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-----BEGIN<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pemType<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-----&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>std::string<sp/>encodedValue(base64);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>crlf<sp/>characters<sp/>every<sp/>80<sp/>characters<sp/>into<sp/>the<sp/>base64<sp/>encoded<sp/>key<sp/>to<sp/>make<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>prettier.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>insertPos<sp/>=<sp/>80;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(insertPos<sp/>&lt;<sp/>encodedValue.length())</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>encodedValue.insert(insertPos,<sp/></highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>insertPos<sp/>+=<sp/>82;<sp/></highlight><highlight class="comment">/*<sp/>80<sp/>characters<sp/>plus<sp/>the<sp/>\r\n<sp/>we<sp/>just<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>rv<sp/>&lt;&lt;<sp/>encodedValue<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-----END<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pemType<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-----&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv.str();</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options" kindref="compound">Azure::Core::Http::CurlTransportOptions</ref><sp/>CurlTransportOptionsFromTransportOptions(</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_azure_1_1_core_1_1_http_1_1_policies_1_1_transport_options" kindref="compound">Azure::Core::Http::Policies::TransportOptions</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>transportOptions)</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options" kindref="compound">Azure::Core::Http::CurlTransportOptions</ref><sp/>curlOptions;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>curlOptions.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1ac6eb38a8ef89772e7e24f77950d550e9" kindref="member">Proxy</ref><sp/>=<sp/>transportOptions.<ref refid="struct_azure_1_1_core_1_1_http_1_1_policies_1_1_transport_options_1ab25c172097ae8c8b86b9d26265397b84" kindref="member">HttpProxy</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transportOptions.<ref refid="struct_azure_1_1_core_1_1_http_1_1_policies_1_1_transport_options_1af07684ad257ce136b94aa2b83c17b772" kindref="member">ProxyUserName</ref>.<ref refid="class_azure_1_1_nullable_1a9a0c797c4eb208551e045de2d97809f7" kindref="member">HasValue</ref>())</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>curlOptions.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a6d0619f5f09ffdcc9a7fb87b97b59a1d" kindref="member">ProxyUsername</ref><sp/>=<sp/>transportOptions.<ref refid="struct_azure_1_1_core_1_1_http_1_1_policies_1_1_transport_options_1af07684ad257ce136b94aa2b83c17b772" kindref="member">ProxyUserName</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>curlOptions.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1aa6718b6de792b57dccf7b7648f43f2d9" kindref="member">ProxyPassword</ref><sp/>=<sp/>transportOptions.<ref refid="struct_azure_1_1_core_1_1_http_1_1_policies_1_1_transport_options_1a2aa3c57ba8e4e21b76c67a0c1fa623ad" kindref="member">ProxyPassword</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>curlOptions.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a8e5e6b74029a927bb6635eeff2a898fd" kindref="member">SslOptions</ref>.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_ssl_options_1a5d3fc54773da96c6477e3f938b73ddc5" kindref="member">EnableCertificateRevocationListCheck</ref></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>transportOptions.<ref refid="struct_azure_1_1_core_1_1_http_1_1_policies_1_1_transport_options_1a810a2213c70ab96dc5b46f54114da57c" kindref="member">EnableCertificateRevocationListCheck</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LIBCURL_VERSION_NUM<sp/>&gt;=<sp/>0x074D00<sp/></highlight><highlight class="comment">//<sp/>7.77.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!transportOptions.<ref refid="struct_azure_1_1_core_1_1_http_1_1_policies_1_1_transport_options_1a9c3f25825627b024790cb13fb58fe837" kindref="member">ExpectedTlsRootCertificate</ref>.empty())</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>curlOptions.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a8e5e6b74029a927bb6635eeff2a898fd" kindref="member">SslOptions</ref>.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_ssl_options_1a11f843c6a50fbf433a4cb95a0b90b2da" kindref="member">PemEncodedExpectedRootCertificates</ref></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>PemEncodeFromBase64(transportOptions.<ref refid="struct_azure_1_1_core_1_1_http_1_1_policies_1_1_transport_options_1a9c3f25825627b024790cb13fb58fe837" kindref="member">ExpectedTlsRootCertificate</ref>,<sp/></highlight><highlight class="stringliteral">&quot;CERTIFICATE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>curlOptions.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a4be09cd52603cc58eeb66139650d7d16" kindref="member">SslVerifyPeer</ref><sp/>=<sp/>!transportOptions.<ref refid="struct_azure_1_1_core_1_1_http_1_1_policies_1_1_transport_options_1a0ee73cd033f55386522d129b9c13af0e" kindref="member">DisableTlsCertificateValidation</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>curlOptions;</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Azure::Core::Context</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_azure_1_1_core_1_1_http_1_1_curl_connection" kindref="compound">Azure::Core::Http::CurlConnection</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_azure_1_1_core_1_1_http_1_1_curl_network_connection" kindref="compound">Azure::Core::Http::CurlNetworkConnection</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_azure_1_1_core_1_1_http_1_1_curl_session" kindref="compound">Azure::Core::Http::CurlSession</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_azure_1_1_core_1_1_http_1_1_curl_transport" kindref="compound">Azure::Core::Http::CurlTransport</ref>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options" kindref="compound">Azure::Core::Http::CurlTransportOptions</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="http__status__code_8hpp_1a60337476811e1ccf9ed39ce13f678d9d" kindref="member">Azure::Core::Http::HttpStatusCode</ref>;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_azure_1_1_core_1_1_http_1_1_raw_response" kindref="compound">Azure::Core::Http::RawResponse</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_azure_1_1_core_1_1_http_1_1_request" kindref="compound">Azure::Core::Http::Request</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">Azure::Core::Http::TransportException</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Azure::Core::Http::_detail::CurlConnectionPool;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal">Azure::Core::Http::_detail::CurlConnectionPool</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>Azure::Core::Http::_detail::CurlConnectionPool::g_curlConnectionPool;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><ref refid="class_azure_1_1_core_1_1_http_1_1_curl_transport_1a5ad6635c2f4f80164d95db832e13e83b" kindref="member">CurlTransport::CurlTransport</ref>(<ref refid="struct_azure_1_1_core_1_1_http_1_1_policies_1_1_transport_options" kindref="compound">Azure::Core::Http::Policies::TransportOptions</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>options)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_curl_transport" kindref="compound">CurlTransport</ref>(CurlTransportOptionsFromTransportOptions(options))</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal">std::unique_ptr&lt;RawResponse&gt;<sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_curl_transport_1aa6a92d65b363e50a2293b6bada21ef3e" kindref="member">CurlTransport::Send</ref>(<ref refid="class_azure_1_1_core_1_1_http_1_1_request" kindref="compound">Request</ref>&amp;<sp/>request,<sp/><ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Context</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>context)</highlight></codeline>
<codeline lineno="344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>CurlSession<sp/>to<sp/>perform<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>Log::Write(Logger::Level::Verbose,<sp/>LogMsgPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Creating<sp/>a<sp/>new<sp/>session.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>session<sp/>=<sp/>std::make_unique&lt;CurlSession&gt;(</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>request,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CurlConnectionPool::g_curlConnectionPool.ExtractOrCreateCurlConnection(request,<sp/>m_options),</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_options);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>CURLcode<sp/>performing;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>send<sp/>the<sp/>request.<sp/>If<sp/>we<sp/>get<sp/>CURLE_UNSUPPORTED_PROTOCOL/CURLE_SEND_ERROR<sp/>back,<sp/>it<sp/>means</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>connection<sp/>is<sp/>either<sp/>closed<sp/>or<sp/>the<sp/>socket<sp/>is<sp/>not<sp/>usable<sp/>any<sp/>more.<sp/>In<sp/>that<sp/>case,<sp/>let<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>session<sp/>be<sp/>destroyed<sp/>and<sp/>create<sp/>a<sp/>new<sp/>session<sp/>to<sp/>get<sp/>another<sp/>connection<sp/>from<sp/>connection<sp/>pool.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>from<sp/>trying<sp/>forever<sp/>by<sp/>using<sp/>DefaultMaxOpenNewConnectionIntentsAllowed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>getConnectionOpenIntent<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getConnectionOpenIntent<sp/>&lt;<sp/>_detail::DefaultMaxOpenNewConnectionIntentsAllowed;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getConnectionOpenIntent++)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>performing<sp/>=<sp/>session-&gt;Perform(context);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(performing<sp/>!=<sp/>CURLE_UNSUPPORTED_PROTOCOL<sp/>&amp;&amp;<sp/>performing<sp/>!=<sp/>CURLE_SEND_ERROR</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>performing<sp/>!=<sp/>CURLE_RECV_ERROR)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let<sp/>session<sp/>be<sp/>destroyed<sp/>and<sp/>request<sp/>a<sp/>new<sp/>connection.<sp/>If<sp/>the<sp/>number<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>request<sp/>for<sp/>connection<sp/>has<sp/>reached<sp/>`RequestPoolResetAfterConnectionFailed`,<sp/>ask<sp/>the<sp/>pool<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clean<sp/>(remove<sp/>connections)<sp/>and<sp/>create<sp/>a<sp/>new<sp/>one.<sp/>This<sp/>is<sp/>because,<sp/>keep<sp/>getting<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>fail<sp/>to<sp/>perform<sp/>means<sp/>a<sp/>general<sp/>network<sp/>disconnection<sp/>where<sp/>all<sp/>connections<sp/>in<sp/>the<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>won&apos;t<sp/>be<sp/>no<sp/>longer<sp/>valid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>session<sp/>=<sp/>std::make_unique&lt;CurlSession&gt;(</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurlConnectionPool::g_curlConnectionPool.ExtractOrCreateCurlConnection(</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_options,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getConnectionOpenIntent<sp/>+<sp/>1<sp/>&gt;=<sp/>_detail::RequestPoolResetAfterConnectionFailed),</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_options);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(performing<sp/>!=<sp/>CURLE_OK)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">TransportException</ref>(</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>while<sp/>sending<sp/>request.<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(curl_easy_strerror(performing)));</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_azure_1_1_core_1_1_http_1_1_http_transport_1a8b47565baf7018fdfcad475b9c5d6615" kindref="member">HasWebSocketSupport</ref>())</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;CurlNetworkConnection&gt;<sp/>upgradedConnection(session-&gt;ExtractConnection());</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upgradedConnection)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OnUpgradedConnection(std::move(upgradedConnection));</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>Log::Write(</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Logger::Level::Verbose,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogMsgPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>completed.<sp/>Moving<sp/>response<sp/>out<sp/>of<sp/>session<sp/>and<sp/>session<sp/>to<sp/>response.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>Response<sp/>out<sp/>of<sp/>the<sp/>session</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>response<sp/>=<sp/>session-&gt;ExtractResponse();</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>ownership<sp/>of<sp/>the<sp/>CurlSession<sp/>(bodyStream)<sp/>to<sp/>the<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>response-&gt;SetBodyStream(std::move(session));</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>response;</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal">CURLcode<sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a86bc473a6a09215453abf4e3f063b194" kindref="member">CurlSession::Perform</ref>(<ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Context</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>context)</highlight></codeline>
<codeline lineno="409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>session<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>m_sessionState<sp/>=<sp/>SessionState::PERFORM;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>libcurl<sp/>settings<sp/>after<sp/>connection<sp/>is<sp/>open<sp/>(headers)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>headers<sp/>=<sp/>this-&gt;m_request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1a8da634936a1c7bf5a48782a534988454" kindref="member">GetHeaders</ref>();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hostHeader<sp/>=<sp/>headers.find(</highlight><highlight class="stringliteral">&quot;Host&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hostHeader<sp/>==<sp/>headers.end())</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Verbose,<sp/>LogMsgPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>Host<sp/>in<sp/>request<sp/>headers.<sp/>Adding<sp/>it&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>hostName<sp/>=<sp/>this-&gt;m_request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1a6cda1c14edbd6c5283be6014fe37a4dd" kindref="member">GetUrl</ref>().<ref refid="class_azure_1_1_core_1_1_url_1a78f71c6e36a35efe1d2597cadd728320" kindref="member">GetHost</ref>();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>port<sp/>=<sp/>this-&gt;m_request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1a6cda1c14edbd6c5283be6014fe37a4dd" kindref="member">GetUrl</ref>().<ref refid="class_azure_1_1_core_1_1_url_1aaad8684cf7519832b6aa49f8d121fbab" kindref="member">GetPort</ref>();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostName<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(port);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1afea0c98e7e3ceace622958a59c6c44b7" kindref="member">SetHeader</ref>(</highlight><highlight class="stringliteral">&quot;Host&quot;</highlight><highlight class="normal">,<sp/>hostName);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;m_request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1a8a9ed25368d3e3e4dfb22f2ab329c448" kindref="member">GetMethod</ref>()<sp/>!=<sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_http_method_1ada8654593eac435bae2a7a44d80592c5" kindref="member">HttpMethod::Get</ref></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>this-&gt;m_request.GetMethod()<sp/>!=<sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_http_method_1a2e526e34bd316e1a4984524efa25f515" kindref="member">HttpMethod::Head</ref></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>this-&gt;m_request.GetMethod()<sp/>!=<sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_http_method_1a214b92af05937d6685990909fbc2432b" kindref="member">HttpMethod::Delete</ref></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>headers.find(</highlight><highlight class="stringliteral">&quot;content-length&quot;</highlight><highlight class="normal">)<sp/>==<sp/>headers.end())</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Verbose,<sp/>LogMsgPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>content-length<sp/>in<sp/>headers.<sp/>Adding<sp/>it&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1afea0c98e7e3ceace622958a59c6c44b7" kindref="member">SetHeader</ref>(</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;content-length&quot;</highlight><highlight class="normal">,<sp/>std::to_string(this-&gt;m_request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1ad6a43a06e13ea601c6c5a2889d053fe2" kindref="member">GetBodyStream</ref>()-&gt;<ref refid="class_azure_1_1_core_1_1_i_o_1_1_body_stream_1a2e73f394ca060cf94146e03d5cf46d74" kindref="member">Length</ref>()));</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>using<sp/>an<sp/>HTTP<sp/>proxy,<sp/>connecting<sp/>to<sp/>an<sp/>HTTP<sp/>resource<sp/>and<sp/>it<sp/>has<sp/>been<sp/>configured<sp/>with<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>username<sp/>and<sp/>password,<sp/>we<sp/>want<sp/>to<sp/>set<sp/>the<sp/>proxy<sp/>authentication<sp/>header.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_httpProxy.<ref refid="class_azure_1_1_nullable_1a9a0c797c4eb208551e045de2d97809f7" kindref="member">HasValue</ref>()<sp/>&amp;&amp;<sp/>m_request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1a6cda1c14edbd6c5283be6014fe37a4dd" kindref="member">GetUrl</ref>().<ref refid="class_azure_1_1_core_1_1_url_1a92fd65dfc4bb0e0b1f418e519e7f7445" kindref="member">GetScheme</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;http&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>m_httpProxyUser.<ref refid="class_azure_1_1_nullable_1a9a0c797c4eb208551e045de2d97809f7" kindref="member">HasValue</ref>()<sp/>&amp;&amp;<sp/>m_httpProxyPassword.<ref refid="class_azure_1_1_nullable_1a9a0c797c4eb208551e045de2d97809f7" kindref="member">HasValue</ref>())</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Verbose,<sp/>LogMsgPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>proxy<sp/>authentication<sp/>header&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;m_request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1afea0c98e7e3ceace622958a59c6c44b7" kindref="member">SetHeader</ref>(</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Proxy-Authorization&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Basic<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>Azure::Core::_internal::Convert::Base64Encode(</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_httpProxyUser.<ref refid="class_azure_1_1_nullable_1a97723b8e1d2c4043c751a159697ba0c6" kindref="member">Value</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_httpProxyPassword.<ref refid="class_azure_1_1_nullable_1a97723b8e1d2c4043c751a159697ba0c6" kindref="member">Value</ref>()));</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>expect:100<sp/>for<sp/>PUT<sp/>requests.<sp/>Server<sp/>will<sp/>decide<sp/>if<sp/>it<sp/>can<sp/>take<sp/>our<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;m_request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1a8a9ed25368d3e3e4dfb22f2ab329c448" kindref="member">GetMethod</ref>()<sp/>==<sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_http_method_1a9a4dc215ef7e998073d584efc991cb8b" kindref="member">HttpMethod::Put</ref>)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Verbose,<sp/>LogMsgPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>100-continue<sp/>for<sp/>PUT<sp/>request&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;m_request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1afea0c98e7e3ceace622958a59c6c44b7" kindref="member">SetHeader</ref>(</highlight><highlight class="stringliteral">&quot;expect&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;100-continue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>request.<sp/>If<sp/>the<sp/>connection<sp/>assigned<sp/>to<sp/>this<sp/>curlSession<sp/>is<sp/>closed<sp/>or<sp/>the<sp/>socket<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>somehow<sp/>lost,<sp/>libcurl<sp/>will<sp/>return<sp/>CURLE_UNSUPPORTED_PROTOCOL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(https://curl.haxx.se/libcurl/c/curl_easy_send.html).<sp/>Return<sp/>the<sp/>error<sp/>back.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>Log::Write(Logger::Level::Verbose,<sp/>LogMsgPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Send<sp/>request<sp/>without<sp/>payload&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>SendRawHttp(context);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>CURLE_OK)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>Log::Write(Logger::Level::Verbose,<sp/>LogMsgPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Parse<sp/>server<sp/>response&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>ReadStatusLineAndHeadersFromRawResponse(context);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>CURLE_OK)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-PUT<sp/>request<sp/>are<sp/>ready<sp/>to<sp/>be<sp/>stream<sp/>at<sp/>this<sp/>point.<sp/>Only<sp/>PUT<sp/>request<sp/>would<sp/>start<sp/>an<sp/>uploading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>transfer<sp/>where<sp/>we<sp/>want<sp/>to<sp/>maintain<sp/>the<sp/>`PERFORM`<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;m_request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1a8a9ed25368d3e3e4dfb22f2ab329c448" kindref="member">GetMethod</ref>()<sp/>!=<sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_http_method_1a9a4dc215ef7e998073d584efc991cb8b" kindref="member">HttpMethod::Put</ref>)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>m_sessionState<sp/>=<sp/>SessionState::STREAMING;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>Log::Write(Logger::Level::Verbose,<sp/>LogMsgPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Check<sp/>server<sp/>response<sp/>before<sp/>upload<sp/>starts&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>server<sp/>response<sp/>from<sp/>Expect:100-continue<sp/>for<sp/>PUT;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>help<sp/>to<sp/>prevent<sp/>us<sp/>from<sp/>start<sp/>uploading<sp/>data<sp/>when<sp/>Server<sp/>can&apos;t<sp/>handle<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;m_lastStatusCode<sp/>!=<sp/>HttpStatusCode::Continue)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Verbose,<sp/>LogMsgPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Server<sp/>rejected<sp/>the<sp/>upload<sp/>request&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>m_sessionState<sp/>=<sp/>SessionState::STREAMING;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;<sp/></highlight><highlight class="comment">//<sp/>Won&apos;t<sp/>upload.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>Log::Write(Logger::Level::Verbose,<sp/>LogMsgPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Upload<sp/>payload&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;m_bodyStartInBuffer<sp/>&lt;<sp/>this-&gt;m_innerBufferSize)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>internal<sp/>buffer<sp/>has<sp/>more<sp/>data<sp/>after<sp/>the<sp/>100-continue<sp/>means<sp/>Server<sp/>return<sp/>an<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>need<sp/>to<sp/>upload<sp/>body,<sp/>just<sp/>parse<sp/>the<sp/>response<sp/>from<sp/>Server<sp/>and<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ReadStatusLineAndHeadersFromRawResponse(context,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>CURLE_OK)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>m_sessionState<sp/>=<sp/>SessionState::STREAMING;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>upload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>this-&gt;UploadBody(context);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>CURLE_OK)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>m_sessionState<sp/>=<sp/>SessionState::STREAMING;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;<sp/></highlight><highlight class="comment">//<sp/>will<sp/>throw<sp/>transport<sp/>exception<sp/>before<sp/>trying<sp/>to<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>Log::Write(Logger::Level::Verbose,<sp/>LogMsgPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Upload<sp/>completed.<sp/>Parse<sp/>server<sp/>response&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>ReadStatusLineAndHeadersFromRawResponse(context);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>CURLE_OK)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>no<sp/>throw<sp/>at<sp/>this<sp/>point,<sp/>the<sp/>request<sp/>is<sp/>ready<sp/>to<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>any<sp/>throw<sp/>happened<sp/>before<sp/>this<sp/>point,<sp/>the<sp/>state<sp/>will<sp/>remain<sp/>as<sp/>PERFORM.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>m_sessionState<sp/>=<sp/>SessionState::STREAMING;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal">std::unique_ptr&lt;CurlNetworkConnection&gt;<sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a68641a2a760a2bd4a9962ebbcb042608" kindref="member">CurlSession::ExtractConnection</ref>()</highlight></codeline>
<codeline lineno="529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connectionUpgraded)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(m_connection);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Creates<sp/>an<sp/>HTTP<sp/>Response<sp/>with<sp/>specific<sp/>bodyType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;RawResponse&gt;<sp/>CreateHTTPResponse(</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>begin,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>last)</highlight></codeline>
<codeline lineno="544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>response<sp/>code,<sp/>HTTP<sp/>version<sp/>and<sp/>reason<sp/>phrase<sp/>(i.e.<sp/>HTTP/1.1<sp/>200<sp/>OK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>begin<sp/>+<sp/>5;<sp/></highlight><highlight class="comment">//<sp/>HTTP<sp/>=<sp/>4,<sp/>/<sp/>=<sp/>1,<sp/>moving<sp/>to<sp/>5th<sp/>place<sp/>for<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>std::find(start,<sp/>last,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>majorVersion<sp/>=<sp/>std::stoi(std::string(start,<sp/>end));</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>end<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>start<sp/>of<sp/>minor<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>end<sp/>=<sp/>std::find(start,<sp/>last,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>minorVersion<sp/>=<sp/>std::stoi(std::string(start,<sp/>end));</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>end<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>start<sp/>of<sp/>status<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>end<sp/>=<sp/>std::find(start,<sp/>last,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>statusCode<sp/>=<sp/>std::stoi(std::string(start,<sp/>end));</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>end<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>start<sp/>of<sp/>reason<sp/>phrase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>end<sp/>=<sp/>std::find(start,<sp/>last,<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reasonPhrase<sp/>=<sp/>std::string(start,<sp/>end);<sp/></highlight><highlight class="comment">//<sp/>remove<sp/>\r</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>the<sp/>instance<sp/>of<sp/>response<sp/>to<sp/>heap<sp/>with<sp/>shared<sp/>ptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>this<sp/>memory<sp/>gets<sp/>delegated<sp/>outside<sp/>CurlTransport<sp/>as<sp/>a<sp/>shared_ptr<sp/>so<sp/>memory<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>eventually<sp/>released</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;RawResponse&gt;(</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint16_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(majorVersion),</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint16_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(minorVersion),</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HttpStatusCode(statusCode),</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reasonPhrase);</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Creates<sp/>an<sp/>HTTP<sp/>Response<sp/>with<sp/>specific<sp/>bodyType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;RawResponse&gt;<sp/>CreateHTTPResponse(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>header)</highlight></codeline>
<codeline lineno="574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreateHTTPResponse(</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(header.data()),</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(header.data()<sp/>+<sp/>header.size()));</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Send<sp/>buffer<sp/>thru<sp/>the<sp/>wire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal">CURLcode<sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_curl_connection_1a38965e729c4fb3fb234f1753562e7116" kindref="member">CurlConnection::SendBuffer</ref>(</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>buffer,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufferSize,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Context</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>context)</highlight></codeline>
<codeline lineno="585"><highlight class="normal">{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Once<sp/>you&apos;ve<sp/>shutdown<sp/>the<sp/>connection,<sp/>we<sp/>can&apos;t<sp/>send<sp/>any<sp/>more<sp/>data<sp/>(although<sp/>we<sp/>can<sp/>continue<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>receive).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_azure_1_1_core_1_1_http_1_1_curl_network_connection_1acd1b6bbeb9cd1229c48d276064610458" kindref="member">IsShutdown</ref>())</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_SEND_ERROR;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sentBytesTotal<sp/>=<sp/>0;<sp/>sentBytesTotal<sp/>&lt;<sp/>bufferSize;)</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>cancelation<sp/>for<sp/>each<sp/>chunk<sp/>of<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>loop<sp/>is<sp/>expected<sp/>to<sp/>be<sp/>called<sp/>at<sp/>most<sp/>2<sp/>times:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>time<sp/>we<sp/>call<sp/>`curl_easy_send()`,<sp/>if<sp/>it<sp/>return<sp/>CURLE_AGAIN<sp/>it<sp/>would<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>`pollSocketUntilEventOrTimeout`<sp/>to<sp/>wait<sp/>for<sp/>socket<sp/>to<sp/>be<sp/>ready<sp/>to<sp/>write.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>`pollSocketUntilEventOrTimeout`<sp/>will<sp/>then<sp/>handle<sp/>cancelation<sp/>token.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>socket<sp/>is<sp/>not<sp/>ready<sp/>before<sp/>the<sp/>timeout,<sp/>Exception<sp/>is<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>socket<sp/>is<sp/>ready,<sp/>it<sp/>calls<sp/>curl_easy_send()<sp/>again<sp/>(second<sp/>loop<sp/>iteration).<sp/>It<sp/>is<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>expected<sp/>to<sp/>return<sp/>CURLE_AGAIN<sp/>(since<sp/>socket<sp/>is<sp/>ready),<sp/>so,<sp/>a<sp/>chuck<sp/>of<sp/>data<sp/>will<sp/>be<sp/>uploaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>result<sp/>will<sp/>be<sp/>CURLE_OK<sp/>which<sp/>breaks<sp/>the<sp/>loop.<sp/>Also,<sp/>getting<sp/>other<sp/>than<sp/>CURLE_OK<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CURLE_AGAIN<sp/>throws.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>context.<ref refid="class_azure_1_1_core_1_1_context_1a08e3e60c70888f118ea0038a8b5e8df2" kindref="member">ThrowIfCancelled</ref>();</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(CURLcode<sp/>sendResult<sp/>=<sp/>CURLE_AGAIN;<sp/>sendResult<sp/>==<sp/>CURLE_AGAIN;)</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sentBytesPerRequest<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sendResult<sp/>=<sp/>curl_easy_send(</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_handle.get(),</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>+<sp/>sentBytesTotal,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufferSize<sp/>-<sp/>sentBytesTotal,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sentBytesPerRequest);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(sendResult)</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLE_OK:<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sentBytesTotal<sp/>+=<sp/>sentBytesPerRequest;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLE_AGAIN:<sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>polling<sp/>operation<sp/>with<sp/>1<sp/>min<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pollUntilSocketIsReady<sp/>=<sp/>pollSocketUntilEventOrTimeout(</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context,<sp/>m_curlSocket,<sp/>PollSocketDirection::Write,<sp/>60000L);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pollUntilSocketIsReady<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">TransportException</ref>(</highlight><highlight class="stringliteral">&quot;Timeout<sp/>waiting<sp/>for<sp/>socket<sp/>to<sp/>upload.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pollUntilSocketIsReady<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>negative<sp/>value,<sp/>error<sp/>while<sp/>polling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">TransportException</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>while<sp/>polling<sp/>for<sp/>socket<sp/>ready<sp/>write&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ready<sp/>to<sp/>continue<sp/>download.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sendResult;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AZ_PLATFORM_WINDOWS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>WinSocketSetBuffSize(m_curlSocket);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal">CURLcode<sp/>CurlSession::UploadBody(<ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Context</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>context)</highlight></codeline>
<codeline lineno="650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>body<sp/>UploadStreamPageSize<sp/>at<sp/>a<sp/>time<sp/>(libcurl<sp/>default)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>if<sp/>stream<sp/>is<sp/>on<sp/>top<sp/>a<sp/>contiguous<sp/>memory,<sp/>we<sp/>can<sp/>avoid<sp/>allocating<sp/>this<sp/>copying<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>streamBody<sp/>=<sp/>this-&gt;m_request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1ad6a43a06e13ea601c6c5a2889d053fe2" kindref="member">GetBodyStream</ref>();</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>CURLcode<sp/>sendResult<sp/>=<sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>unique_buffer</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::make_unique&lt;uint8_t[]&gt;(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_detail::DefaultUploadChunkSize));</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rawRequestLen</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>streamBody-&gt;Read(unique_buffer.get(),<sp/>_detail::DefaultUploadChunkSize,<sp/>context);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rawRequestLen<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>sendResult<sp/>=<sp/>m_connection-&gt;SendBuffer(unique_buffer.get(),<sp/>rawRequestLen,<sp/>context);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sendResult<sp/>!=<sp/>CURLE_OK)</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sendResult;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sendResult;</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="comment">//<sp/>custom<sp/>sending<sp/>to<sp/>wire<sp/>an<sp/>HTTP<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal">CURLcode<sp/>CurlSession::SendRawHttp(<ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Context</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>context)</highlight></codeline>
<codeline lineno="678"><highlight class="normal">{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>something<sp/>like<sp/>GET<sp/>/path<sp/>HTTP1.0<sp/>\r\nheaders\r\n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rawRequest<sp/>=<sp/>GetHTTPMessagePreBody(this-&gt;m_request);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rawRequestLen<sp/>=<sp/>rawRequest.size();</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>CURLcode<sp/>sendResult<sp/>=<sp/>m_connection-&gt;SendBuffer(</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uint8_t<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rawRequest.data()),</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rawRequestLen),</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>context);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sendResult<sp/>!=<sp/>CURLE_OK<sp/>||<sp/>this-&gt;m_request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1a8a9ed25368d3e3e4dfb22f2ab329c448" kindref="member">GetMethod</ref>()<sp/>==<sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_http_method_1a9a4dc215ef7e998073d584efc991cb8b" kindref="member">HttpMethod::Put</ref>)</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sendResult;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;UploadBody(context);</highlight></codeline>
<codeline lineno="694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>CurlSession::SetHeader(</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_raw_response" kindref="compound">Azure::Core::Http::RawResponse</ref>&amp;<sp/>response,</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>header)</highlight></codeline>
<codeline lineno="699"><highlight class="normal">{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Azure::Core::Http::_detail::RawResponseHelpers::SetHeader(</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>response,</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uint8_t<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(header.data()),</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uint8_t<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(header.data()<sp/>+<sp/>header.size()));</highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>CurlSession::GetHeadersAsString(<ref refid="class_azure_1_1_core_1_1_http_1_1_request" kindref="compound">Azure::Core::Http::Request</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>request)</highlight></codeline>
<codeline lineno="707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>std::string<sp/>requestHeaderString;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>header<sp/>:<sp/>request.GetHeaders())</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>requestHeaderString<sp/>+=<sp/>header.first;<sp/></highlight><highlight class="comment">//<sp/>string<sp/>(key)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>requestHeaderString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>requestHeaderString<sp/>+=<sp/>header.second;<sp/></highlight><highlight class="comment">//<sp/>string&apos;s<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>requestHeaderString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>requestHeaderString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>requestHeaderString;</highlight></codeline>
<codeline lineno="720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Writes<sp/>an<sp/>HTTP<sp/>request<sp/>with<sp/>RFC<sp/>7230<sp/>without<sp/>the<sp/>body<sp/>(head<sp/>line<sp/>and<sp/>headers)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://tools.ietf.org/html/rfc7230#section-3.1.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>CurlSession::GetHTTPMessagePreBody(<ref refid="class_azure_1_1_core_1_1_http_1_1_request" kindref="compound">Azure::Core::Http::Request</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>request)</highlight></codeline>
<codeline lineno="725"><highlight class="normal">{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>std::string<sp/>httpRequest(request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1a8a9ed25368d3e3e4dfb22f2ab329c448" kindref="member">GetMethod</ref>().<ref refid="class_azure_1_1_core_1_1_http_1_1_http_method_1a354e1fd2e96072492a5971ee84350d13" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/>std::string<sp/>url;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;re<sp/>not<sp/>using<sp/>a<sp/>proxy<sp/>server,<sp/>*or*<sp/>the<sp/>URL<sp/>we&apos;re<sp/>connecting<sp/>uses<sp/>HTTPS<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>want<sp/>to<sp/>send<sp/>the<sp/>relative<sp/>URL<sp/>(the<sp/>URL<sp/>without<sp/>the<sp/>host,<sp/>scheme,<sp/>port<sp/>or<sp/>authn).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>ARE<sp/>using<sp/>a<sp/>proxy<sp/>server<sp/>and<sp/>the<sp/>request<sp/>is<sp/>not<sp/>encrypted,<sp/>we<sp/>want<sp/>to<sp/>send<sp/>the<sp/>full<sp/>URL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_httpProxy.<ref refid="class_azure_1_1_nullable_1a9a0c797c4eb208551e045de2d97809f7" kindref="member">HasValue</ref>()<sp/>||<sp/>request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1a6cda1c14edbd6c5283be6014fe37a4dd" kindref="member">GetUrl</ref>().<ref refid="class_azure_1_1_core_1_1_url_1a92fd65dfc4bb0e0b1f418e519e7f7445" kindref="member">GetScheme</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;https&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>url<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1a6cda1c14edbd6c5283be6014fe37a4dd" kindref="member">GetUrl</ref>().<ref refid="class_azure_1_1_core_1_1_url_1ab589b1eaf6f8cbe2dc86ec5678b465f0" kindref="member">GetRelativeUrl</ref>();</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>url<sp/>=<sp/>request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1a6cda1c14edbd6c5283be6014fe37a4dd" kindref="member">GetUrl</ref>().<ref refid="class_azure_1_1_core_1_1_url_1a68990d32c4bb0229f28cf384d0380c47" kindref="member">GetAbsoluteUrl</ref>();</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>HTTP<sp/>version<sp/>hardcoded<sp/>to<sp/>1.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>httpRequest<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>url<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>HTTP/1.1\r\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/>httpRequest<sp/>+=<sp/>GetHeadersAsString(request);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>httpRequest;</highlight></codeline>
<codeline lineno="747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CurlSession::ParseChunkSize(<ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Context</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>context)</highlight></codeline>
<codeline lineno="750"><highlight class="normal">{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>this<sp/>string<sp/>to<sp/>construct<sp/>the<sp/>chunk<sp/>size.<sp/>This<sp/>is<sp/>because<sp/>we<sp/>could<sp/>have<sp/>an<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>buffer<sp/>like<sp/>[headers...\r\n123],<sp/>where<sp/>123<sp/>is<sp/>chunk<sp/>size<sp/>but<sp/>we<sp/>still<sp/>need<sp/>to<sp/>pull<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>data<sp/>fro<sp/>wire<sp/>to<sp/>get<sp/>the<sp/>full<sp/>chunkSize.<sp/>Next<sp/>data<sp/>could<sp/>be<sp/>just<sp/>[\r\n]<sp/>or<sp/>[456\r\n]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>strChunkSize<sp/>=<sp/>std::string();</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>to<sp/>after<sp/>chunk<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepPolling<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>keepPolling;)</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>this-&gt;m_bodyStartInBuffer,<sp/>iteration<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>this-&gt;m_innerBufferSize;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index++,<sp/>iteration++)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strChunkSize.append(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;this-&gt;m_readBuffer[index]),<sp/>1);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iteration<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>this-&gt;m_readBuffer[index]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>chunk<sp/>size.<sp/>Chunk<sp/>size<sp/>comes<sp/>in<sp/>Hex<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Required<sp/>cast<sp/>for<sp/>MSVC<sp/>x86</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_chunkSize<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::stoull(strChunkSize,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>16));</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::invalid_argument<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Server<sp/>can<sp/>return<sp/>something<sp/>like<sp/>`\n\r\n`<sp/>for<sp/>a<sp/>chunk<sp/>of<sp/>zero<sp/>length<sp/>data.<sp/>This<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allowed<sp/>by<sp/>RFC.<sp/>`stoull`<sp/>will<sp/>throw<sp/>invalid_argument<sp/>if<sp/>there<sp/>is<sp/>not<sp/>at<sp/>least<sp/>one<sp/>hex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>digit<sp/>to<sp/>be<sp/>parsed.<sp/>For<sp/>those<sp/>cases,<sp/>we<sp/>consider<sp/>the<sp/>response<sp/>as<sp/>zero-length.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_chunkSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;m_chunkSize<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Response<sp/>with<sp/>no<sp/>content.<sp/>end<sp/>of<sp/>chunk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keepPolling<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="783"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>index<sp/>represents<sp/>the<sp/>current<sp/>position<sp/>while<sp/>reading.</highlight></codeline>
<codeline lineno="784"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>When<sp/>the<sp/>chunkSize<sp/>is<sp/>0,<sp/>the<sp/>index<sp/>should<sp/>have<sp/>already<sp/>read<sp/>up<sp/>to<sp/>the<sp/>next<sp/>CRLF.</highlight></codeline>
<codeline lineno="785"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>When<sp/>reading<sp/>again,<sp/>we<sp/>want<sp/>to<sp/>start<sp/>reading<sp/>from<sp/>the<sp/>next<sp/>position,<sp/>so<sp/>we<sp/>need<sp/>to<sp/>add</highlight></codeline>
<codeline lineno="786"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>1<sp/>to<sp/>the<sp/>index.</highlight></codeline>
<codeline lineno="787"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_bodyStartInBuffer<sp/>=<sp/>index<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>+<sp/>1<sp/>==<sp/>this-&gt;m_innerBufferSize)</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="795"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>index<sp/>+<sp/>1<sp/>represents<sp/>the<sp/>next<sp/>possition<sp/>to<sp/>Read.<sp/>If<sp/>that&apos;s<sp/>equal<sp/>to<sp/>the<sp/>inner<sp/>buffer</highlight></codeline>
<codeline lineno="796"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>size<sp/>it<sp/>means<sp/>that<sp/>there<sp/>is<sp/>no<sp/>more<sp/>data<sp/>and<sp/>we<sp/>need<sp/>to<sp/>fetch<sp/>more<sp/>from<sp/>network.<sp/>And</highlight></codeline>
<codeline lineno="797"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>whatever<sp/>we<sp/>fetch<sp/>will<sp/>be<sp/>the<sp/>start<sp/>of<sp/>the<sp/>chunk<sp/>data.<sp/>The<sp/>bodyStart<sp/>is<sp/>set<sp/>to<sp/>0<sp/>to</highlight></codeline>
<codeline lineno="798"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>indicate<sp/>the<sp/>the<sp/>next<sp/>read<sp/>call<sp/>should<sp/>read<sp/>from<sp/>the<sp/>inner<sp/>buffer<sp/>start.</highlight></codeline>
<codeline lineno="799"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_innerBufferSize<sp/>=<sp/>m_connection-&gt;ReadFromSocket(</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_readBuffer,<sp/>_detail::DefaultLibcurlReaderSize,<sp/>context);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_bodyStartInBuffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="807"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>index<sp/>+<sp/>1<sp/>represents<sp/>the<sp/>next<sp/>position<sp/>to<sp/>Read.<sp/>If<sp/>that&apos;s<sp/>NOT<sp/>equal<sp/>to<sp/>the<sp/>inner</highlight></codeline>
<codeline lineno="808"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>buffer<sp/>size,<sp/>it<sp/>means<sp/>that<sp/>there<sp/>is<sp/>chunk<sp/>data<sp/>in<sp/>the<sp/>inner<sp/>buffer.<sp/>So,<sp/>we<sp/>set<sp/>the</highlight></codeline>
<codeline lineno="809"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>start<sp/>to<sp/>the<sp/>next<sp/>position<sp/>to<sp/>read.</highlight></codeline>
<codeline lineno="810"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_bodyStartInBuffer<sp/>=<sp/>index<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keepPolling<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keepPolling)</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Read<sp/>all<sp/>internal<sp/>buffer<sp/>and<sp/>\n<sp/>was<sp/>not<sp/>found,<sp/>pull<sp/>from<sp/>wire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_innerBufferSize<sp/>=<sp/>m_connection-&gt;ReadFromSocket(</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_readBuffer,<sp/>_detail::DefaultLibcurlReaderSize,<sp/>context);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_bodyStartInBuffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>status<sp/>line<sp/>plus<sp/>headers<sp/>to<sp/>create<sp/>a<sp/>response<sp/>with<sp/>no<sp/>body</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal">CURLcode<sp/>CurlSession::ReadStatusLineAndHeadersFromRawResponse(</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Context</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>context,</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reuseInternalBuffer)</highlight></codeline>
<codeline lineno="832"><highlight class="normal">{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parser<sp/>=<sp/>ResponseBufferParser();</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bufferSize<sp/>=<sp/>size_t();</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>reading<sp/>until<sp/>all<sp/>headers<sp/>were<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!parser.IsParseCompleted())</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytesParsed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reuseInternalBuffer)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>from<sp/>internal<sp/>buffer.<sp/>This<sp/>means<sp/>previous<sp/>read<sp/>from<sp/>server<sp/>got<sp/>more<sp/>than<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>response.<sp/>This<sp/>happens<sp/>when<sp/>Server<sp/>returns<sp/>a<sp/>100-continue<sp/>plus<sp/>an<sp/>error<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bufferSize<sp/>=<sp/>this-&gt;m_innerBufferSize<sp/>-<sp/>this-&gt;m_bodyStartInBuffer;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bytesParsed<sp/>=<sp/>parser.Parse(this-&gt;m_readBuffer<sp/>+<sp/>this-&gt;m_bodyStartInBuffer,<sp/>bufferSize);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>parsing<sp/>from<sp/>internal<sp/>buffer<sp/>is<sp/>not<sp/>enough,<sp/>do<sp/>next<sp/>read<sp/>from<sp/>wire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reuseInternalBuffer<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>body<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_bodyStartInBuffer<sp/>=<sp/>_detail::DefaultLibcurlReaderSize;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>fill<sp/>internal<sp/>buffer<sp/>from<sp/>socket.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>response<sp/>is<sp/>smaller<sp/>than<sp/>buffer,<sp/>we<sp/>will<sp/>get<sp/>back<sp/>the<sp/>size<sp/>of<sp/>the<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bufferSize<sp/>=<sp/>m_connection-&gt;ReadFromSocket(</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_readBuffer,<sp/>_detail::DefaultLibcurlReaderSize,<sp/>context);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufferSize<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>closed<sp/>connection,<sp/>prevent<sp/>application<sp/>from<sp/>keep<sp/>trying<sp/>to<sp/>pull<sp/>more<sp/>bytes<sp/>from<sp/>the<sp/>wire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Error,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>from<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_RECV_ERROR;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>parsed<sp/>up<sp/>to<sp/>the<sp/>body<sp/>Start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bytesParsed<sp/>=<sp/>parser.Parse(this-&gt;m_readBuffer,<sp/>bufferSize);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytesParsed<sp/>&lt;<sp/>bufferSize)</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_bodyStartInBuffer<sp/>=<sp/>bytesParsed;<sp/></highlight><highlight class="comment">//<sp/>Body<sp/>Start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/>this-&gt;m_response<sp/>=<sp/>parser.ExtractResponse();</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>this-&gt;m_innerBufferSize<sp/>=<sp/>bufferSize;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/>this-&gt;m_lastStatusCode<sp/>=<sp/>this-&gt;m_response-&gt;GetStatusCode();</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>Head<sp/>request,<sp/>set<sp/>the<sp/>length<sp/>of<sp/>body<sp/>response<sp/>to<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Response<sp/>will<sp/>give<sp/>us<sp/>content-length<sp/>as<sp/>if<sp/>we<sp/>were<sp/>not<sp/>doing<sp/>Head<sp/>saying<sp/>what<sp/>would<sp/>it<sp/>be<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>length<sp/>of<sp/>the<sp/>body.<sp/>However,<sp/>Server<sp/>won&apos;t<sp/>send<sp/>body</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>NoContent<sp/>status<sp/>code,<sp/>also<sp/>need<sp/>to<sp/>set<sp/>contentLength<sp/>to<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>https://github.com/Azure/azure-sdk-for-cpp/issues/406</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;m_request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1a8a9ed25368d3e3e4dfb22f2ab329c448" kindref="member">GetMethod</ref>()<sp/>==<sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_http_method_1a2e526e34bd316e1a4984524efa25f515" kindref="member">HttpMethod::Head</ref></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>this-&gt;m_lastStatusCode<sp/>==<sp/>HttpStatusCode::NoContent</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>this-&gt;m_lastStatusCode<sp/>==<sp/>HttpStatusCode::NotModified)</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;m_contentLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;m_bodyStartInBuffer<sp/>=<sp/>_detail::DefaultLibcurlReaderSize;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>headers<sp/>are<sp/>already<sp/>lowerCase<sp/>at<sp/>this<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>headers<sp/>=<sp/>this-&gt;m_response-&gt;GetHeaders();</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>server<sp/>has<sp/>return<sp/>the<sp/>connection<sp/>header.<sp/>This<sp/>header<sp/>can<sp/>be<sp/>used<sp/>to<sp/>stop<sp/>re-using<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>connection.<sp/>The<sp/>`Iot<sp/>Edge<sp/>Blob<sp/>Storage<sp/>Module`<sp/>is<sp/>known<sp/>to<sp/>return<sp/>this<sp/>after<sp/>some<sp/>time<sp/>re-using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>same<sp/>http<sp/>secured<sp/>channel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>connectionHeader<sp/>=<sp/>headers.find(</highlight><highlight class="stringliteral">&quot;connection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(connectionHeader<sp/>!=<sp/>headers.end())</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Azure::Core::_internal::StringExtensions::LocaleInvariantCaseInsensitiveEqual(</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connectionHeader-&gt;second,<sp/></highlight><highlight class="stringliteral">&quot;close&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>connection<sp/>shut-down<sp/>so<sp/>it<sp/>won&apos;t<sp/>be<sp/>moved<sp/>it<sp/>back<sp/>to<sp/>the<sp/>connection<sp/>pool.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_connection-&gt;Shutdown();</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>server<sp/>indicated<sp/>that<sp/>the<sp/>connection<sp/>header<sp/>is<sp/>&quot;upgrade&quot;,<sp/>it<sp/>means<sp/>that<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>a<sp/>WebSocket<sp/>connection<sp/>so<sp/>the<sp/>caller<sp/>may<sp/>be<sp/>upgrading<sp/>the<sp/>connection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Azure::Core::_internal::StringExtensions::LocaleInvariantCaseInsensitiveEqual(</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connectionHeader-&gt;second,<sp/></highlight><highlight class="stringliteral">&quot;upgrade&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_connectionUpgraded<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>isContentLengthHeaderInResponse<sp/>=<sp/>headers.find(</highlight><highlight class="stringliteral">&quot;content-length&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isContentLengthHeaderInResponse<sp/>!=<sp/>headers.end())</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;m_contentLength</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::stoull(isContentLengthHeaderInResponse-&gt;second.data()));</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>content-length<sp/>from<sp/>headers,<sp/>check<sp/>transfer-encoding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/>this-&gt;m_contentLength<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>isTransferEncodingHeaderInResponse<sp/>=<sp/>headers.find(</highlight><highlight class="stringliteral">&quot;transfer-encoding&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isTransferEncodingHeaderInResponse<sp/>!=<sp/>headers.end())</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>headerValue<sp/>=<sp/>isTransferEncodingHeaderInResponse-&gt;second;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>isChunked<sp/>=<sp/>headerValue.find(</highlight><highlight class="stringliteral">&quot;chunked&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isChunked<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>curl<sp/>session<sp/>to<sp/>know<sp/>response<sp/>is<sp/>chunked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>be<sp/>used<sp/>to<sp/>remove<sp/>chunked<sp/>info<sp/>while<sp/>reading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_isChunkedResponseType<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>move<sp/>body<sp/>start<sp/>after<sp/>chunk<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;m_bodyStartInBuffer<sp/>&gt;=<sp/>this-&gt;m_innerBufferSize)</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>if<sp/>nothing<sp/>on<sp/>inner<sp/>buffer,<sp/>pull<sp/>from<sp/>wire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_innerBufferSize<sp/>=<sp/>m_connection-&gt;ReadFromSocket(</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_readBuffer,<sp/>_detail::DefaultLibcurlReaderSize,<sp/>context);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;m_innerBufferSize<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>closed<sp/>connection,<sp/>prevent<sp/>application<sp/>from<sp/>keep<sp/>trying<sp/>to<sp/>pull<sp/>more<sp/>bytes<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Error,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>from<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_RECV_ERROR;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_bodyStartInBuffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ParseChunkSize(context);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="957"><highlight class="comment"><sp/><sp/>https://tools.ietf.org/html/rfc7230#section-3.3.3</highlight></codeline>
<codeline lineno="958"><highlight class="comment"><sp/><sp/><sp/>7.<sp/><sp/>Otherwise,<sp/>this<sp/>is<sp/>a<sp/>response<sp/>message<sp/>without<sp/>a<sp/>declared<sp/>message</highlight></codeline>
<codeline lineno="959"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>body<sp/>length,<sp/>so<sp/>the<sp/>message<sp/>body<sp/>length<sp/>is<sp/>determined<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="960"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>octets<sp/>received<sp/>prior<sp/>to<sp/>the<sp/>server<sp/>closing<sp/>the</highlight></codeline>
<codeline lineno="961"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connection.</highlight></codeline>
<codeline lineno="962"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="964"><highlight class="normal">}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CurlSession::ReadExpected(uint8_t<sp/>expected,<sp/><ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Context</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>context)</highlight></codeline>
<codeline lineno="973"><highlight class="normal">{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;m_bodyStartInBuffer<sp/>&gt;=<sp/>this-&gt;m_innerBufferSize)</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>buffer,<sp/>pull<sp/>data<sp/>from<sp/>wire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;m_innerBufferSize<sp/>=<sp/>m_connection-&gt;ReadFromSocket(</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_readBuffer,<sp/>_detail::DefaultLibcurlReaderSize,<sp/>context);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;m_innerBufferSize<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>closed<sp/>connection,<sp/>prevent<sp/>application<sp/>from<sp/>keep<sp/>trying<sp/>to<sp/>pull<sp/>more<sp/>bytes<sp/>from<sp/>the<sp/>wire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">TransportException</ref>(</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>was<sp/>closed<sp/>by<sp/>the<sp/>server<sp/>while<sp/>trying<sp/>to<sp/>read<sp/>a<sp/>response&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;m_bodyStartInBuffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>data<sp/>=<sp/>this-&gt;m_readBuffer[this-&gt;m_bodyStartInBuffer];</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>!=<sp/>expected)</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">TransportException</ref>(</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unexpected<sp/>format<sp/>in<sp/>HTTP<sp/>response.<sp/>Expecting:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(expected)</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>but<sp/>found:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(data)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/>this-&gt;m_bodyStartInBuffer<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="995"><highlight class="normal">}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CurlSession::ReadCRLF(<ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Context</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>context)</highlight></codeline>
<codeline lineno="998"><highlight class="normal">{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/>ReadExpected(</highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">,<sp/>context);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/>ReadExpected(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>context);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>from<sp/>curl<sp/>session</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>CurlSession::OnRead(uint8_t*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,<sp/><ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Context</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>context)</highlight></codeline>
<codeline lineno="1005"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>==<sp/>0<sp/>||<sp/>this-&gt;IsEOF())</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>all<sp/>chunked<sp/>is<sp/>all<sp/>read<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;m_isChunkedResponseType<sp/>&amp;&amp;<sp/>this-&gt;m_chunkSize<sp/>==<sp/>this-&gt;m_sessionTotalRead)</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>ReadCRLF(context);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>session<sp/>read<sp/>counter<sp/>for<sp/>next<sp/>chunk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;m_sessionTotalRead<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>size<sp/>of<sp/>next<sp/>chunk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>ParseChunkSize(context);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;IsEOF())</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>a<sp/>chunk<sp/>response,<sp/>EOF<sp/>means<sp/>that<sp/>the<sp/>last<sp/>chunk<sp/>was<sp/>found.</highlight></codeline>
<codeline lineno="1023"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>As<sp/>per<sp/>RFC,<sp/>after<sp/>the<sp/>last<sp/>chunk,<sp/>there<sp/>should<sp/>be<sp/>one<sp/>last<sp/>CRLF</highlight></codeline>
<codeline lineno="1024"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReadCRLF(context);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>parsing<sp/>next<sp/>chunk,<sp/>check<sp/>if<sp/>it<sp/>is<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>totalRead<sp/>=<sp/>size_t();</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>readRequestLength<sp/>=<sp/>this-&gt;m_isChunkedResponseType</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(std::min)(this-&gt;m_chunkSize<sp/>-<sp/>this-&gt;m_sessionTotalRead,<sp/>count)</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>count;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>responses<sp/>with<sp/>content-length,<sp/>avoid<sp/>trying<sp/>to<sp/>read<sp/>beyond<sp/>Content-length<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>libcurl<sp/>could<sp/>return<sp/>a<sp/>second<sp/>response<sp/>as<sp/>BadRequest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>https://github.com/Azure/azure-sdk-for-cpp/issues/306</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;m_contentLength<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>remainingBodyContent</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;m_contentLength)<sp/>-<sp/>this-&gt;m_sessionTotalRead;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>readRequestLength<sp/>=<sp/>(std::min)(readRequestLength,<sp/>remainingBodyContent);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>data<sp/>from<sp/>inner<sp/>buffer<sp/>if<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;m_bodyStartInBuffer<sp/>&lt;<sp/>this-&gt;m_innerBufferSize)</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>still<sp/>have<sp/>data<sp/>to<sp/>take<sp/>from<sp/>innerbuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_azure_1_1_core_1_1_i_o_1_1_memory_body_stream" kindref="compound">Azure::Core::IO::MemoryBodyStream</ref><sp/>innerBufferMemoryStream(</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_readBuffer<sp/>+<sp/>this-&gt;m_bodyStartInBuffer,</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_innerBufferSize<sp/>-<sp/>this-&gt;m_bodyStartInBuffer);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>From<sp/>code<sp/>inspection,<sp/>it<sp/>is<sp/>guaranteed<sp/>that<sp/>the<sp/>readRequestLength<sp/>will<sp/>fit<sp/>within<sp/>size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>count<sp/>is<sp/>bounded<sp/>by<sp/>size_t.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>totalRead<sp/>=<sp/>innerBufferMemoryStream.Read(buffer,<sp/>readRequestLength,<sp/>context);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;m_bodyStartInBuffer<sp/>+=<sp/>totalRead;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;m_sessionTotalRead<sp/>+=<sp/>totalRead;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>totalRead;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Head<sp/>request<sp/>have<sp/>contentLength<sp/>=<sp/>0,<sp/>so<sp/>we<sp/>won&apos;t<sp/>read<sp/>more,<sp/>just<sp/>return<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>if<sp/>we<sp/>have<sp/>already<sp/>read<sp/>all<sp/>contentLength</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;m_sessionTotalRead<sp/>==<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;m_contentLength)<sp/>||<sp/>this-&gt;IsEOF())</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>no<sp/>longer<sp/>have<sp/>a<sp/>connection,<sp/>read<sp/>0<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_connection)</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>from<sp/>socket<sp/>when<sp/>no<sp/>more<sp/>data<sp/>on<sp/>internal<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>chunk<sp/>request,<sp/>read<sp/>a<sp/>chunk<sp/>based<sp/>on<sp/>chunk<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/>totalRead<sp/>=<sp/>m_connection-&gt;ReadFromSocket(buffer,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(readRequestLength),<sp/>context);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/>this-&gt;m_sessionTotalRead<sp/>+=<sp/>totalRead;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reading<sp/>0<sp/>bytes<sp/>means<sp/>closed<sp/>connection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>known<sp/>content<sp/>length<sp/>and<sp/>chunked<sp/>response,<sp/>this<sp/>means<sp/>there<sp/>is<sp/>nothing<sp/>else<sp/>to<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>server<sp/>or<sp/>lost<sp/>connection<sp/>before<sp/>getting<sp/>full<sp/>response.<sp/>For<sp/>unknown<sp/>response<sp/>size,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>means<sp/>the<sp/>end<sp/>of<sp/>response<sp/>and<sp/>it&apos;s<sp/>fine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(totalRead<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>(this-&gt;m_contentLength<sp/>&gt;<sp/>0<sp/>||<sp/>this-&gt;m_isChunkedResponseType))</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectedToRead<sp/>=<sp/>this-&gt;m_isChunkedResponseType<sp/>?<sp/>this-&gt;m_chunkSize<sp/>:<sp/>this-&gt;m_contentLength;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;m_sessionTotalRead<sp/>&lt;<sp/>expectedToRead)</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">TransportException</ref>(</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>closed<sp/>before<sp/>getting<sp/>full<sp/>response<sp/>or<sp/>response<sp/>is<sp/>less<sp/>than<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expected.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>response<sp/>length<sp/>=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::to_string(expectedToRead)</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Read<sp/>until<sp/>now<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(this-&gt;m_sessionTotalRead));</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>totalRead;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>from<sp/>socket<sp/>and<sp/>return<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>taken<sp/>from<sp/>socket</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_curl_connection_1a39ec5246e8cab60c9229acee7f2f8ce7" kindref="member">CurlConnection::ReadFromSocket</ref>(uint8_t*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufferSize,<sp/><ref refid="class_azure_1_1_core_1_1_context" kindref="compound">Context</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>context)</highlight></codeline>
<codeline lineno="1103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>until<sp/>read<sp/>result<sp/>is<sp/>not<sp/>CURLE_AGAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>loop<sp/>is<sp/>expected<sp/>to<sp/>be<sp/>called<sp/>at<sp/>most<sp/>2<sp/>times:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>time<sp/>it<sp/>calls<sp/>`curl_easy_recv()`,<sp/>if<sp/>it<sp/>returns<sp/>CURLE_AGAIN<sp/>it<sp/>would<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>`pollSocketUntilEventOrTimeout`<sp/>and<sp/>wait<sp/>for<sp/>socket<sp/>to<sp/>be<sp/>ready<sp/>to<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>`pollSocketUntilEventOrTimeout`<sp/>will<sp/>then<sp/>handle<sp/>cancelation<sp/>token.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>socket<sp/>is<sp/>not<sp/>ready<sp/>before<sp/>the<sp/>timeout,<sp/>Exception<sp/>is<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>socket<sp/>is<sp/>ready,<sp/>it<sp/>calls<sp/>curl_easy_recv()<sp/>again<sp/>(second<sp/>loop<sp/>iteration).<sp/>It<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>expected<sp/>to<sp/>return<sp/>CURLE_AGAIN<sp/>(since<sp/>socket<sp/>is<sp/>ready),<sp/>so,<sp/>a<sp/>chuck<sp/>of<sp/>data<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>downloaded<sp/>and<sp/>result<sp/>will<sp/>be<sp/>CURLE_OK<sp/>which<sp/>breaks<sp/>the<sp/>loop.<sp/>Also,<sp/>getting<sp/>other<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>CURLE_OK<sp/>or<sp/>CURLE_AGAIN<sp/>throws.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>readBytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(CURLcode<sp/>readResult<sp/>=<sp/>CURLE_AGAIN;<sp/>readResult<sp/>==<sp/>CURLE_AGAIN;)</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>readResult<sp/>=<sp/>curl_easy_recv(m_handle.get(),<sp/>buffer,<sp/>bufferSize,<sp/>&amp;readBytes);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(readResult)</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLE_AGAIN:<sp/>{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>polling<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pollUntilSocketIsReady<sp/>=<sp/>pollSocketUntilEventOrTimeout(</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context,<sp/>m_curlSocket,<sp/>PollSocketDirection::Read,<sp/>60000L);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pollUntilSocketIsReady<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">TransportException</ref>(</highlight><highlight class="stringliteral">&quot;Timeout<sp/>waiting<sp/>for<sp/>socket<sp/>to<sp/>read.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pollUntilSocketIsReady<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>negative<sp/>value,<sp/>error<sp/>while<sp/>polling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">TransportException</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>while<sp/>polling<sp/>for<sp/>socket<sp/>ready<sp/>read&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ready<sp/>to<sp/>continue<sp/>download.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLE_OK:<sp/>{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error<sp/>reading<sp/>from<sp/>socket</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">TransportException</ref>(</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>while<sp/>reading<sp/>from<sp/>network<sp/>socket.<sp/>CURLE<sp/>code:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(readResult)</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(curl_easy_strerror(readResult)));</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AZ_PLATFORM_WINDOWS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/>WinSocketSetBuffSize(m_curlSocket);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>readBytes;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal">std::unique_ptr&lt;RawResponse&gt;<sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_curl_session_1a88a6369b4b0acc9c79705dd15083bf0f" kindref="member">CurlSession::ExtractResponse</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(this-&gt;m_response);<sp/>}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>CurlSession::ResponseBufferParser::Parse(</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buffer,</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bufferSize)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;m_parseCompleted)</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>all<sp/>buffer<sp/>until<sp/>\r\n<sp/>is<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>0,<sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>index<sp/>&lt;<sp/>bufferSize;<sp/>index++)</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer[index]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_delimiterStartInPrevPosition<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer[index]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>this-&gt;m_delimiterStartInPrevPosition)</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>found<sp/>end<sp/>of<sp/>delimiter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;m_internalBuffer.size()<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>internal<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>this<sp/>point,<sp/>we<sp/>are<sp/>reading<sp/>to<sp/>append<sp/>more<sp/>to<sp/>internal<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>append<sp/>more<sp/>if<sp/>index<sp/>is<sp/>greater<sp/>than<sp/>1,<sp/>meaning<sp/>not<sp/>when<sp/>buffer<sp/>is<sp/>[\r\nxxx]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>on<sp/>buffer<sp/>like<sp/>[xxx\r\n<sp/>yyyy],<sp/>append<sp/>xxx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Previously<sp/>appended<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_internalBuffer.append(buffer<sp/>+<sp/>start,<sp/>buffer<sp/>+<sp/>index<sp/>-<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>minus<sp/>1<sp/>to<sp/>remove<sp/>\r</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;state<sp/>==<sp/>ResponseParserState::StatusLine)</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>Response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_response<sp/>=<sp/>CreateHTTPResponse(this-&gt;m_internalBuffer);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>state<sp/>to<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;state<sp/>=<sp/>ResponseParserState::Headers;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_delimiterStartInPrevPosition<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>index<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>jump<sp/>\n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;state<sp/>==<sp/>ResponseParserState::Headers)</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>throw<sp/>if<sp/>header<sp/>is<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetHeader(*this-&gt;m_response,<sp/>this-&gt;m_internalBuffer);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_delimiterStartInPrevPosition<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>index<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>jump<sp/>\n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>never<sp/>happen<sp/>that<sp/>parser<sp/>is<sp/>not<sp/>statusLIne<sp/>or<sp/>Headers<sp/>and<sp/>we<sp/>still<sp/>try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>parse<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="azure__assert_8hpp_1a89e2bf005c01baa889835e8c3cb243a1" kindref="member">AZURE_UNREACHABLE_CODE</ref>();</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clean<sp/>internal<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_internalBuffer.clear();</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>at<sp/>internal<sp/>buffer.<sp/>Add<sp/>directly<sp/>from<sp/>internal<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;state<sp/>==<sp/>ResponseParserState::StatusLine)</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>Response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_response<sp/>=<sp/>CreateHTTPResponse(buffer<sp/>+<sp/>start,<sp/>buffer<sp/>+<sp/>index<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>state<sp/>to<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;state<sp/>=<sp/>ResponseParserState::Headers;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_delimiterStartInPrevPosition<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>index<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>jump<sp/>\n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;state<sp/>==<sp/>ResponseParserState::Headers)</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>this<sp/>is<sp/>end<sp/>of<sp/>headers<sp/>delimiter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1)<sp/>internal<sp/>buffer<sp/>is<sp/>empty<sp/>and<sp/>\n<sp/>is<sp/>the<sp/>first<sp/>char<sp/>on<sp/>buffer<sp/>[\nBody...]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2)<sp/>index<sp/>==<sp/>start<sp/>+<sp/>1.<sp/>No<sp/>header<sp/>data<sp/>after<sp/>last<sp/>\r\n<sp/>[header\r\n\r\n]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>==<sp/>0<sp/>||<sp/>index<sp/>==<sp/>start<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_parseCompleted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>plus<sp/>1<sp/>to<sp/>advance<sp/>the<sp/>\n.<sp/>If<sp/>we<sp/>were<sp/>at<sp/>buffer<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>throw<sp/>if<sp/>header<sp/>is<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Azure::Core::Http::_detail::RawResponseHelpers::SetHeader(</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*this-&gt;m_response,<sp/>buffer<sp/>+<sp/>start,<sp/>buffer<sp/>+<sp/>index<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_delimiterStartInPrevPosition<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>index<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>jump<sp/>\n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>never<sp/>happen<sp/>that<sp/>parser<sp/>is<sp/>not<sp/>statusLIne<sp/>or<sp/>Headers<sp/>and<sp/>we<sp/>still<sp/>try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>parse<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="azure__assert_8hpp_1a89e2bf005c01baa889835e8c3cb243a1" kindref="member">AZURE_UNREACHABLE_CODE</ref>();</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>this-&gt;m_internalBuffer.size()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>this-&gt;m_delimiterStartInPrevPosition)</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unlikely.<sp/>But<sp/>this<sp/>means<sp/>a<sp/>case<sp/>with<sp/>buffers<sp/>like<sp/>[xx\r],<sp/>[xxxx]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>\r<sp/>is<sp/>not<sp/>delimiter<sp/>and<sp/>in<sp/>previous<sp/>loop<sp/>it<sp/>was<sp/>omitted,<sp/>so<sp/>adding<sp/>it<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_internalBuffer.append(</highlight><highlight class="stringliteral">&quot;\r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>\r<sp/>in<sp/>the<sp/>response<sp/>without<sp/>\n<sp/>after<sp/>it.<sp/>keep<sp/>parsing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_delimiterStartInPrevPosition<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start<sp/>&lt;<sp/>bufferSize)</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>didn&apos;t<sp/>find<sp/>the<sp/>end<sp/>of<sp/>delimiter<sp/>yet,<sp/>save<sp/>at<sp/>internal<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this-&gt;m_delimiterStartInPrevPosition<sp/>is<sp/>true,<sp/>buffer<sp/>ends<sp/>in<sp/>\r<sp/>[xxxx\r]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>add<sp/>\r.<sp/>IF<sp/>next<sp/>char<sp/>is<sp/>not<sp/>\n,<sp/>we<sp/>will<sp/>append<sp/>\r<sp/>then<sp/>on<sp/>next<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;m_internalBuffer.append(</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>+<sp/>start,<sp/>buffer<sp/>+<sp/>bufferSize<sp/>-<sp/>(this-&gt;m_delimiterStartInPrevPosition<sp/>?<sp/>1<sp/>:<sp/>0));</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>connection<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>connection<sp/>key<sp/>is<sp/>a<sp/>tuple<sp/>of<sp/>host,<sp/>proxy<sp/>info,<sp/>TLS<sp/>info,<sp/>etc.<sp/>Basically<sp/>any<sp/>characteristics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>connection<sp/>that<sp/>should<sp/>indicate<sp/>that<sp/>the<sp/>connection<sp/>shouldn&apos;t<sp/>be<sp/>re-used<sp/>should<sp/>be<sp/>listed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>connection<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>GetConnectionKey(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>host,<sp/><ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options" kindref="compound">CurlTransportOptions</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>options)</highlight></codeline>
<codeline lineno="1281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/>std::string<sp/>key(host);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/>key.append(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/>key.append(!options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1aa0559cf03611e7b68f42094991e208fe" kindref="member">CAInfo</ref>.empty()<sp/>?<sp/>options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1aa0559cf03611e7b68f42094991e208fe" kindref="member">CAInfo</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/>key.append(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/>key.append(!options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a7e43d75e4f8ecfb96322d5b92b2aee17" kindref="member">CAPath</ref>.empty()<sp/>?<sp/>options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a7e43d75e4f8ecfb96322d5b92b2aee17" kindref="member">CAPath</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/>key.append(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/>key.append(</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1ac6eb38a8ef89772e7e24f77950d550e9" kindref="member">Proxy</ref>.<ref refid="class_azure_1_1_nullable_1a9a0c797c4eb208551e045de2d97809f7" kindref="member">HasValue</ref>()<sp/>?<sp/>(options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1ac6eb38a8ef89772e7e24f77950d550e9" kindref="member">Proxy</ref>.<ref refid="class_azure_1_1_nullable_1a97723b8e1d2c4043c751a159697ba0c6" kindref="member">Value</ref>().empty()<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;NoProxy&quot;</highlight><highlight class="normal"><sp/>:<sp/>options.Proxy.Value())</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/>key.append(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/>key.append(options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a6d0619f5f09ffdcc9a7fb87b97b59a1d" kindref="member">ProxyUsername</ref>.<ref refid="class_azure_1_1_nullable_1a6cb17c73e74a65db4defbae1ce74a1c1" kindref="member">ValueOr</ref>(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/>key.append(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/>key.append(options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1aa6718b6de792b57dccf7b7648f43f2d9" kindref="member">ProxyPassword</ref>.<ref refid="class_azure_1_1_nullable_1a6cb17c73e74a65db4defbae1ce74a1c1" kindref="member">ValueOr</ref>(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/>key.append(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/>key.append(!options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a8e5e6b74029a927bb6635eeff2a898fd" kindref="member">SslOptions</ref>.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_ssl_options_1a5d3fc54773da96c6477e3f938b73ddc5" kindref="member">EnableCertificateRevocationListCheck</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/>key.append(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/>key.append(options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a4be09cd52603cc58eeb66139650d7d16" kindref="member">SslVerifyPeer</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/>key.append(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/>key.append(options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1ab78a134dd0c79a4a391f0f2cd55e9843" kindref="member">NoSignal</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/>key.append(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/>key.append(options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a8e5e6b74029a927bb6635eeff2a898fd" kindref="member">SslOptions</ref>.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_ssl_options_1a11ebd05e5f58f37a9f6f77aa6f9a4b5d" kindref="member">AllowFailedCrlRetrieval</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;FC&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/>key.append(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LIBCURL_VERSION_NUM<sp/>&gt;=<sp/>0x074D00<sp/></highlight><highlight class="comment">//<sp/>7.77.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/>key.append(</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a8e5e6b74029a927bb6635eeff2a898fd" kindref="member">SslOptions</ref>.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_ssl_options_1a11f843c6a50fbf433a4cb95a0b90b2da" kindref="member">PemEncodedExpectedRootCertificates</ref>.empty()<sp/>?<sp/>std::to_string(</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::hash&lt;std::string&gt;{}(options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a8e5e6b74029a927bb6635eeff2a898fd" kindref="member">SslOptions</ref>.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_ssl_options_1a11f843c6a50fbf433a4cb95a0b90b2da" kindref="member">PemEncodedExpectedRootCertificates</ref>))</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/>key.append(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/>key.append(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>DefaultConnectionTimeout<sp/>or<sp/>0<sp/>result<sp/>in<sp/>the<sp/>same<sp/>setting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/>key.append(</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1adef7d1b687f06d8072888c14dfbbc856" kindref="member">ConnectionTimeout</ref><sp/>==<sp/>Azure::Core::Http::_detail::DefaultConnectionTimeout</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1adef7d1b687f06d8072888c14dfbbc856" kindref="member">ConnectionTimeout</ref><sp/>==<sp/>std::chrono::milliseconds(0))</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>std::to_string(options.ConnectionTimeout.count()));</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DumpCurlInfoToLog(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>text,<sp/>uint8_t*<sp/>ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="1324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>0x10;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>text<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::dec<sp/>&lt;&lt;<sp/>std::setw(10)<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>size<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes:<sp/>(0x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(8)<sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>size<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/>Log::Write(Logger::Level::Verbose,<sp/>ss.str());</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size;<sp/>i<sp/>+=<sp/>width)</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>=<sp/>std::stringstream();</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>std::setw(4)<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>hex<sp/>not<sp/>disabled,<sp/>show<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>width;<sp/>c++)</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>c<sp/>&lt;<sp/>size)</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>std::setw(2)<sp/>&lt;&lt;<sp/>std::setfill(&apos;0&apos;)<sp/>&lt;&lt;<sp/>static_cast&lt;int&gt;(ptr[i<sp/>+<sp/>c])<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>(c<sp/>&lt;<sp/>width)<sp/>&amp;&amp;<sp/>(i<sp/>+<sp/>c<sp/>&lt;<sp/>size);<sp/>c++)</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>buffer<sp/>as<sp/>text,<sp/>if<sp/>it&apos;s<sp/>printable,<sp/>print<sp/>the<sp/>character,<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>&apos;.&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptr[i<sp/>+<sp/>c]);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Azure::Core::_internal::StringExtensions::IsPrintable(ch))</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>ch;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Verbose,<sp/>ss.str());</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CurlConnection::CurlLoggingCallback(CURL*,<sp/>curl_infotype<sp/>type,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="1369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>CURLINFO_TEXT)</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>textToLog{data};</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>last<sp/>character<sp/>to<sp/>log<sp/>is<sp/>a<sp/>\n,<sp/>remove<sp/>it<sp/>because<sp/>Log::Write<sp/>will<sp/>append<sp/>a<sp/>\n.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textToLog.back()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>textToLog.resize(textToLog.size()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Verbose,<sp/></highlight><highlight class="stringliteral">&quot;==<sp/>Info:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>textToLog);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>prefix;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLINFO_HEADER_OUT:</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;=&gt;<sp/>Send<sp/>header&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLINFO_DATA_OUT:</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;=&gt;<sp/>Send<sp/>data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLINFO_SSL_DATA_OUT:</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;=&gt;<sp/>Send<sp/>SSL<sp/>data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLINFO_HEADER_IN:</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&lt;=<sp/>Recv<sp/>header&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLINFO_DATA_IN:</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&lt;=<sp/>Recv<sp/>data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLINFO_SSL_DATA_IN:</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&lt;=<sp/>Recv<sp/>SSL<sp/>data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>in<sp/>case<sp/>a<sp/>new<sp/>one<sp/>is<sp/>introduced<sp/>to<sp/>shock<sp/>us<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/>DumpCurlInfoToLog(prefix,<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data),<sp/>size);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>Windows<sp/>and<sp/>macOS,<sp/>libcurl<sp/>uses<sp/>native<sp/>crypto<sp/>backends,<sp/>this<sp/>functionality<sp/>depends<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>OpenSSL<sp/>backend.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(AZ_PLATFORM_WINDOWS)<sp/>&amp;&amp;<sp/>!defined(AZ_PLATFORM_MAC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_azure" kindref="compound">Azure</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Core<sp/>{</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">_detail<sp/>{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">UniqueHandleHelper&lt;X509&gt;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">type<sp/>=<sp/>_internal::BasicUniqueHandle&lt;X509,<sp/>X509_free&gt;;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">UniqueHandleHelper&lt;X509_CRL&gt;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">type<sp/>=<sp/>_internal::BasicUniqueHandle&lt;X509_CRL,<sp/>X509_CRL_free&gt;;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">UniqueHandleHelper&lt;BIO&gt;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">type<sp/>=<sp/>_internal::BasicUniqueHandle&lt;BIO,<sp/>BIO_free_all&gt;;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_OPENSSL_1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">UniqueHandleHelper&lt;OCSP_REQ_CTX&gt;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">type<sp/>=<sp/>_internal::BasicUniqueHandle&lt;OCSP_REQ_CTX,<sp/>OCSP_REQ_CTX_free&gt;;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>USE_OPENSSL_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">UniqueHandleHelper&lt;STACK_OF(X509_CRL)&gt;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FreeCrlStack(STACK_OF(X509_CRL)<sp/>*<sp/>obj)</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sk_X509_CRL_pop_free(obj,<sp/>X509_CRL_free);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">type<sp/>=<sp/>_internal::BasicUniqueHandle&lt;STACK_OF(X509_CRL),<sp/>FreeCrlStack&gt;;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Api,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>MakeUniqueHandle(Api&amp;<sp/>OpensslApi,<sp/>Args&amp;&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>raw<sp/>=<sp/>OpensslApi(std::forward&lt;Args&gt;(</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args)...);<sp/></highlight><highlight class="comment">//<sp/>forwarding<sp/>is<sp/>probably<sp/>unnecessary,<sp/>could<sp/>use<sp/>const<sp/>Args&amp;...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>raw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">T<sp/>=<sp/>std::remove_pointer_t&lt;</highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(raw)&gt;;<sp/></highlight><highlight class="comment">//<sp/>no<sp/>need<sp/>to<sp/>request<sp/>T<sp/>when<sp/>we<sp/>can<sp/>see</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>what<sp/>OpensslApi<sp/>returned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_internal::UniqueHandle&lt;T&gt;{raw};</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>_detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Http<sp/>{</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">_detail<sp/>{</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>Code<sp/>Coverage<sp/>across<sp/>GetOpenSSLError<sp/>because<sp/>we<sp/>don&apos;t<sp/>have<sp/>a<sp/>good<sp/>way<sp/>of<sp/>forcing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OpenSSL<sp/>to<sp/>fail.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>GetOpenSSLError(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>what)</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bio(Azure::Core::_detail::MakeUniqueHandle(BIO_new,<sp/>BIO_s_mem()));</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIO_printf(bio.get(),<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>%hs:<sp/>&quot;</highlight><highlight class="normal">,<sp/>what.c_str());</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ERR_peek_error()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERR_print_errors(bio.get());</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIO_printf(bio.get(),<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>error.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t*<sp/>bioData;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>bufferSize<sp/>=<sp/>BIO_get_mem_data(bio.get(),<sp/>&amp;bioData);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>returnValue;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnValue.resize(bufferSize);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;returnValue[0],<sp/>bioData,<sp/>bufferSize);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnValue;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>_detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>g_ssl_crl_max_size_in_kb<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Azure::Core::_internal::UniqueHandle&lt;X509_CRL&gt;<sp/>LoadCrlFromUrl(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>url)</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Stream(Logger::Level::Informational)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Load<sp/>CRL<sp/>from<sp/>Url:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>url<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Azure::Core::_internal::UniqueHandle&lt;X509_CRL&gt;<sp/>crl;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_OPENSSL_3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crl<sp/>=<sp/>Azure::Core::_detail::MakeUniqueHandle(</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_CRL_load_http,<sp/>url.c_str(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>5);</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>host,<sp/>port,<sp/>path;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>use_ssl;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*host_ptr,<sp/>*port_ptr,<sp/>*path_ptr;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!OCSP_parse_url(url.c_str(),<sp/>&amp;host_ptr,<sp/>&amp;port_ptr,<sp/>&amp;path_ptr,<sp/>&amp;use_ssl))</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Error,<sp/></highlight><highlight class="stringliteral">&quot;Failure<sp/>parsing<sp/>URL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host<sp/>=<sp/>host_ptr;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/>=<sp/>port_ptr;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>path_ptr;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_ssl)</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Error,<sp/></highlight><highlight class="stringliteral">&quot;CRL<sp/>HTTPS<sp/>not<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Azure::Core::_internal::UniqueHandle&lt;BIO&gt;<sp/>bio{</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Azure::Core::_detail::MakeUniqueHandle(BIO_new_connect,<sp/>host.c_str())};</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bio)</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger::Level::Error,</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BIO_new_connect<sp/>failed&quot;</highlight><highlight class="normal"><sp/>+<sp/>_detail::GetOpenSSLError(</highlight><highlight class="stringliteral">&quot;Load<sp/>CRL&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!BIO_set_conn_port(bio.get(),<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(port.c_str())))</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger::Level::Error,</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BIO_set_conn_port<sp/>failed&quot;</highlight><highlight class="normal"><sp/>+<sp/>_detail::GetOpenSSLError(</highlight><highlight class="stringliteral">&quot;Load<sp/>CRL&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>requestContext</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Azure::Core::_detail::MakeUniqueHandle(OCSP_REQ_CTX_new,<sp/>bio.get(),<sp/>1024<sp/>*<sp/>1024);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!requestContext)</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger::Level::Error,</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;OCSP_REQ_CTX_new<sp/>failed&quot;</highlight><highlight class="normal"><sp/>+<sp/>_detail::GetOpenSSLError(</highlight><highlight class="stringliteral">&quot;Load<sp/>CRL&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default<sp/>the<sp/>OCSP<sp/>APIs<sp/>limit<sp/>the<sp/>CRL<sp/>length<sp/>to<sp/>1M,<sp/>that<sp/>isn&apos;t<sp/>sufficient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>many<sp/>web<sp/>sites,<sp/>so<sp/>increase<sp/>it<sp/>to<sp/>10M.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OCSP_set_max_response_length(requestContext.get(),<sp/>10<sp/>*<sp/>1024<sp/>*<sp/>1024);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!OCSP_REQ_CTX_http(requestContext.get(),<sp/></highlight><highlight class="stringliteral">&quot;GET&quot;</highlight><highlight class="normal">,<sp/>url.c_str()))</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger::Level::Error,</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;OCSP_REQ_CTX_http<sp/>failed&quot;</highlight><highlight class="normal"><sp/>+<sp/>_detail::GetOpenSSLError(</highlight><highlight class="stringliteral">&quot;Load<sp/>CRL&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!OCSP_REQ_CTX_add1_header(requestContext.get(),<sp/></highlight><highlight class="stringliteral">&quot;Host&quot;</highlight><highlight class="normal">,<sp/>host.c_str()))</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger::Level::Error,</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;OCSP_REQ_add1_header<sp/>failed&quot;</highlight><highlight class="normal"><sp/>+<sp/>_detail::GetOpenSSLError(</highlight><highlight class="stringliteral">&quot;Load<sp/>CRL&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_CRL*<sp/>crl_ptr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>X509_CRL_http_nbio(requestContext.get(),<sp/>&amp;crl_ptr);</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(rv<sp/>==<sp/>-1);</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rv<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ERR_peek_error()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger::Level::Error,</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;X509_CRL_http_nbio<sp/>failed,<sp/>possible<sp/>because<sp/>CRL<sp/>is<sp/>too<sp/>long.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger::Level::Error,</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;X509_CRL_http_nbio<sp/>failed&quot;</highlight><highlight class="normal"><sp/>+<sp/>_detail::GetOpenSSLError(</highlight><highlight class="stringliteral">&quot;Load<sp/>CRL&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crl.reset(crl_ptr);</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!crl)</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Error,<sp/>_detail::GetOpenSSLError(</highlight><highlight class="stringliteral">&quot;Load<sp/>CRL&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crl;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>CrlFormat<sp/>:<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Http,</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Asn1,</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PEM,</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Azure::Core::_internal::UniqueHandle&lt;X509_CRL&gt;<sp/>LoadCrl(</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>source,</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CrlFormat<sp/>format)</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Azure::Core::_internal::UniqueHandle&lt;X509_CRL&gt;<sp/>x;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Azure::Core::_internal::UniqueHandle&lt;BIO&gt;<sp/>in;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>==<sp/>CrlFormat::Http)</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LoadCrlFromUrl(source);</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsCrlValid(X509_CRL*<sp/>crl)</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ASN1_TIME*<sp/>at<sp/>=<sp/>X509_CRL_get0_nextUpdate(crl);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>day<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sec<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ASN1_TIME_diff(&amp;day,<sp/>&amp;sec,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>at))</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Error,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>check<sp/>expiration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>Safe<sp/>default,<sp/>invalid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(day<sp/>&gt;<sp/>0<sp/>||<sp/>sec<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>Later,<sp/>valid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>Before<sp/>or<sp/>same,<sp/>invalid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>GetDistributionPointUrl(DIST_POINT*<sp/>dp)</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GENERAL_NAMES*<sp/>gens;</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GENERAL_NAME*<sp/>gen;</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>nameType;</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING*<sp/>uri;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dp-&gt;distpoint)</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Informational,<sp/></highlight><highlight class="stringliteral">&quot;returning,<sp/>dp-&gt;distpoint<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dp-&gt;distpoint-&gt;type<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger::Level::Informational,</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;returning,<sp/>dp-&gt;distpoint-&gt;type<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(dp-&gt;distpoint-&gt;type));</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gens<sp/>=<sp/>dp-&gt;distpoint-&gt;name.fullname;</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sk_GENERAL_NAME_num(gens);<sp/>i++)</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gen<sp/>=<sp/>sk_GENERAL_NAME_value(gens,<sp/>i);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uri<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">ASN1_STRING*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(GENERAL_NAME_get0_value(gen,<sp/>&amp;nameType));</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nameType<sp/>==<sp/>GEN_URI<sp/>&amp;&amp;<sp/>ASN1_STRING_length(uri)<sp/>&gt;<sp/>6)</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>uptr<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ASN1_STRING_get0_data(uri));</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(uptr,<sp/></highlight><highlight class="stringliteral">&quot;http://&quot;</highlight><highlight class="normal">,<sp/>7)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uptr;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::mutex<sp/>crl_cache_lock;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;X509_CRL*&gt;<sp/>crl_cache;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SaveCertificateCrlToMemory(</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509*<sp/>cert,</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Azure::Core::_internal::UniqueHandle&lt;X509_CRL&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>crl)</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lockResult(crl_cache_lock);</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>existing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_NAME*<sp/>cert_issuer<sp/>=<sp/>cert<sp/>?<sp/>X509_get_issuer_name(cert)<sp/>:<sp/>nullptr;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>crl_cache.begin();<sp/>it<sp/>!=<sp/>crl_cache.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_CRL*<sp/>cacheEntry<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cacheEntry)</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_NAME*<sp/>crl_issuer<sp/>=<sp/>X509_CRL_get_issuer(cacheEntry);</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!crl_issuer<sp/>||<sp/>!cert_issuer)</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>getting<sp/>a<sp/>new<sp/>CRL<sp/>for<sp/>an<sp/>existing<sp/>CRL,<sp/>update<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CRL<sp/>with<sp/>the<sp/>new<sp/>CRL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>X509_NAME_cmp(crl_issuer,<sp/>cert_issuer))</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bump<sp/>the<sp/>refcount<sp/>on<sp/>the<sp/>new<sp/>CRL<sp/>before<sp/>adding<sp/>it<sp/>to<sp/>the<sp/>cache.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_CRL_free(*it);</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_CRL_up_ref(crl.get());</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*it<sp/>=<sp/>crl.get();</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>found,<sp/>so<sp/>try<sp/>to<sp/>find<sp/>slot<sp/>by<sp/>purging<sp/>outdated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>crl_cache.begin();<sp/>it<sp/>!=<sp/>crl_cache.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*it)</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_CRL_free(*it);</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_CRL_up_ref(crl.get());</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*it<sp/>=<sp/>crl.get();</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsCrlValid(*it))</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>stale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_CRL_free(*it);</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_CRL_up_ref(crl.get());</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*it<sp/>=<sp/>crl.get();</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clone<sp/>the<sp/>certificate<sp/>and<sp/>add<sp/>it<sp/>to<sp/>the<sp/>cache.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_CRL_up_ref(crl.get());</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crl_cache.push_back(crl.get());</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Azure::Core::_internal::UniqueHandle&lt;X509_CRL&gt;<sp/>LoadCertificateCrlFromMemory(X509*<sp/>cert)</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_NAME*<sp/>cert_issuer<sp/>=<sp/>cert<sp/>?<sp/>X509_get_issuer_name(cert)<sp/>:<sp/>nullptr;</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lockResult(crl_cache_lock);</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>crl_cache.begin();<sp/>it<sp/>!=<sp/>crl_cache.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_CRL*<sp/>crl<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*it)</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>names<sp/>don&apos;t<sp/>match<sp/>up.<sp/>probably<sp/>a<sp/>hash<sp/>collision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>lets<sp/>test<sp/>if<sp/>there<sp/>is<sp/>another<sp/>crl<sp/>on<sp/>disk.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_NAME*<sp/>crl_issuer<sp/>=<sp/>X509_CRL_get_issuer(crl);</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!crl_issuer<sp/>||<sp/>!cert_issuer)</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>X509_NAME_cmp(crl_issuer,<sp/>cert_issuer))</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsCrlValid(crl))</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Informational,<sp/></highlight><highlight class="stringliteral">&quot;Discarding<sp/>outdated<sp/>CRL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_CRL_free(*it);</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*it<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_CRL_up_ref(crl);</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Azure::Core::_internal::UniqueHandle&lt;X509_CRL&gt;(crl);</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Azure::Core::_internal::UniqueHandle&lt;X509_CRL&gt;<sp/>LoadCrlFromCacheAndDistributionPoint(</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509*<sp/>cert,</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STACK_OF(DIST_POINT)<sp/>*<sp/>crlDistributionPointStack)</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Azure::Core::_internal::UniqueHandle&lt;X509_CRL&gt;<sp/>crl<sp/>=<sp/>LoadCertificateCrlFromMemory(cert);</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(crl)</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crl;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>was<sp/>not<sp/>found<sp/>on<sp/>disk<sp/>cache,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so,<sp/>now<sp/>loading<sp/>from<sp/>web.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Walk<sp/>through<sp/>the<sp/>possible<sp/>CRL<sp/>distribution<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>looking<sp/>for<sp/>one<sp/>which<sp/>has<sp/>a<sp/>URL<sp/>that<sp/>we<sp/>can<sp/>download.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>urlptr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sk_DIST_POINT_num(crlDistributionPointStack);<sp/>i++)</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DIST_POINT*<sp/>dp<sp/>=<sp/>sk_DIST_POINT_value(crlDistributionPointStack,<sp/>i);</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>urlptr<sp/>=<sp/>GetDistributionPointUrl(dp);</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(urlptr)</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>load<sp/>from<sp/>web,<sp/>exit<sp/>loop<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>successfully<sp/>downloaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crl<sp/>=<sp/>LoadCrl(urlptr,<sp/>CrlFormat::Http);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(crl)</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!urlptr)</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Error,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>CRL<sp/>dist<sp/>point<sp/>qualified<sp/>for<sp/>downloading.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(crl)</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>it<sp/>to<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SaveCertificateCrlToMemory(cert,<sp/>crl);</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crl;</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_OPENSSL_3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STACK_OF(X509_CRL)<sp/>*<sp/>CrlHttpCallback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="curl__connection__private_8hpp_1ae681945a2cf88d6337137dc0260a1545" kindref="member">X509_STORE_CTX</ref>*<sp/>context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X509_NAME*)</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STACK_OF(X509_CRL)<sp/>*<sp/>CrlHttpCallback(<ref refid="curl__connection__private_8hpp_1ae681945a2cf88d6337137dc0260a1545" kindref="member">X509_STORE_CTX</ref>*<sp/>context,<sp/>X509_NAME*)</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Azure::Core::_internal::UniqueHandle&lt;X509_CRL&gt;<sp/>crl;</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STACK_OF(DIST_POINT)<sp/>*<sp/>crlDistributionPoint;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Azure::Core::_internal::UniqueHandle&lt;STACK_OF(X509_CRL)&gt;<sp/>crlStack</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Azure::Core::_internal::UniqueHandle&lt;STACK_OF(X509_CRL)&gt;(sk_X509_CRL_new_null());</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(crlStack<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Error,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>allocate<sp/>STACK_OF(X509_CRL)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509*<sp/>currentCertificate<sp/>=<sp/>X509_STORE_CTX_get_current_cert(context);</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>download<sp/>Crl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crlDistributionPoint<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">STACK_OF(DIST_POINT)*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_get_ext_d2i(currentCertificate,<sp/>NID_crl_distribution_points,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!crlDistributionPoint</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>X509_NAME_cmp(</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_get_issuer_name(currentCertificate),</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_get_subject_name(currentCertificate))</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger::Level::Error,</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>CRL<sp/>distribution<sp/>points<sp/>defined<sp/>on<sp/>non<sp/>self-issued<sp/>cert,<sp/>CRL<sp/>check<sp/>may<sp/>fail.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crl<sp/>=<sp/>LoadCrlFromCacheAndDistributionPoint(currentCertificate,<sp/>crlDistributionPoint);</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sk_DIST_POINT_pop_free(crlDistributionPoint,<sp/>DIST_POINT_free);</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!crl)</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Error,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>retrieve<sp/>CRL,<sp/>CRL<sp/>check<sp/>may<sp/>fail.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sk_X509_CRL_push(crlStack.get(),<sp/>X509_CRL_dup(crl.get()));</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>download<sp/>delta<sp/>Crl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crlDistributionPoint<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">STACK_OF(DIST_POINT)*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_get_ext_d2i(currentCertificate,<sp/>NID_freshest_crl,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(crlDistributionPoint<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crl<sp/>=<sp/>LoadCrlFromCacheAndDistributionPoint(currentCertificate,<sp/>crlDistributionPoint);</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sk_DIST_POINT_pop_free(crlDistributionPoint,<sp/>DIST_POINT_free);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(crl)</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sk_X509_CRL_push(crlStack.get(),<sp/>X509_CRL_dup(crl.get()));</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crlStack.release();</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetOpenSSLContextConnectionIndex()</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>openSslConnectionIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(openSslConnectionIndex<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openSslConnectionIndex</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>X509_STORE_get_ex_new_index(0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>openSslConnectionIndex;</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetOpenSSLContextLastVerifyFunction()</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>openSslLastVerifyFunctionIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(openSslLastVerifyFunctionIndex<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openSslLastVerifyFunctionIndex</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>X509_STORE_get_ex_new_index(0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>openSslLastVerifyFunctionIndex;</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Http</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal">}}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Azure::Core</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OpenSSL<sp/>X509<sp/>Certificate<sp/>Validation<sp/>function<sp/>-<sp/>based<sp/>off<sp/>of<sp/>the<sp/>example<sp/>found<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://linux.die.net/man/3/x509_store_ctx_set_verify_cb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CurlConnection::VerifyCertificateError(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ok,<sp/><ref refid="curl__connection__private_8hpp_1ae681945a2cf88d6337137dc0260a1545" kindref="member">X509_STORE_CTX</ref>*<sp/>storeContext)</highlight></codeline>
<codeline lineno="1933"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/>X509_STORE*<sp/>certStore<sp/>=<sp/>X509_STORE_CTX_get0_store(storeContext);</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/>X509*<sp/>err_cert;</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err,<sp/>depth;</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/>Azure::Core::_internal::UniqueHandle&lt;BIO&gt;<sp/>bio_err(</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Azure::Core::_detail::MakeUniqueHandle(BIO_new,<sp/>BIO_s_mem()));</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/>err_cert<sp/>=<sp/>X509_STORE_CTX_get_current_cert(storeContext);</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>X509_STORE_CTX_get_error(storeContext);</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/>depth<sp/>=<sp/>X509_STORE_CTX_get_error_depth(storeContext);</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/>BIO_printf(bio_err.get(),<sp/></highlight><highlight class="stringliteral">&quot;depth=%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>depth);</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err_cert)</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/>X509_NAME_print_ex(bio_err.get(),<sp/>X509_get_subject_name(err_cert),<sp/>0,<sp/>XN_FLAG_ONELINE);</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/>BIO_puts(bio_err.get(),<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/>BIO_puts(bio_err.get(),<sp/></highlight><highlight class="stringliteral">&quot;&lt;no<sp/>cert&gt;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ok)</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/>BIO_printf(bio_err.get(),<sp/></highlight><highlight class="stringliteral">&quot;verify<sp/>error:num=%d:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>err,<sp/>X509_verify_cert_error_string(err));</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(err)</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>X509_V_ERR_UNABLE_TO_GET_CRL:</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BIO_printf(bio_err.get(),<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>retrieve<sp/>CRL.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/>X509_V_OK<sp/>&amp;&amp;<sp/>ok<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print<sp/>out<sp/>policies<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/>BIO_printf(bio_err.get(),<sp/></highlight><highlight class="stringliteral">&quot;verify<sp/>return:%d\n&quot;</highlight><highlight class="normal">,<sp/>ok);</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Handle<sp/>certificate<sp/>specific<sp/>errors<sp/>here<sp/>based<sp/>on<sp/>configuration<sp/>options.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/>X509_V_ERR_UNABLE_TO_GET_CRL)</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_allowFailedCrlRetrieval)</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIO_printf(bio_err.get(),<sp/></highlight><highlight class="stringliteral">&quot;Ignoring<sp/>CRL<sp/>retrieval<sp/>error<sp/>by<sp/>configuration.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>X509<sp/>error<sp/>in<sp/>the<sp/>store<sp/>context,<sp/>because<sp/>CURL<sp/>retrieves<sp/>it,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>it<sp/>overwrites<sp/>the<sp/>successful<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_STORE_CTX_set_error(storeContext,<sp/>X509_V_OK);</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>true,<sp/>indicating<sp/>that<sp/>things<sp/>are<sp/>all<sp/>good.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIO_printf(</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bio_err.get(),<sp/></highlight><highlight class="stringliteral">&quot;Fail<sp/>TLS<sp/>negotiation<sp/>because<sp/>CRL<sp/>retrieval<sp/>is<sp/>not<sp/>configured.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>outputString[128];</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((len<sp/>=<sp/>BIO_gets(bio_err.get(),<sp/>outputString,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(outputString)))<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outputString[len<sp/>-<sp/>1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outputString[len<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Informational,<sp/>std::string(outputString));</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"></highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok)</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;ve<sp/>done<sp/>our<sp/>stuff,<sp/>call<sp/>the<sp/>pre-existing<sp/>callback.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>existingCallback<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">X509_STORE_CTX_verify_cb</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_STORE_get_ex_data(certStore,<sp/>GetOpenSSLContextLastVerifyFunction()));</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(existingCallback<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>existingCallback(ok,<sp/>storeContext);</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ok);</highlight></codeline>
<codeline lineno="2018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CurlConnection::CurlSslCtxCallback(CURL*<sp/>curl,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sslctx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>parm)</highlight></codeline>
<codeline lineno="2021"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_curl_connection" kindref="compound">CurlConnection</ref>*<sp/>connection<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_azure_1_1_core_1_1_http_1_1_curl_connection" kindref="compound">CurlConnection</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(parm);</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>connection-&gt;SslCtxCallback(curl,<sp/>sslctx);</highlight></codeline>
<codeline lineno="2024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"></highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CurlConnection::SslCtxCallback(CURL*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sslctx)</highlight></codeline>
<codeline lineno="2027"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/>SSL_CTX*<sp/>ctx<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">SSL_CTX*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sslctx);</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>SSL_CTX_get_cert_store<sp/>does<sp/>NOT<sp/>increase<sp/>the<sp/>store<sp/>reference<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/>X509_STORE*<sp/>certStore<sp/>=<sp/>SSL_CTX_get_cert_store(ctx);</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/>X509_VERIFY_PARAM*<sp/>verifyParam<sp/>=<sp/>X509_STORE_get0_param(certStore);</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_enableCrlValidation)</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>our<sp/>connection<sp/>handle<sp/>in<sp/>the<sp/>store<sp/>extended<sp/>data<sp/>so<sp/>it<sp/>can<sp/>be<sp/>retrieved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>later<sp/>callbacks.<sp/>This<sp/>allows<sp/>setting<sp/>options<sp/>on<sp/>a<sp/>per-connection<sp/>basis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/>X509_STORE_set_ex_data(certStore,<sp/>GetOpenSSLContextConnectionIndex(),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/>X509_VERIFY_PARAM_set_flags(verifyParam,<sp/>X509_V_FLAG_CRL_CHECK<sp/>|<sp/>X509_V_FLAG_CRL_CHECK_ALL);</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/>X509_STORE_set_lookup_crls_cb(certStore,<sp/>CrlHttpCallback);</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/>X509_STORE_set_ex_data(</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>certStore,</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetOpenSSLContextLastVerifyFunction(),</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(X509_STORE_get_verify_cb(certStore)));</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/>X509_STORE_set_verify_cb(certStore,<sp/>[](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ok,<sp/><ref refid="curl__connection__private_8hpp_1ae681945a2cf88d6337137dc0260a1545" kindref="member">X509_STORE_CTX</ref>*<sp/>storeContext)<sp/>{</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>X509_STORE*<sp/>certStore<sp/>=<sp/>X509_STORE_CTX_get0_store(storeContext);</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_curl_connection" kindref="compound">CurlConnection</ref>*<sp/>thisConnection<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="class_azure_1_1_core_1_1_http_1_1_curl_connection" kindref="compound">CurlConnection</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_STORE_get_ex_data(certStore,<sp/>GetOpenSSLContextConnectionIndex()));</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>thisConnection-&gt;VerifyCertificateError(ok,<sp/>storeContext);</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/>X509_VERIFY_PARAM_clear_flags(verifyParam,<sp/>X509_V_FLAG_CRL_CHECK);</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="2062"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal">std::unique_ptr&lt;CurlNetworkConnection&gt;<sp/>CurlConnectionPool::ExtractOrCreateCurlConnection(</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_request" kindref="compound">Request</ref>&amp;<sp/>request,</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options" kindref="compound">CurlTransportOptions</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>options,</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>resetPool)</highlight></codeline>
<codeline lineno="2069"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/>uint16_t<sp/>port<sp/>=<sp/>request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1a6cda1c14edbd6c5283be6014fe37a4dd" kindref="member">GetUrl</ref>().<ref refid="class_azure_1_1_core_1_1_url_1aaad8684cf7519832b6aa49f8d121fbab" kindref="member">GetPort</ref>();</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>a<sp/>display<sp/>name<sp/>for<sp/>the<sp/>host<sp/>being<sp/>connected<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>hostDisplayName<sp/>=<sp/>request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1a6cda1c14edbd6c5283be6014fe37a4dd" kindref="member">GetUrl</ref>().<ref refid="class_azure_1_1_core_1_1_url_1a92fd65dfc4bb0e0b1f418e519e7f7445" kindref="member">GetScheme</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;://&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1a6cda1c14edbd6c5283be6014fe37a4dd" kindref="member">GetUrl</ref>().<ref refid="class_azure_1_1_core_1_1_url_1a78f71c6e36a35efe1d2597cadd728320" kindref="member">GetHost</ref>()<sp/>+<sp/>(port<sp/>!=<sp/>0<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(port)<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>connectionKey<sp/>=<sp/>GetConnectionKey(hostDisplayName,<sp/>options);</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(CurlConnectionPool::g_curlConnectionPool</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ConnectionPoolIndex)::mapped_type<sp/>connectionsToBeReset;</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Critical<sp/>section.<sp/>Needs<sp/>to<sp/>own<sp/>ConnectionPoolMutex<sp/>before<sp/>executing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lock<sp/>mutex<sp/>to<sp/>access<sp/>connection<sp/>pool.<sp/>mutex<sp/>is<sp/>unlock<sp/>as<sp/>soon<sp/>as<sp/>lock<sp/>is<sp/>out<sp/>of<sp/>scope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(CurlConnectionPool::ConnectionPoolMutex);</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>a<sp/>ref<sp/>to<sp/>the<sp/>pool<sp/>from<sp/>the<sp/>map<sp/>of<sp/>pools</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hostPoolIndex<sp/>=<sp/>g_curlConnectionPool.ConnectionPoolIndex.find(connectionKey);</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hostPoolIndex<sp/>!=<sp/>g_curlConnectionPool.ConnectionPoolIndex.end()</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>hostPoolIndex-&gt;second.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resetPool)</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connectionsToBeReset<sp/>=<sp/>std::move(hostPoolIndex-&gt;second);</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clean<sp/>the<sp/>pool-index<sp/>as<sp/>requested<sp/>in<sp/>the<sp/>call.<sp/>Typically<sp/>to<sp/>force<sp/>a<sp/>new<sp/>connection<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>created<sp/>and<sp/>to<sp/>discard<sp/>all<sp/>current<sp/>connections<sp/>in<sp/>the<sp/>pool<sp/>for<sp/>the<sp/>host-index.<sp/>A<sp/>caller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>might<sp/>request<sp/>this<sp/>after<sp/>getting<sp/>broken/closed<sp/>connections<sp/>multiple-times.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostPoolIndex-&gt;second.clear();</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Verbose,<sp/>LogMsgPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Reset<sp/>connection<sp/>pool<sp/>requested.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>ref<sp/>to<sp/>first<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fistConnectionIterator<sp/>=<sp/>hostPoolIndex-&gt;second.begin();</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>the<sp/>connection<sp/>ref<sp/>to<sp/>temp<sp/>ref</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>connection<sp/>=<sp/>std::move(*fistConnectionIterator);</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>connection<sp/>ref<sp/>from<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostPoolIndex-&gt;second.erase(fistConnectionIterator);</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>index<sp/>if<sp/>there<sp/>are<sp/>no<sp/>more<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hostPoolIndex-&gt;second.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_curlConnectionPool.ConnectionPoolIndex.erase(hostPoolIndex);</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Verbose,<sp/>LogMsgPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Re-using<sp/>connection<sp/>from<sp/>the<sp/>pool.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>connection<sp/>ref</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>connection;</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Creating<sp/>a<sp/>new<sp/>connection<sp/>is<sp/>thread<sp/>safe.<sp/>No<sp/>need<sp/>to<sp/>lock<sp/>mutex<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>available<sp/>connection<sp/>for<sp/>the<sp/>pool<sp/>for<sp/>the<sp/>required<sp/>host.<sp/>Create<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/>Log::Write(Logger::Level::Verbose,<sp/>LogMsgPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Spawn<sp/>new<sp/>connection.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;CurlConnection&gt;(request,<sp/>options,<sp/>hostDisplayName,<sp/>connectionKey);</highlight></codeline>
<codeline lineno="2126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>connection<sp/>back<sp/>to<sp/>the<sp/>connection<sp/>pool.<sp/>Push<sp/>it<sp/>to<sp/>the<sp/>front<sp/>so<sp/>it<sp/>becomes<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>first<sp/>connection<sp/>to<sp/>be<sp/>picked<sp/>next<sp/>time<sp/>some<sp/>one<sp/>ask<sp/>for<sp/>a<sp/>connection<sp/>to<sp/>the<sp/>pool<sp/>(LIFO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CurlConnectionPool::MoveConnectionBackToPool(</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;CurlNetworkConnection&gt;<sp/>connection,</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/>HttpStatusCode<sp/>lastStatusCode)</highlight></codeline>
<codeline lineno="2133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>code<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::underlying_type&lt;Http::HttpStatusCode&gt;::type</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(lastStatusCode);</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((code<sp/>&lt;<sp/>200<sp/>||<sp/>code<sp/>&gt;=<sp/>300)<sp/>&amp;&amp;<sp/>lastStatusCode<sp/>!=<sp/>HttpStatusCode::NotFound)</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>handler<sp/>with<sp/>previous<sp/>response<sp/>with<sp/>Error<sp/>can&apos;t<sp/>be<sp/>re-use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(connection-&gt;IsShutdown())</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>re-used<sp/>a<sp/>shut<sp/>down<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/>Log::Write(Logger::Level::Verbose,<sp/></highlight><highlight class="stringliteral">&quot;Moving<sp/>connection<sp/>to<sp/>pool...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(CurlConnectionPool::g_curlConnectionPool</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ConnectionPoolIndex)::mapped_type::value_type<sp/>connectionToBeRemoved;</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"></highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Lock<sp/>mutex<sp/>to<sp/>access<sp/>connection<sp/>pool.<sp/>mutex<sp/>is<sp/>unlock<sp/>as<sp/>soon<sp/>as<sp/>lock<sp/>is<sp/>out<sp/>of<sp/>scope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(CurlConnectionPool::ConnectionPoolMutex);</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>poolId<sp/>=<sp/>connection-&gt;GetConnectionKey();</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>hostPool<sp/>=<sp/>g_curlConnectionPool.ConnectionPoolIndex[poolId];</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hostPool.size()<sp/>&gt;=<sp/>_detail::MaxConnectionsPerIndex<sp/>&amp;&amp;<sp/>!hostPool.empty())</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>last<sp/>connection<sp/>from<sp/>the<sp/>pool<sp/>to<sp/>insert<sp/>this<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lastConnection<sp/>=<sp/>--hostPool.end();</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/>connectionToBeRemoved<sp/>=<sp/>std::move(*lastConnection);</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/>hostPool.erase(lastConnection);</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>time<sp/>when<sp/>connection<sp/>was<sp/>moved<sp/>back<sp/>to<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/>connection-&gt;UpdateLastUsageTime();</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/>hostPool.push_front(std::move(connection));</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_cleanThread.joinable()<sp/>&amp;&amp;<sp/>!IsCleanThreadRunning)</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>thread<sp/>was<sp/>running<sp/>before<sp/>but<sp/>it&apos;s<sp/>finished,<sp/>join<sp/>it<sp/>to<sp/>finalize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cleanThread.join();</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Cleanup<sp/>will<sp/>start<sp/>a<sp/>background<sp/>thread<sp/>which<sp/>will<sp/>close<sp/>abandoned<sp/>connections<sp/>from<sp/>the<sp/>pool.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>free-up<sp/>resources<sp/>from<sp/>the<sp/>app</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>only<sp/>call<sp/>to<sp/>cleanup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_cleanThread.joinable())</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Verbose,<sp/></highlight><highlight class="stringliteral">&quot;Start<sp/>clean<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/>IsCleanThreadRunning<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cleanThread<sp/>=<sp/>std::thread(CleanupThread);</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/>Log::Write(Logger::Level::Verbose,<sp/></highlight><highlight class="stringliteral">&quot;Clean<sp/>thread<sp/>running.<sp/>Won&apos;t<sp/>start<sp/>a<sp/>new<sp/>one.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><ref refid="class_azure_1_1_core_1_1_http_1_1_curl_connection_1ae028bfff06339fae9b1486bc34d9e42e" kindref="member">CurlConnection::CurlConnection</ref>(</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_request" kindref="compound">Request</ref>&amp;<sp/>request,</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options" kindref="compound">CurlTransportOptions</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>options,</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>hostDisplayName,</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>connectionPropertiesKey)</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_connectionKey(connectionPropertiesKey)</highlight></codeline>
<codeline lineno="2196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/>m_handle<sp/>=<sp/>Azure::Core::_internal::UniqueHandle&lt;CURL&gt;(curl_easy_init());</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_handle)</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">Azure::Core::Http::TransportException</ref>(</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate<sp/>+<sp/>hostDisplayName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::string(</highlight><highlight class="stringliteral">&quot;curl_easy_init<sp/>returned<sp/>Null&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/>CURLcode<sp/>result;</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1aaeda7fcfc4ac51ac45966d34464d5b50" kindref="member">EnableCurlTracing</ref>)</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetLibcurlOption(</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_handle,<sp/>CURLOPT_DEBUGFUNCTION,<sp/>CurlConnection::CurlLoggingCallback,<sp/>&amp;result))</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">TransportException</ref>(</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::string(</highlight><highlight class="stringliteral">&quot;.<sp/>Could<sp/>not<sp/>enable<sp/>logging<sp/>callback.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::string(curl_easy_strerror(result)));</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetLibcurlOption(m_handle,<sp/>CURLOPT_VERBOSE,<sp/>1,<sp/>&amp;result))</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">TransportException</ref>(</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::string(</highlight><highlight class="stringliteral">&quot;.<sp/>Could<sp/>not<sp/>enable<sp/>verbose<sp/>logging.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::string(curl_easy_strerror(result)));</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Libcurl<sp/>setup<sp/>before<sp/>open<sp/>connection<sp/>(url,<sp/>connect_only,<sp/>timeout)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetLibcurlOption(m_handle,<sp/>CURLOPT_URL,<sp/>request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1a6cda1c14edbd6c5283be6014fe37a4dd" kindref="member">GetUrl</ref>().<ref refid="class_azure_1_1_core_1_1_url_1a68990d32c4bb0229f28cf384d0380c47" kindref="member">GetAbsoluteUrl</ref>().data(),<sp/>&amp;result))</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">Azure::Core::Http::TransportException</ref>(</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate<sp/>+<sp/>hostDisplayName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::string(curl_easy_strerror(result)));</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"></highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1a6cda1c14edbd6c5283be6014fe37a4dd" kindref="member">GetUrl</ref>().<ref refid="class_azure_1_1_core_1_1_url_1aaad8684cf7519832b6aa49f8d121fbab" kindref="member">GetPort</ref>()<sp/>!=<sp/>0</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!SetLibcurlOption(m_handle,<sp/>CURLOPT_PORT,<sp/>request.<ref refid="class_azure_1_1_core_1_1_http_1_1_request_1a6cda1c14edbd6c5283be6014fe37a4dd" kindref="member">GetUrl</ref>().<ref refid="class_azure_1_1_core_1_1_url_1aaad8684cf7519832b6aa49f8d121fbab" kindref="member">GetPort</ref>(),<sp/>&amp;result))</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">Azure::Core::Http::TransportException</ref>(</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate<sp/>+<sp/>hostDisplayName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::string(curl_easy_strerror(result)));</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetLibcurlOption(m_handle,<sp/>CURLOPT_CONNECT_ONLY,<sp/>1L,<sp/>&amp;result))</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">Azure::Core::Http::TransportException</ref>(</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate<sp/>+<sp/>hostDisplayName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::string(curl_easy_strerror(result)));</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"></highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Set<sp/>timeout<sp/>to<sp/>24h.<sp/>Libcurl<sp/>will<sp/>fail<sp/>uploading<sp/>on<sp/>windows<sp/>if<sp/>timeout<sp/>is:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>timeout<sp/>&gt;=<sp/>25<sp/>days.<sp/>Fails<sp/>as<sp/>soon<sp/>as<sp/>trying<sp/>to<sp/>upload<sp/>any<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>25<sp/>days<sp/>&lt;<sp/>timeout<sp/>&gt;<sp/>1<sp/>days.<sp/>Fail<sp/>on<sp/>huge<sp/>uploads<sp/>(<sp/>&gt;<sp/>1GB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetLibcurlOption(m_handle,<sp/>CURLOPT_TIMEOUT,<sp/>60L<sp/>*<sp/>60L<sp/>*<sp/>24L,<sp/>&amp;result))</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">Azure::Core::Http::TransportException</ref>(</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate<sp/>+<sp/>hostDisplayName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::string(curl_easy_strerror(result)));</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1adef7d1b687f06d8072888c14dfbbc856" kindref="member">ConnectionTimeout</ref><sp/>!=<sp/>Azure::Core::Http::_detail::DefaultConnectionTimeout)</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetLibcurlOption(m_handle,<sp/>CURLOPT_CONNECTTIMEOUT_MS,<sp/>options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1adef7d1b687f06d8072888c14dfbbc856" kindref="member">ConnectionTimeout</ref>,<sp/>&amp;result))</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">Azure::Core::Http::TransportException</ref>(</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate<sp/>+<sp/>hostDisplayName</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Fail<sp/>setting<sp/>connect<sp/>timeout<sp/>to:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::to_string(options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1adef7d1b687f06d8072888c14dfbbc856" kindref="member">ConnectionTimeout</ref>.count())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ms.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::string(curl_easy_strerror(result)));</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"></highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/>/********************<sp/>Curl<sp/>handle<sp/>options<sp/>apply<sp/>to<sp/>all<sp/>connections<sp/>created</highlight></codeline>
<codeline lineno="2271"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>keepAlive<sp/>option<sp/>is<sp/>managed<sp/>by<sp/>the<sp/>session<sp/>directly.</highlight></codeline>
<codeline lineno="2272"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1ac6eb38a8ef89772e7e24f77950d550e9" kindref="member">Proxy</ref>)</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetLibcurlOption(m_handle,<sp/>CURLOPT_PROXY,<sp/>options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1ac6eb38a8ef89772e7e24f77950d550e9" kindref="member">Proxy</ref>-&gt;c_str(),<sp/>&amp;result))</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">Azure::Core::Http::TransportException</ref>(</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate<sp/>+<sp/>hostDisplayName</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Failed<sp/>to<sp/>set<sp/>proxy<sp/>to:&quot;</highlight><highlight class="normal"><sp/>+<sp/>options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1ac6eb38a8ef89772e7e24f77950d550e9" kindref="member">Proxy</ref>.<ref refid="class_azure_1_1_nullable_1a97723b8e1d2c4043c751a159697ba0c6" kindref="member">Value</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::string(curl_easy_strerror(result)));</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a6d0619f5f09ffdcc9a7fb87b97b59a1d" kindref="member">ProxyUsername</ref>.<ref refid="class_azure_1_1_nullable_1a9a0c797c4eb208551e045de2d97809f7" kindref="member">HasValue</ref>())</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetLibcurlOption(</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_handle,<sp/>CURLOPT_PROXYUSERNAME,<sp/>options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a6d0619f5f09ffdcc9a7fb87b97b59a1d" kindref="member">ProxyUsername</ref>.<ref refid="class_azure_1_1_nullable_1a97723b8e1d2c4043c751a159697ba0c6" kindref="member">Value</ref>().c_str(),<sp/>&amp;result))</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">TransportException</ref>(</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate<sp/>+<sp/>hostDisplayName</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Failed<sp/>to<sp/>set<sp/>proxy<sp/>username<sp/>to:&quot;</highlight><highlight class="normal"><sp/>+<sp/>options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a6d0619f5f09ffdcc9a7fb87b97b59a1d" kindref="member">ProxyUsername</ref>.<ref refid="class_azure_1_1_nullable_1a97723b8e1d2c4043c751a159697ba0c6" kindref="member">Value</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::string(curl_easy_strerror(result)));</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1aa6718b6de792b57dccf7b7648f43f2d9" kindref="member">ProxyPassword</ref>.<ref refid="class_azure_1_1_nullable_1a9a0c797c4eb208551e045de2d97809f7" kindref="member">HasValue</ref>())</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetLibcurlOption(</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_handle,<sp/>CURLOPT_PROXYPASSWORD,<sp/>options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1aa6718b6de792b57dccf7b7648f43f2d9" kindref="member">ProxyPassword</ref>.<ref refid="class_azure_1_1_nullable_1a97723b8e1d2c4043c751a159697ba0c6" kindref="member">Value</ref>().c_str(),<sp/>&amp;result))</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">TransportException</ref>(</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate<sp/>+<sp/>hostDisplayName</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Failed<sp/>to<sp/>set<sp/>proxy<sp/>password<sp/>to:&quot;</highlight><highlight class="normal"><sp/>+<sp/>options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1aa6718b6de792b57dccf7b7648f43f2d9" kindref="member">ProxyPassword</ref>.<ref refid="class_azure_1_1_nullable_1a97723b8e1d2c4043c751a159697ba0c6" kindref="member">Value</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::string(curl_easy_strerror(result)));</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1aa0559cf03611e7b68f42094991e208fe" kindref="member">CAInfo</ref>.empty())</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetLibcurlOption(m_handle,<sp/>CURLOPT_CAINFO,<sp/>options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1aa0559cf03611e7b68f42094991e208fe" kindref="member">CAInfo</ref>.c_str(),<sp/>&amp;result))</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">Azure::Core::Http::TransportException</ref>(</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate<sp/>+<sp/>hostDisplayName</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Failed<sp/>to<sp/>set<sp/>CA<sp/>cert<sp/>file<sp/>to:&quot;</highlight><highlight class="normal"><sp/>+<sp/>options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1aa0559cf03611e7b68f42094991e208fe" kindref="member">CAInfo</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::string(curl_easy_strerror(result)));</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"></highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a7e43d75e4f8ecfb96322d5b92b2aee17" kindref="member">CAPath</ref>.empty())</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetLibcurlOption(m_handle,<sp/>CURLOPT_CAPATH,<sp/>options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a7e43d75e4f8ecfb96322d5b92b2aee17" kindref="member">CAPath</ref>.c_str(),<sp/>&amp;result))</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">Azure::Core::Http::TransportException</ref>(</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate<sp/>+<sp/>hostDisplayName</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Failed<sp/>to<sp/>set<sp/>CA<sp/>path<sp/>to:&quot;</highlight><highlight class="normal"><sp/>+<sp/>options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a7e43d75e4f8ecfb96322d5b92b2aee17" kindref="member">CAPath</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::string(curl_easy_strerror(result)));</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LIBCURL_VERSION_NUM<sp/>&gt;=<sp/>0x074D00<sp/></highlight><highlight class="comment">//<sp/>7.77.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a8e5e6b74029a927bb6635eeff2a898fd" kindref="member">SslOptions</ref>.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_ssl_options_1a11f843c6a50fbf433a4cb95a0b90b2da" kindref="member">PemEncodedExpectedRootCertificates</ref>.empty())</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/>curl_blob<sp/>rootCertBlob</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a8e5e6b74029a927bb6635eeff2a898fd" kindref="member">SslOptions</ref>.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_ssl_options_1a11f843c6a50fbf433a4cb95a0b90b2da" kindref="member">PemEncodedExpectedRootCertificates</ref>.c_str())),</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a8e5e6b74029a927bb6635eeff2a898fd" kindref="member">SslOptions</ref>.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_ssl_options_1a11f843c6a50fbf433a4cb95a0b90b2da" kindref="member">PemEncodedExpectedRootCertificates</ref>.size(),</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CURL_BLOB_COPY};</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetLibcurlOption(m_handle,<sp/>CURLOPT_CAINFO_BLOB,<sp/>&amp;rootCertBlob,<sp/>&amp;result))</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">Azure::Core::Http::TransportException</ref>(</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate<sp/>+<sp/>hostDisplayName</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Failed<sp/>to<sp/>set<sp/>CA<sp/>cert<sp/>to:&quot;</highlight><highlight class="normal"><sp/>+<sp/>options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1aa0559cf03611e7b68f42094991e208fe" kindref="member">CAInfo</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::string(curl_easy_strerror(result)));</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AZ_PLATFORM_WINDOWS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sslOption<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a8e5e6b74029a927bb6635eeff2a898fd" kindref="member">SslOptions</ref>.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_ssl_options_1a5d3fc54773da96c6477e3f938b73ddc5" kindref="member">EnableCertificateRevocationListCheck</ref>)</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/>sslOption<sp/>|=<sp/>CURLSSLOPT_NO_REVOKE;</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetLibcurlOption(m_handle,<sp/>CURLOPT_SSL_OPTIONS,<sp/>sslOption,<sp/>&amp;result))</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">Azure::Core::Http::TransportException</ref>(</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate<sp/>+<sp/>hostDisplayName</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Failed<sp/>to<sp/>set<sp/>ssl<sp/>options<sp/>to<sp/>long<sp/>bitmask:&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(sslOption)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::string(curl_easy_strerror(result)));</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>!defined(AZ_PLATFORM_MAC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a8e5e6b74029a927bb6635eeff2a898fd" kindref="member">SslOptions</ref>.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_ssl_options_1a5d3fc54773da96c6477e3f938b73ddc5" kindref="member">EnableCertificateRevocationListCheck</ref>)</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetLibcurlOption(</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_handle,<sp/>CURLOPT_SSL_CTX_FUNCTION,<sp/>CurlConnection::CurlSslCtxCallback,<sp/>&amp;result))</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">TransportException</ref>(</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate<sp/>+<sp/>hostDisplayName</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Failed<sp/>to<sp/>set<sp/>SSL<sp/>context<sp/>callback.<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(curl_easy_strerror(result)));</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetLibcurlOption(m_handle,<sp/>CURLOPT_SSL_CTX_DATA,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;result))</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">TransportException</ref>(</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate<sp/>+<sp/>hostDisplayName</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Failed<sp/>to<sp/>set<sp/>SSL<sp/>context<sp/>callback<sp/>data.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::string(curl_easy_strerror(result)));</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!SetLibcurlOption(m_handle,<sp/>CURLOPT_SSL_VERIFYSTATUS,<sp/>1,<sp/>&amp;result))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>TransportException(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate<sp/>+<sp/>hostDisplayName</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>&quot;.<sp/>Failed<sp/>to<sp/>enable<sp/>OCSP<sp/>chaining.<sp/>&quot;<sp/>+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string(curl_easy_strerror(result)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/>m_allowFailedCrlRetrieval<sp/>=<sp/>options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a8e5e6b74029a927bb6635eeff2a898fd" kindref="member">SslOptions</ref>.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_ssl_options_1a11ebd05e5f58f37a9f6f77aa6f9a4b5d" kindref="member">AllowFailedCrlRetrieval</ref>;</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/>m_enableCrlValidation<sp/>=<sp/>options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a8e5e6b74029a927bb6635eeff2a898fd" kindref="member">SslOptions</ref>.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_ssl_options_1a5d3fc54773da96c6477e3f938b73ddc5" kindref="member">EnableCertificateRevocationListCheck</ref>;</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1a4be09cd52603cc58eeb66139650d7d16" kindref="member">SslVerifyPeer</ref>)</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetLibcurlOption(m_handle,<sp/>CURLOPT_SSL_VERIFYPEER,<sp/>0L,<sp/>&amp;result))</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">Azure::Core::Http::TransportException</ref>(</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate<sp/>+<sp/>hostDisplayName</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Failed<sp/>to<sp/>disable<sp/>ssl<sp/>verify<sp/>peer.<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(curl_easy_strerror(result)));</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options.<ref refid="struct_azure_1_1_core_1_1_http_1_1_curl_transport_options_1ab78a134dd0c79a4a391f0f2cd55e9843" kindref="member">NoSignal</ref>)</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetLibcurlOption(m_handle,<sp/>CURLOPT_NOSIGNAL,<sp/>1L,<sp/>&amp;result))</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">Azure::Core::Http::TransportException</ref>(</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate<sp/>+<sp/>hostDisplayName</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Failed<sp/>to<sp/>set<sp/>NOSIGNAL<sp/>option<sp/>for<sp/>libcurl.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::string(curl_easy_strerror(result)));</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"></highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>curl-transport<sp/>adapter<sp/>supports<sp/>only<sp/>HTTP/1.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>https://github.com/Azure/azure-sdk-for-cpp/issues/2848</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>libcurl<sp/>uses<sp/>HTTP/2<sp/>by<sp/>default,<sp/>if<sp/>it<sp/>can<sp/>be<sp/>negotiated<sp/>with<sp/>a<sp/>server<sp/>on<sp/>handshake.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetLibcurlOption(m_handle,<sp/>CURLOPT_HTTP_VERSION,<sp/>CURL_HTTP_VERSION_1_1,<sp/>&amp;result))</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">Azure::Core::Http::TransportException</ref>(</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate<sp/>+<sp/>hostDisplayName</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Failed<sp/>to<sp/>set<sp/>libcurl<sp/>HTTP/1.1&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(curl_easy_strerror(result)));</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Make<sp/>libcurl<sp/>to<sp/>support<sp/>only<sp/>TLS<sp/>v1.2<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetLibcurlOption(m_handle,<sp/>CURLOPT_SSLVERSION,<sp/>CURL_SSLVERSION_TLSv1_2,<sp/>&amp;result))</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">Azure::Core::Http::TransportException</ref>(</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate<sp/>+<sp/>hostDisplayName</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Failed<sp/>enforcing<sp/>TLS<sp/>v1.2<sp/>or<sp/>greater.<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(curl_easy_strerror(result)));</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>performResult<sp/>=<sp/>curl_easy_perform(m_handle.get());</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(performResult<sp/>!=<sp/>CURLE_OK)</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AZ_PLATFORM_LINUX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(performResult<sp/>==<sp/>CURLE_SSL_PEER_CERTIFICATE)</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>curl_easy_getinfo(m_handle.get(),<sp/>CURLINFO_SSL_VERIFYRESULT,<sp/>&amp;result);</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">Http::TransportException</ref>(</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate<sp/>+<sp/>hostDisplayName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::string(curl_easy_strerror(performResult))</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Underlying<sp/>error:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>X509_verify_cert_error_string(result));</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">Http::TransportException</ref>(</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_detail::DefaultFailedToGetNewConnectionTemplate<sp/>+<sp/>hostDisplayName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::string(curl_easy_strerror(performResult)));</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Get<sp/>the<sp/>socket<sp/>that<sp/>libcurl<sp/>is<sp/>using<sp/>from<sp/>handle.<sp/>Will<sp/>use<sp/>this<sp/>to<sp/>wait<sp/>while</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reading/writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>into<sp/>wire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2454"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(push)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C26812:<sp/>The<sp/>enum<sp/>type<sp/>&apos;CURLcode&apos;<sp/>is<sp/>un-scoped.<sp/>Prefer<sp/>&apos;enum<sp/>class&apos;<sp/>over<sp/>&apos;enum&apos;<sp/>(Enum.3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable<sp/>:<sp/>26812)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>curl_easy_getinfo(m_handle.get(),<sp/>CURLINFO_ACTIVESOCKET,<sp/>&amp;m_curlSocket);</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2460"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>CURLE_OK)</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_azure_1_1_core_1_1_http_1_1_transport_exception" kindref="compound">Http::TransportException</ref>(</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Broken<sp/>connection.<sp/>Couldn&apos;t<sp/>get<sp/>the<sp/>active<sp/>sockect<sp/>for<sp/>it.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::string(curl_easy_strerror(result)));</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2468"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/http/curl/curl.cpp"/>
  </compounddef>
</doxygen>
