<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Azure::Core::Amqp::Models::AmqpMap</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Azure::Core::Amqp::Models::_detail::AmqpCollectionBase&lt; std::map&lt; AmqpValue, AmqpValue &gt;, AmqpMap &gt;</basecompoundref>
    <includes refid="amqp__value_8hpp" local="no">amqp_value.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map_1af2205b0d60a8a0a9fe7d67f938c598cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Azure::Core::Amqp::Models::AmqpMap::AmqpMap</definition>
        <argsstring>()</argsstring>
        <name>AmqpMap</name>
        <qualifiedname>Azure::Core::Amqp::Models::AmqpMap::AmqpMap</qualifiedname>
        <briefdescription>
<para>Construct a new <ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map" kindref="compound">AmqpMap</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="685" column="5" bodyfile="inc/azure/core/amqp/models/amqp_value.hpp" bodystart="685" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map_1aba8d3e9c270c63b28285fa8f08cb4b44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Azure::Core::Amqp::Models::AmqpMap::AmqpMap</definition>
        <argsstring>(std::initializer_list&lt; std::map&lt; AmqpValue, AmqpValue &gt;::value_type &gt; const &amp;values)</argsstring>
        <name>AmqpMap</name>
        <qualifiedname>Azure::Core::Amqp::Models::AmqpMap::AmqpMap</qualifiedname>
        <param>
          <type>std::initializer_list&lt; std::map&lt; <ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_value" kindref="compound">AmqpValue</ref>, <ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_value" kindref="compound">AmqpValue</ref> &gt;::value_type &gt; const &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_array" kindref="compound">AmqpArray</ref> object with an initializer list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="688" column="5" bodyfile="inc/azure/core/amqp/models/amqp_value.hpp" bodystart="688" bodyend="691"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map_1a495bfd3bcab9184ed78920b98bea7a87" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Azure::Core::Amqp::Models::AmqpMap::AmqpMap</definition>
        <argsstring>(AmqpMap &amp;&amp;other) noexcept=default</argsstring>
        <name>AmqpMap</name>
        <qualifiedname>Azure::Core::Amqp::Models::AmqpMap::AmqpMap</qualifiedname>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map" kindref="compound">AmqpMap</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Move Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="694" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map_1a2b778981a79be0e5ce33263206e1b209" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map" kindref="compound">AmqpMap</ref> &amp;</type>
        <definition>AmqpMap &amp; Azure::Core::Amqp::Models::AmqpMap::operator=</definition>
        <argsstring>(AmqpMap &amp;&amp;other) noexcept=default</argsstring>
        <name>operator=</name>
        <qualifiedname>Azure::Core::Amqp::Models::AmqpMap::operator=</qualifiedname>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map" kindref="compound">AmqpMap</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Move assignment operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="697" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map_1aaebee47954037bf3a91b8aac012348e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azure::Core::Amqp::Models::AmqpMap::AmqpMap</definition>
        <argsstring>(const AmqpMap &amp;other)=default</argsstring>
        <name>AmqpMap</name>
        <qualifiedname>Azure::Core::Amqp::Models::AmqpMap::AmqpMap</qualifiedname>
        <param>
          <type>const <ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map" kindref="compound">AmqpMap</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="700" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map_1ae8eff65267495676c2430786427dd382" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map" kindref="compound">AmqpMap</ref> &amp;</type>
        <definition>AmqpMap &amp; Azure::Core::Amqp::Models::AmqpMap::operator=</definition>
        <argsstring>(const AmqpMap &amp;other)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>Azure::Core::Amqp::Models::AmqpMap::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map" kindref="compound">AmqpMap</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy assignment operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="703" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map_1aa70734fa7672d6f6be02a3e96dcd6df6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azure::Core::Amqp::Models::AmqpMap::AmqpMap</definition>
        <argsstring>(AmqpValue const &amp;value)</argsstring>
        <name>AmqpMap</name>
        <qualifiedname>Azure::Core::Amqp::Models::AmqpMap::AmqpMap</qualifiedname>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_value" kindref="compound">AmqpValue</ref> const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map" kindref="compound">AmqpMap</ref> object from an existing uAMQP AMQP_VALUE item. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>Note that this does NOT capture the passed in AMQP_VALUE object, the caller is responsible for freeing that object.</para>
</simplesect>
<simplesect kind="remark"><para>This is an internal accessor and should never be used by code outside the AMQP implementation.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>- the AMQP array value to capture. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="714" column="5" bodyfile="src/models/amqp_value.cpp" bodystart="812" bodyend="831"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map_1a74ede8e28a090c3bab5be36a13645882" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Azure::Core::Amqp::Models::AmqpMap::~AmqpMap</definition>
        <argsstring>()=default</argsstring>
        <name>~AmqpMap</name>
        <qualifiedname>Azure::Core::Amqp::Models::AmqpMap::~AmqpMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="716" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map_1ab35ac1e7364d5e80cfce62f261d94aa0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>decltype(m_value) ::mapped_type &amp;</type>
        <definition>decltype(m_value) ::mapped_type &amp; Azure::Core::Amqp::Models::AmqpMap::operator[]</definition>
        <argsstring>(decltype(m_value)::key_type &amp;&amp;keyVal)</argsstring>
        <name>operator[]</name>
        <qualifiedname>Azure::Core::Amqp::Models::AmqpMap::operator[]</qualifiedname>
        <param>
          <type>decltype(m_value)::key_type &amp;&amp;</type>
          <declname>keyVal</declname>
        </param>
        <briefdescription>
<para>Access an element in the map. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a reference to the value associated with the specified key. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="722" column="27" bodyfile="inc/azure/core/amqp/models/amqp_value.hpp" bodystart="722" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map_1a9479da96da6a102caef0092db07988a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>ValueTypes</declname>
            <defname>ValueTypes</defname>
          </param>
        </templateparamlist>
        <type>std::pair&lt; decltype(m_value)::iterator, bool &gt;</type>
        <definition>std::pair&lt; decltype(m_value)::iterator, bool &gt; Azure::Core::Amqp::Models::AmqpMap::emplace</definition>
        <argsstring>(ValueTypes &amp;&amp;... values)</argsstring>
        <name>emplace</name>
        <qualifiedname>Azure::Core::Amqp::Models::AmqpMap::emplace</qualifiedname>
        <param>
          <type>ValueTypes &amp;&amp;...</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>Insert a new key/value pair into the map. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::pair&lt;iterator, bool&gt; - a pair containing an iterator to the inserted element, or an iterator to the element that prevented the insertion, and a bool indicating whether the insertion took place. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="734" column="15" bodyfile="inc/azure/core/amqp/models/amqp_value.hpp" bodystart="734" bodyend="737"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>An <ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map" kindref="compound">AmqpMap</ref> represents an AMQP &quot;map&quot; type. </para>
    </briefdescription>
    <detaileddescription>
<para>An AMQP Map is a polymorphic map of distinct keys to values. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Azure::Core::Amqp::Models::_detail::AmqpCollectionBase&lt; std::map&lt; AmqpValue, AmqpValue &gt;, AmqpMap &gt;</label>
      </node>
      <node id="1">
        <label>Azure::Core::Amqp::Models::AmqpMap</label>
        <link refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Azure::Core::Amqp::Models::_detail::AmqpCollectionBase&lt; std::map&lt; AmqpValue, AmqpValue &gt;, AmqpMap &gt;</label>
      </node>
      <node id="1">
        <label>Azure::Core::Amqp::Models::AmqpMap</label>
        <link refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="680" column="3" bodyfile="inc/azure/core/amqp/models/amqp_value.hpp" bodystart="681" bodyend="738"/>
    <listofallmembers>
      <member refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map_1af2205b0d60a8a0a9fe7d67f938c598cc" prot="public" virt="non-virtual"><scope>Azure::Core::Amqp::Models::AmqpMap</scope><name>AmqpMap</name></member>
      <member refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map_1aba8d3e9c270c63b28285fa8f08cb4b44" prot="public" virt="non-virtual"><scope>Azure::Core::Amqp::Models::AmqpMap</scope><name>AmqpMap</name></member>
      <member refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map_1a495bfd3bcab9184ed78920b98bea7a87" prot="public" virt="non-virtual"><scope>Azure::Core::Amqp::Models::AmqpMap</scope><name>AmqpMap</name></member>
      <member refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map_1aaebee47954037bf3a91b8aac012348e5" prot="public" virt="non-virtual"><scope>Azure::Core::Amqp::Models::AmqpMap</scope><name>AmqpMap</name></member>
      <member refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map_1aa70734fa7672d6f6be02a3e96dcd6df6" prot="public" virt="non-virtual"><scope>Azure::Core::Amqp::Models::AmqpMap</scope><name>AmqpMap</name></member>
      <member refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map_1a9479da96da6a102caef0092db07988a9" prot="public" virt="non-virtual"><scope>Azure::Core::Amqp::Models::AmqpMap</scope><name>emplace</name></member>
      <member refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map_1a2b778981a79be0e5ce33263206e1b209" prot="public" virt="non-virtual"><scope>Azure::Core::Amqp::Models::AmqpMap</scope><name>operator=</name></member>
      <member refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map_1ae8eff65267495676c2430786427dd382" prot="public" virt="non-virtual"><scope>Azure::Core::Amqp::Models::AmqpMap</scope><name>operator=</name></member>
      <member refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map_1ab35ac1e7364d5e80cfce62f261d94aa0" prot="public" virt="non-virtual"><scope>Azure::Core::Amqp::Models::AmqpMap</scope><name>operator[]</name></member>
      <member refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_map_1a74ede8e28a090c3bab5be36a13645882" prot="public" virt="virtual"><scope>Azure::Core::Amqp::Models::AmqpMap</scope><name>~AmqpMap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
