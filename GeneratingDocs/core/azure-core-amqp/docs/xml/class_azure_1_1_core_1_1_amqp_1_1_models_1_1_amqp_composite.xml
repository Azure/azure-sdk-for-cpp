<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Azure::Core::Amqp::Models::AmqpComposite</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Azure::Core::Amqp::Models::_detail::AmqpCollectionBase&lt; std::vector&lt; AmqpValue &gt;, AmqpComposite &gt;</basecompoundref>
    <includes refid="amqp__value_8hpp" local="no">amqp_value.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1adbf7d40a2d8695ceecaa099c9bba684d" prot="private" static="no" mutable="no">
        <type><ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_value" kindref="compound">AmqpValue</ref></type>
        <definition>AmqpValue Azure::Core::Amqp::Models::AmqpComposite::m_descriptor</definition>
        <argsstring></argsstring>
        <name>m_descriptor</name>
        <qualifiedname>Azure::Core::Amqp::Models::AmqpComposite::m_descriptor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="1050" column="15" bodyfile="inc/azure/core/amqp/models/amqp_value.hpp" bodystart="1050" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1af1eaf835a7e462665dec2358cf4523a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Azure::Core::Amqp::Models::AmqpComposite::AmqpComposite</definition>
        <argsstring>()</argsstring>
        <name>AmqpComposite</name>
        <qualifiedname>Azure::Core::Amqp::Models::AmqpComposite::AmqpComposite</qualifiedname>
        <briefdescription>
<para>Construct a new <ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite" kindref="compound">AmqpComposite</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="975" column="5" bodyfile="inc/azure/core/amqp/models/amqp_value.hpp" bodystart="975" bodyend="975"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1a07f8a44e1cf8b24deff15c1f450c1575" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Azure::Core::Amqp::Models::AmqpComposite::~AmqpComposite</definition>
        <argsstring>()=default</argsstring>
        <name>~AmqpComposite</name>
        <qualifiedname>Azure::Core::Amqp::Models::AmqpComposite::~AmqpComposite</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="976" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1a955132114a0ac94709a312fc322170ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azure::Core::Amqp::Models::AmqpComposite::AmqpComposite</definition>
        <argsstring>(AmqpValue const &amp;descriptor, std::initializer_list&lt; AmqpValue &gt; const &amp;values)</argsstring>
        <name>AmqpComposite</name>
        <qualifiedname>Azure::Core::Amqp::Models::AmqpComposite::AmqpComposite</qualifiedname>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_value" kindref="compound">AmqpValue</ref> const &amp;</type>
          <declname>descriptor</declname>
        </param>
        <param>
          <type>std::initializer_list&lt; <ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_value" kindref="compound">AmqpValue</ref> &gt; const &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite" kindref="compound">AmqpComposite</ref> object with an initializer list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="979" column="5" bodyfile="src/models/amqp_value.cpp" bodystart="1024" bodyend="1029"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1a098987570b78dc0393b11fa4dc6df2ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azure::Core::Amqp::Models::AmqpComposite::AmqpComposite</definition>
        <argsstring>(const AmqpComposite &amp;other)=default</argsstring>
        <name>AmqpComposite</name>
        <qualifiedname>Azure::Core::Amqp::Models::AmqpComposite::AmqpComposite</qualifiedname>
        <param>
          <type>const <ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite" kindref="compound">AmqpComposite</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite" kindref="compound">AmqpComposite</ref> object from another. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="982" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1a4cb9055ec312fbc435b7f0f916de34b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite" kindref="compound">AmqpComposite</ref> &amp;</type>
        <definition>AmqpComposite &amp; Azure::Core::Amqp::Models::AmqpComposite::operator=</definition>
        <argsstring>(const AmqpComposite &amp;other)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>Azure::Core::Amqp::Models::AmqpComposite::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite" kindref="compound">AmqpComposite</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy assignment operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>composite value to copy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>reference to this composite value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="988" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1aaf0cd6821ba2672994b4d50d3125944c" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Azure::Core::Amqp::Models::AmqpComposite::AmqpComposite</definition>
        <argsstring>(AmqpComposite &amp;&amp;other) noexcept=default</argsstring>
        <name>AmqpComposite</name>
        <qualifiedname>Azure::Core::Amqp::Models::AmqpComposite::AmqpComposite</qualifiedname>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite" kindref="compound">AmqpComposite</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Move constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>composite value to move. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="993" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1a95c3304854cfef475bd44919c3986d78" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite" kindref="compound">AmqpComposite</ref> &amp;</type>
        <definition>AmqpComposite &amp; Azure::Core::Amqp::Models::AmqpComposite::operator=</definition>
        <argsstring>(AmqpComposite &amp;&amp;other) noexcept=default</argsstring>
        <name>operator=</name>
        <qualifiedname>Azure::Core::Amqp::Models::AmqpComposite::operator=</qualifiedname>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite" kindref="compound">AmqpComposite</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Move assignment operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>composite value to move. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>reference to this composite value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="999" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1a2de0902be6b19f27d61f5d8776cbb3c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Azure::Core::Amqp::Models::AmqpComposite::AmqpComposite</definition>
        <argsstring>(AmqpValue const &amp;value)</argsstring>
        <name>AmqpComposite</name>
        <qualifiedname>Azure::Core::Amqp::Models::AmqpComposite::AmqpComposite</qualifiedname>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_value" kindref="compound">AmqpValue</ref> const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite" kindref="compound">AmqpComposite</ref> object from an existing uAMQP AMQP_VALUE item. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>Note that this does NOT capture the passed in AMQP_VALUE object, the caller is responsible for freeing that object.</para>
</simplesect>
<simplesect kind="remark"><para>This is an internal accessor and should never be used by code outside the AMQP implementation.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>- the AMQP array value to capture. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="1010" column="5" bodyfile="src/models/amqp_value.cpp" bodystart="996" bodyend="1022"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1a67ab366c75e438410feeacfeb9951e6b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Azure::Core::Amqp::Models::AmqpComposite::operator==</definition>
        <argsstring>(AmqpComposite const &amp;that) const</argsstring>
        <name>operator==</name>
        <qualifiedname>Azure::Core::Amqp::Models::AmqpComposite::operator==</qualifiedname>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite" kindref="compound">AmqpComposite</ref> const &amp;</type>
          <declname>that</declname>
        </param>
        <briefdescription>
<para>Compare this <ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite" kindref="compound">AmqpComposite</ref> value with another. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>that</parametername>
</parameternamelist>
<parameterdescription>
<para>- the <ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite" kindref="compound">AmqpComposite</ref> to compare with. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="1016" column="10" bodyfile="inc/azure/core/amqp/models/amqp_value.hpp" bodystart="1016" bodyend="1023"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1ab51b0959b471073905028ebb10847cd9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Azure::Core::Amqp::Models::AmqpComposite::operator!=</definition>
        <argsstring>(AmqpComposite const &amp;that) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>Azure::Core::Amqp::Models::AmqpComposite::operator!=</qualifiedname>
        <param>
          <type><ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite" kindref="compound">AmqpComposite</ref> const &amp;</type>
          <declname>that</declname>
        </param>
        <briefdescription>
<para>Compare this <ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite" kindref="compound">AmqpComposite</ref> value with another. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>that</parametername>
</parameternamelist>
<parameterdescription>
<para>- the <ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite" kindref="compound">AmqpComposite</ref> to compare with. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="1029" column="10" bodyfile="inc/azure/core/amqp/models/amqp_value.hpp" bodystart="1029" bodyend="1029"/>
      </memberdef>
      <memberdef kind="function" id="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1aa534649f2af9e8019a411a20ee827373" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_value" kindref="compound">AmqpValue</ref> const &amp;</type>
        <definition>AmqpValue const  &amp; Azure::Core::Amqp::Models::AmqpComposite::GetDescriptor</definition>
        <argsstring>() const</argsstring>
        <name>GetDescriptor</name>
        <qualifiedname>Azure::Core::Amqp::Models::AmqpComposite::GetDescriptor</qualifiedname>
        <briefdescription>
<para>Returns the descriptor for this composite type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The descriptor for this composite type. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="1035" column="21" bodyfile="inc/azure/core/amqp/models/amqp_value.hpp" bodystart="1035" bodyend="1035"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>An <ref refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite" kindref="compound">AmqpComposite</ref> represents a sequentially ordered list of values. The values of the composite may have different types. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="remark"><para>An <ulink url="http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-types-v1.0-os.html#doc-idp42752">AMQP Composite type</ulink> is a composite value where each value consists of an ordered sequence of fields, each with a specified name, type and multiplicity. They roughly correspond to a C or C++ &quot;struct&quot; type.</para>
</simplesect>
<simplesect kind="note"><para>The AMQP Composite type representation does NOT include the underlying field names, just the field values. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Azure::Core::Amqp::Models::_detail::AmqpCollectionBase&lt; std::vector&lt; AmqpValue &gt;, AmqpComposite &gt;</label>
      </node>
      <node id="1">
        <label>Azure::Core::Amqp::Models::AmqpComposite</label>
        <link refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Azure::Core::Amqp::Models::_detail::AmqpCollectionBase&lt; std::vector&lt; AmqpValue &gt;, AmqpComposite &gt;</label>
      </node>
      <node id="1">
        <label>Azure::Core::Amqp::Models::AmqpComposite</label>
        <link refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="inc/azure/core/amqp/models/amqp_value.hpp" line="971" column="3" bodyfile="inc/azure/core/amqp/models/amqp_value.hpp" bodystart="972" bodyend="1051"/>
    <listofallmembers>
      <member refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1af1eaf835a7e462665dec2358cf4523a3" prot="public" virt="non-virtual"><scope>Azure::Core::Amqp::Models::AmqpComposite</scope><name>AmqpComposite</name></member>
      <member refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1a955132114a0ac94709a312fc322170ba" prot="public" virt="non-virtual"><scope>Azure::Core::Amqp::Models::AmqpComposite</scope><name>AmqpComposite</name></member>
      <member refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1a098987570b78dc0393b11fa4dc6df2ce" prot="public" virt="non-virtual"><scope>Azure::Core::Amqp::Models::AmqpComposite</scope><name>AmqpComposite</name></member>
      <member refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1aaf0cd6821ba2672994b4d50d3125944c" prot="public" virt="non-virtual"><scope>Azure::Core::Amqp::Models::AmqpComposite</scope><name>AmqpComposite</name></member>
      <member refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1a2de0902be6b19f27d61f5d8776cbb3c4" prot="public" virt="non-virtual"><scope>Azure::Core::Amqp::Models::AmqpComposite</scope><name>AmqpComposite</name></member>
      <member refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1aa534649f2af9e8019a411a20ee827373" prot="public" virt="non-virtual"><scope>Azure::Core::Amqp::Models::AmqpComposite</scope><name>GetDescriptor</name></member>
      <member refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1adbf7d40a2d8695ceecaa099c9bba684d" prot="private" virt="non-virtual"><scope>Azure::Core::Amqp::Models::AmqpComposite</scope><name>m_descriptor</name></member>
      <member refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1ab51b0959b471073905028ebb10847cd9" prot="public" virt="non-virtual"><scope>Azure::Core::Amqp::Models::AmqpComposite</scope><name>operator!=</name></member>
      <member refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1a4cb9055ec312fbc435b7f0f916de34b4" prot="public" virt="non-virtual"><scope>Azure::Core::Amqp::Models::AmqpComposite</scope><name>operator=</name></member>
      <member refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1a95c3304854cfef475bd44919c3986d78" prot="public" virt="non-virtual"><scope>Azure::Core::Amqp::Models::AmqpComposite</scope><name>operator=</name></member>
      <member refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1a67ab366c75e438410feeacfeb9951e6b" prot="public" virt="non-virtual"><scope>Azure::Core::Amqp::Models::AmqpComposite</scope><name>operator==</name></member>
      <member refid="class_azure_1_1_core_1_1_amqp_1_1_models_1_1_amqp_composite_1a07f8a44e1cf8b24deff15c1f450c1575" prot="public" virt="virtual"><scope>Azure::Core::Amqp::Models::AmqpComposite</scope><name>~AmqpComposite</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
