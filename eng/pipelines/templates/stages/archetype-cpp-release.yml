parameters:
  Artifacts: []
  ArtifactName: 'not-specified'

stages:
  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:
    - ${{ each artifact in parameters.Artifacts }}:
      - stage: Release_${{ replace(artifact.Name, '-', '_') }}
        displayName: 'Release ${{artifact.name}}'
        dependsOn: Build
        condition:  and(succeeded(), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-cpp'))

        jobs:
          # - deployment: TagRepository
          #   displayName: "Create release tag"
          #   condition: ne(variables['Skip.TagRepository'], 'true')
          #   environment: github

          #   pool:
          #     vmImage: windows-2019

          #   strategy:
          #     runOnce:
          #       deploy:
          #         steps:
          #           - checkout: self
          #           - pwsh: Get-ChildItem -Recurse $(Pipeline.Workspace)/packages/${{artifact.Name}}
          #             displayName: Output Visible Artifacts
          #           - task: Powershell@2
          #             inputs:
          #               filePath: $(Build.SourcesDirectory)/eng/common/scripts/Verify-ChangeLog.ps1
          #               arguments: >
          #                 -ChangeLogLocation $(Pipeline.Workspace)/packages/${{artifact.Name}}/CHANGELOG.md
          #                 -VersionString (Get-Content $(Pipeline.Workspace)/packages/${{artifact.Name}}/package-info.json | ConvertFrom-Json).version
          #                 -ForRelease $true
          #               pwsh: true
          #             displayName: Verify CHANGELOG.md contents
          #           - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml
          #             parameters:
          #               ArtifactLocation: "$(Pipeline.Workspace)/packages/${{artifact.Name}}"
          #               PackageRepository: CPP
          #               ReleaseSha: $(Build.SourceVersion)
          #               RepoId: Azure/azure-sdk-for-cpp

          # - ${{if ne(artifact.options.skipPublishDocs, 'true')}}:
          #   - deployment: PublishDocs
          #     displayName: Publish Docs to GitHub pages
          #     condition: ne(variables['Skip.PublishDocs'], 'true')
          #     environment: githubio

          #     pool:
          #       vmImage: windows-2019

          #     strategy:
          #       runOnce:
          #         deploy:
          #           steps:
          #             - checkout: self
          #             - pwsh: Write-Host 'publish docs'
          #             - pwsh: |
          #                 Get-ChildItem -Recurse $(Pipeline.Workspace)/docs/${{ artifact.Name }}
          #               displayName: Output Visible Artifacts
          #             - template: ../../../common/pipelines/templates/steps/publish-blobs.yml
          #               parameters:
          #                 FolderForUpload: '$(Pipeline.Workspace)/docs/${{ artifact.Name }}'
          #                 BlobSASKey: '$(azure-sdk-docs-prod-sas)'
          #                 BlobName: '$(azure-sdk-docs-prod-blob-name)'
          #                 TargetLanguage: 'cpp'
          #                 # we override the regular script path because we have cloned the build tools repo as a separate artifact.
          #                 ScriptPath: '$(Build.SourcesDirectory)/eng/common/scripts/copy-docs-to-blobstorage.ps1'

          - ${{ if ne(artifact.options.skipPublishVcpkg, 'true') }}:
            - deployment: PublishVcpkg
              displayName: Publish to vcpkg
              condition: ne(variables['Skip.PublishVcpkg'], 'true')
              environment: github
              # TODO: If TagRepository is skipped (becasue it has already run or
              # we encounter a failure) this deployment doesn't run.
              # Should it work this way?
              dependsOn: TagRepository

              strategy:
                runOnce:
                  deploy:
                    steps:
                      - checkout: self

                      - task: Powershell@2
                        inputs:
                          filePath: eng/scripts/Initialize-VcpkgRelease.ps1
                          arguments: >-
                            -Username azure-sdk
                            -Pass $(azuresdk-github-pat)
                            -GitRepo Azure/azure-sdk-for-cpp
                            -PackageSpecPath $(Pipeline.Workspace)/packages/${{artifact.Name}}/package-info.json
                            -SourceDirectory $(Pipeline.Workspace)/packages/${{artifact.Name}}/vcpkg
                          pwsh: true
                        displayName: Initialize vcpkg release

                      - pwsh: |
                          git clone https://github.com/microsoft/vcpkg $(Pipeline.Workspace)/vcpkg
                          cd $(Pipeline.Workspace)/vcpkg
                          New-Item -Type Directory ports/${{ artifact.Name }}
                          Copy-Item $(Pipeline.Workspace)/packages/${{artifact.Name}}/vcpkg/port/* ports/${{ artifact.Name }}

                          Get-ChildItem -Recurse $(Pipeline.Workspace)/vcpkg/ports/${{artifact.Name}}
                        displayName: Update files for vcpkg PR

                      - template: /eng/common/pipelines/templates/steps/create-pull-request.yml
                        parameters:
                          RepoOwner: Microsoft
                          RepoName: vcpkg
                          WorkingDirectory: $(Pipeline.Workspace)/vcpkg
                          PrBranchName: azure-sdk-for-cpp-${{ artifact.Name }}-$(Build.BuildId)
                          CommitMsg: "Update port for ${{ artifact.Name }}"
                          PRTitle: "Update port for ${{ artifact.Name }}"
                          BaseBranchName: master



          # - ${{if ne(artifact.options.skipUpdatePackageVersion, 'true')}}:
          #   - deployment: UpdatePackageVersion
          #     displayName: "Update Package Version"
          #     condition: and(succeeded(), ne(variables['Skip.UpdatePackageVersion'], 'true'))
          #     environment: github

          #     pool:
          #       vmImage: windows-2019

          #     strategy:
          #       runOnce:
          #         deploy:
          #           steps:
          #             - checkout: self
          #             - pwsh: |
          #                 eng/scripts/Update-PkgVersion.ps1 -ServiceDirectory '${{parameters.ServiceDirectory}}' -PackageName '${{artifact.name}}'
          #               displayName: Increment package version
          #             - template: ../../../common/pipelines/templates/steps/create-pull-request.yml
          #               parameters:
          #                 RepoName: azure-sdk-for-cpp
          #                 PRBranchName: increment-package-version-${{ parameters.ServiceDirectory }}-$(Build.BuildId)
          #                 CommitMsg: "Increment package version after release of ${{ artifact.name }}"
          #                 PRTitle: "Increment version for ${{ parameters.ServiceDirectory }} releases"