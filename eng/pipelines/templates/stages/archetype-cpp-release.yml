parameters:
  Artifacts: []
  ArtifactName: 'not-specified'

stages:
  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:
    - ${{ each artifact in parameters.Artifacts }}:
      - stage: Release_${{ replace(artifact.Name, '-', '_') }}
        displayName: 'Release ${{artifact.name}}'
        dependsOn: Build
        condition:  and(succeeded(), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-cpp'))

        jobs:
          - deployment: TagRepository
            displayName: "Create release tag"
            condition: ne(variables['Skip.TagRepository'], 'true')
            environment: github

            pool:
              vmImage: windows-2019

            strategy:
              runOnce:
                deploy:
                  steps:
                    - checkout: self
                    - pwsh: Get-ChildItem -Recurse $(Pipeline.Workspace)/packages/${{artifact.Name}}
                      displayName: Output Visible Artifacts
                    - task: Powershell@2
                      inputs:
                        filePath: $(Build.SourcesDirectory)/eng/common/scripts/Verify-ChangeLog.ps1
                        arguments: >
                          -ChangeLogLocation $(Pipeline.Workspace)/packages/${{artifact.Name}}/CHANGELOG.md
                          -VersionString (Get-Content $(Pipeline.Workspace)/packages/${{artifact.Name}}/package-info.json | ConvertFrom-Json).version
                          -ForRelease $true
                        pwsh: true
                      displayName: Verify CHANGELOG.md contents
                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml
                      parameters:
                        ArtifactLocation: "$(Pipeline.Workspace)/packages/${{artifact.Name}}"
                        PackageRepository: CPP
                        ReleaseSha: $(Build.SourceVersion)
                        RepoId: Azure/azure-sdk-for-cpp

          - ${{if ne(artifact.skipPublishDocGithubIo, 'true')}}:
            - deployment: PublishDocs
              displayName: Publish Docs to GitHub pages
              condition: ne(variables['Skip.PublishDocs'], 'true')
              environment: githubio

              pool:
                vmImage: windows-2019

              strategy:
                runOnce:
                  deploy:
                    steps:
                      - checkout: self
                      - pwsh: Write-Host 'publish docs'
                      - pwsh: |
                          Get-ChildItem -Recurse $(Pipeline.Workspace)/docs/${{ artifact.Name }}
                        displayName: Output Visible Artifacts
                      - template: ../../../common/pipelines/templates/steps/publish-blobs.yml
                        parameters:
                          FolderForUpload: '$(Pipeline.Workspace)/docs/${{ artifact.Name }}'
                          BlobSASKey: '$(azure-sdk-docs-prod-sas)'
                          BlobName: '$(azure-sdk-docs-prod-blob-name)'
                          TargetLanguage: 'cpp'
                          ArtifactLocation: '$(Pipeline.Workspace)/packages/${{artifact.Name}}'
                          # we override the regular script path because we have cloned the build tools repo as a separate artifact.
                          ScriptPath: '$(Build.SourcesDirectory)/eng/common/scripts/copy-docs-to-blobstorage.ps1'

          - ${{ if ne(artifact.skipPublishVcpkg, 'true') }}:
            - deployment: PublishVcpkg
              displayName: Publish to vcpkg
              condition: ne(variables['Skip.PublishVcpkg'], 'true')
              environment: github
              # This step requires the tag step
              dependsOn: TagRepository
              pool:
                vmImage: windows-2019

              strategy:
                runOnce:
                  deploy:
                    steps:
                      - checkout: self

                      - task: Powershell@2
                        inputs:
                          filePath: eng/scripts/Initialize-VcpkgRelease.ps1
                          arguments: >-
                            -GitHubRepo "$(Build.Repository.Name)"
                            -PackageSpecPath $(Pipeline.Workspace)/packages/${{artifact.Name}}/package-info.json
                            -SourceDirectory $(Pipeline.Workspace)/packages/${{artifact.Name}}/vcpkg
                            -Verbose
                          pwsh: true
                        displayName: Initialize vcpkg release

                      # - pwsh: |
                      #     git clone https://github.com/microsoft/vcpkg $(Pipeline.Workspace)/vcpkg
                      #     if ($LASTEXITCODE -ne 0) {
                      #       Write-Error "Unable to check out vcpkg repo"
                      #       exit $LASTEXITCODE`
                      #     }
                      #     cd $(Pipeline.Workspace)/vcpkg

                      #     # There is no need to check out a branch, the
                      #     # create-pull-request.yml template creates the branch

                      #     # Clean out the folder so that template files removed
                      #     # are not inadvertently re-added
                      #     if (Test-Path "ports/${{ artifact.Name }}") {
                      #       Remove-Item -v -r "ports/${{ artifact.Name }}"
                      #     }

                      #     New-Item -Type Directory ports/${{ artifact.Name }}
                      #     Copy-Item -Verbose $(Pipeline.Workspace)/packages/${{artifact.Name}}/vcpkg/port/* ports/${{ artifact.Name }}

                      #     # Show artifacts copied into ports folder for PR
                      #     Get-ChildItem -Recurse ports/${{ artifact.Name }}
                      #   displayName: Copy updated files into vcpkg fork for PR
                      #   condition: ne(variables['SkipVcpkgUpdate'], 'true')

                      # - template: /eng/common/pipelines/templates/steps/create-pull-request.yml
                      #   parameters:
                      #     RepoOwner: Microsoft
                      #     RepoName: vcpkg
                      #     WorkingDirectory: $(Pipeline.Workspace)/vcpkg
                      #     PrBranchName: azure-sdk-for-cpp-${{ artifact.Name }}-$(Build.BuildId)
                      #     CommitMsg: "Update port for ${{ artifact.Name }}"
                      #     PRTitle: "Update port for ${{ artifact.Name }}"
                      #     BaseBranchName: master

          - ${{if ne(artifact.skipUpdatePackageVersion, 'true')}}:
            - deployment: UpdatePackageVersion
              displayName: "Update Package Version"
              condition: and(succeeded(), ne(variables['Skip.UpdatePackageVersion'], 'true'))
              environment: github

              pool:
                vmImage: windows-2019

              strategy:
                runOnce:
                  deploy:
                    steps:
                      - checkout: self
                      - pwsh: |
                          eng/scripts/Update-PkgVersion.ps1 -ServiceDirectory '${{parameters.ServiceDirectory}}' -PackageName '${{artifact.name}}'
                        displayName: Increment package version
                      - template: ../../../common/pipelines/templates/steps/create-pull-request.yml
                        parameters:
                          RepoName: azure-sdk-for-cpp
                          PRBranchName: increment-package-version-${{ parameters.ServiceDirectory }}-$(Build.BuildId)
                          CommitMsg: "Increment package version after release of ${{ artifact.name }}"
                          PRTitle: "Increment version for ${{ parameters.ServiceDirectory }} releases"