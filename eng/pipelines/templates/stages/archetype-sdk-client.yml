parameters:
- name: ServiceDirectory
  type: string
  default: not-specified
- name: CtestRegex
  type: string
  default: .*
- name: CtestExcludeRegex
  type: string
  default: ''
- name: CoverageEnabled
  type: boolean
  default: true
- name: LiveTestCtestRegex
  type: string
  default: ''
- name: Artifacts
  type: object
  default: []
- name: ArtifactsSource
  type: object
  default: []
- name: CoverageReportPath
  type: string
  default: 'sdk/*/*/*cov_xml.xml'
- name: LiveTestTimeoutInMinutes
  type: number
  default: 120
- name: LineCoverageTarget
  type: number
  default: 95
- name: BranchCoverageTarget
  type: number
  default: 70
- name: TestEnv
  type: object
  default: []
- name: CMakeTestOptions
  type: object
  default: []
- name: CMakeSourceTestOptions
  type: object
  default: []
- name: Location
  type: string
  default: ''
- name: CloudConfig
  type: object
  default:
    Public:
      SubscriptionConfiguration: $(sub-config-azure-cloud-test-resources)
    Preview:
      SubscriptionConfiguration: $(sub-config-azure-cloud-test-resources-preview)
    Canary:
      SubscriptionConfiguration: $(sub-config-azure-cloud-test-resources)
      Location: 'eastus2euap'
    UsGov:
      SubscriptionConfiguration: $(sub-config-gov-test-resources)
    China:
      SubscriptionConfiguration: $(sub-config-cn-test-resources)
- name: Clouds
  type: string
  default: Public
- name: SupportedClouds
  type: string
  default: Public
- name: UnsupportedClouds
  type: string
  default: ''
- name: PreTestSteps
  type: stepList
  default: []
- name: PostTestSteps
  type: stepList
  default: []
- name: CMakeGenerationTimeoutInMinutes 
  type: number
  default: 120

stages:
  - stage: CMakeGeneration
    jobs:
      - template: /eng/pipelines/templates/jobs/cmake-generate-jobs.yml
        parameters:
          TimeoutInMinutes: ${{ parameters.CMakeGenerationTimeoutInMinutes }}
          ServiceDirectory: ${{ parameters.ServiceDirectory }}
          Artifacts: ${{ parameters.Artifacts }}
          ArtifactsSource: ${{ parameters.ArtifactsSource }}
          CMakeTestOptions: ${{ parameters.CMakeTestOptions }}
          CMakeSourceTestOptions: ${{ parameters.CMakeSourceTestOptions }}

  - stage: Build
    dependsOn: []
    jobs:
      - template: /eng/pipelines/templates/jobs/archetype-sdk-client.yml
        parameters:
          ServiceDirectory: ${{ parameters.ServiceDirectory }}
          Artifacts: ${{ parameters.Artifacts }}
          CtestRegex: ${{ parameters.CtestRegex }}
          CtestExcludeRegex: ${{ parameters.CtestExcludeRegex }}
          CoverageEnabled: ${{ parameters.CoverageEnabled }}
          CoverageReportPath: ${{ parameters.CoverageReportPath }}
          LineCoverageTarget: ${{ parameters.LineCoverageTarget }}
          BranchCoverageTarget: ${{ parameters.BranchCoverageTarget }}
          ${{ if eq(parameters.ServiceDirectory, 'template') }}:
            TestPipeline: true
          TestEnv: ${{ parameters.TestEnv }}
          PreTestSteps: ${{ parameters.PreTestSteps }}
          PostTestSteps: ${{ parameters.PostTestSteps }}

  - ${{ if and(eq(variables['System.TeamProject'], 'internal'), ne(parameters.LiveTestCtestRegex, '')) }}:
    - template: /eng/pipelines/templates/stages/archetype-sdk-tests.yml
      # Code coverage is enabled by default for live tests
      parameters:
        TimeoutInMinutes: ${{ parameters.LiveTestTimeoutInMinutes }}
        ServiceDirectory: ${{ parameters.ServiceDirectory }}
        CtestRegex: ${{ parameters.LiveTestCtestRegex }}
        CoverageReportPath: ${{ parameters.CoverageReportPath }}
        Location: ${{ parameters.Location }}
        CloudConfig: ${{ parameters.CloudConfig }}
        Clouds: ${{ parameters.Clouds }}
        SupportedClouds: ${{ parameters.SupportedClouds }}
        UnsupportedClouds: ${{ parameters.UnsupportedClouds }}
        PreTestSteps: ${{ parameters.PreTestSteps }}
        PostTestSteps: ${{ parameters.PostTestSteps }}

  - ${{ if and(eq(variables['System.TeamProject'], 'internal'), not(endsWith(variables['Build.DefinitionName'], ' - tests'))) }}:
    - template: archetype-cpp-release.yml
      parameters:
        ServiceDirectory: ${{ parameters.ServiceDirectory }}
        DependsOn:
          - Build
          # Only depend on `LiveTest` if there are live tests to execute
          - ${{ if and(eq(variables['System.TeamProject'], 'internal'), ne(parameters.LiveTestCtestRegex, '')) }}:
            # Pulled from stages/archetype-sdk-tests.yml to generate 'LiveTest_<cloud>'
            - ${{ each cloud in parameters.CloudConfig }}:
              - ${{ if or(contains(parameters.Clouds, cloud.key), and(contains(variables['Build.DefinitionName'], 'tests-weekly'), contains(parameters.SupportedClouds, cloud.key))) }}:
                - ${{ if not(contains(parameters.UnsupportedClouds, cloud.key)) }}:
                  - LiveTest_${{ cloud.key }}
        Artifacts: ${{ parameters.Artifacts }}
        ArtifactName: packages
        ${{ if eq(parameters.ServiceDirectory, 'template') }}:
          TestPipeline: true
