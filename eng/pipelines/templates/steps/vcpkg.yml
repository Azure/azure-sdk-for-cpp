steps:
  - pwsh: |
      $TargetPath = "$(Agent.TempDirectory)/vcpkg"
      Remove-Item -Path $TargetPath -Recurse -Force -ErrorAction Ignore
      New-Item -ItemType Directory -Path $TargetPath  -Force

      $VcpkgCommit = $(Get-Content eng/vcpkg-commit.txt)
      Write-Host "Target Path for vcpkg: $TargetPath"
      Write-Host "Vcpkg SHA: $VcpkgCommit"

      Write-Host "##vso[task.prependpath]$TargetPath"
      Write-Host "##vso[task.setvariable variable=VCPKG_INSTALLATION_ROOT]$TargetPath"
      Write-Host "##vso[task.setvariable variable=VcpkgCommit]$VcpkgCommit"
      Write-Host "##vso[task.setvariable variable=VCPKG_BINARY_SOURCES_SECRET;issecret=true;]clear;x-azblob,https://cppvcpkgcache.blob.core.windows.net/public-vcpkg-container,,read"
    displayName: Set Vcpkg Variables

  - pwsh: |
      $ctx = New-AzStorageContext -StorageAccountName 'cppvcpkgcache' -StorageAccountKey $env:VCPKG_CACHE_STORAGE_KEY
      $token = New-AzStorageAccountSASToken -Service Blob -ResourceType Object -Permission "rwc" -Context $ctx
      $vcpkgBinarySourceSas = $token.Substring(1)

      Write-Host "Setting vcpkg binary cache to read and write"
      Write-Host "##vso[task.setvariable variable=VCPKG_BINARY_SOURCES_SECRET;issecret=true;]clear;x-azblob,https://cppvcpkgcache.blob.core.windows.net/public-vcpkg-container,$vcpkgBinarySourceSas,readwrite"
    displayName: Set Vcpkg Write-mode Cache
    env:
      VCPKG_CACHE_STORAGE_KEY: $(cpp-vcpkg-cache-storage-key)
    condition: >-
      eq(variables['System.TeamProject'], 'internal')

  - task: PowerShell@2
    inputs:
      targetType: filePath
      filePath: eng/scripts/vcpkg.ps1
      arguments: >-
        -Ref $(VcpkgCommit)
        -VcpkgPath $(VCPKG_INSTALLATION_ROOT)
      pwsh: true
