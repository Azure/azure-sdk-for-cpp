steps:
  - pwsh: |
      $VcpkgCacheMode = If (Test-Path 'env:VCPKG_CACHE_SAS') {"readwrite"} Else {"read"}
      Write-Host "Cache mode: $VcpkgCacheMode"
      Write-Host "##vso[task.setvariable variable=VCPKG_BINARY_SOURCES;issecret=true]clear;x-azblob,https://cppvcpkgcache.blob.core.windows.net/public-vcpkg-container,$env:VCPKG_CACHE_SAS,$VcpkgCommit"
    displayName: Set Vcpkg Cache
    env:
      VCPKG_CACHE_SAS: $(cpp-vcpkg-cache-write-sas)
    condition: >-
      and(succeeded(), eq(variables['System.TeamProject'], 'internal'))

  - pwsh: |
      $TargetPath = "$(Agent.TempDirectory)/vcpkg"
      Remove-Item -Path $TargetPath -Recurse -Force -ErrorAction Ignore
      New-Item -ItemType Directory -Path $TargetPath  -Force

      $VcpkgCommit = $(Get-Content eng/vcpkg-commit.txt)
      Write-Host "Target Path for vcpkg: $TargetPath"
      Write-Host "Vcpkg SHA: $VcpkgCommit"

      Write-Host "##vso[task.prependpath]$TargetPath"
      Write-Host "##vso[task.setvariable variable=VCPKG_INSTALLATION_ROOT]$TargetPath"
      Write-Host "##vso[task.setvariable variable=VcpkgCommit]$VcpkgCommit"
    displayName: Set Vcpkg Variables
    condition: >-
      succeeded()

  - task: PowerShell@2
    inputs:
      targetType: filePath
      filePath: eng/scripts/vcpkg.ps1
      arguments: >-
        -Ref $(VcpkgCommit)
        -VcpkgPath $(VCPKG_INSTALLATION_ROOT)
      pwsh: true
    condition: >-
      succeeded()
