{
  "configurations": [
    {
      "name": "x64-DebugWithTests",
      "generator": "Ninja",
      "configurationType": "Debug",
      "inheritEnvironments": [ "msvc_x64_x64" ],
      "buildRoot": "${projectDir}\\out\\build\\${name}",
      "installRoot": "${projectDir}\\out\\install\\${name}",
      "cmakeCommandArgs": "-DINSTALL_GTEST=OFF -DBUILD_TESTING=ON -DBUILD_TRANSPORT_CURL=ON -DBUILD_SAMPLES=ON",
      "buildCommandArgs": "-v",
      "ctestCommandArgs": "",
      "variables": [
        {
          "name": "VCPKG_TARGET_TRIPLET",
          "value": "x64-windows-static",
          "type": "STRING"
        },
        {
          "name": "LIB_EAY_RELEASE",
          "value": "G:/Az/LarryO/vcpkg/packages/openssl_x64-windows-static/lib/libcrypto.lib",
          "type": "FILEPATH"
        },
        {
          "name": "LIB_EAY_DEBUG",
          "value": "G:/Az/LarryO/vcpkg/packages/openssl_x64-windows-static/lib/libcrypto.lib",
          "type": "FILEPATH"
        }
      ]
    },
    {
      "name": "x64-DebugWithTestsWinHttp",
      "generator": "Ninja",
      "configurationType": "Debug",
      "inheritEnvironments": [ "msvc_x64_x64" ],
      "buildRoot": "${projectDir}\\out\\build\\${name}",
      "installRoot": "${projectDir}\\out\\install\\${name}",
      "cmakeCommandArgs": "-DINSTALL_GTEST=OFF -DBUILD_TESTING=ON -DBUILD_SAMPLES=ON",
      "buildCommandArgs": "-v",
      "ctestCommandArgs": "",
      "variables": [
        {
          "name": "VCPKG_TARGET_TRIPLET",
          "value": "x64-windows-static",
          "type": "STRING"
        }
      ]
    },
    {
      "name": "x86-Debug",
      "generator": "Ninja",
      "configurationType": "Debug",
      "buildRoot": "${projectDir}\\out\\build\\${name}",
      "installRoot": "${projectDir}\\out\\install\\${name}",
      "cmakeCommandArgs": "",
      "buildCommandArgs": "",
      "ctestCommandArgs": "",
      "inheritEnvironments": [ "msvc_x86" ],
      "variables": [
        {
          "name": "VCPKG_TARGET_TRIPLET",
          "value": "x86-windows-static",
          "type": "STRING"
        }
      ]
    },
    {
      "name": "x86-Release-static",
      "generator": "Ninja",
      "configurationType": "MinSizeRel",
      "buildRoot": "${projectDir}\\out\\build\\${name}",
      "installRoot": "${projectDir}\\out\\install\\${name}",
      "cmakeCommandArgs": "",
      "buildCommandArgs": "",
      "ctestCommandArgs": "",
      "inheritEnvironments": [ "msvc_x86" ],
      "variables": [
        {
          "name": "BUILD_TESTING",
          "value": "True",
          "type": "BOOL"
        },
        {
          "name": "BUILD_TRANSPORT_CURL",
          "value": "True",
          "type": "BOOL"
        },
        {
          "name": "BUILD_TRANSPORT_WINHTTP",
          "value": "True",
          "type": "BOOL"
        },
        {
          "name": "VCPKG_TARGET_TRIPLET",
          "value": "x86-windows-static",
          "type": "STRING"
        },
        {
          "name": "BUILD_PERFORMANCE_TESTS",
          "value": "true",
          "type": "BOOL"
        }
      ]
    },
    {
      "name": "x86-Release",
      "generator": "Ninja",
      "configurationType": "MinSizeRel",
      "buildRoot": "${projectDir}\\out\\build\\${name}",
      "installRoot": "${projectDir}\\out\\install\\${name}",
      "cmakeCommandArgs": "",
      "buildCommandArgs": "",
      "ctestCommandArgs": "",
      "inheritEnvironments": [ "msvc_x86" ],
      "variables": [
        {
          "name": "BUILD_TESTING",
          "value": "True",
          "type": "BOOL"
        },
        {
          "name": "BUILD_TRANSPORT_CURL",
          "value": "True",
          "type": "BOOL"
        },
        {
          "name": "BUILD_TRANSPORT_CUSTOM",
          "value": "False",
          "type": "BOOL"
        },
        {
          "name": "BUILD_TRANSPORT_WINHTTP",
          "value": "True",
          "type": "BOOL"
        },
        {
          "name": "VCPKG_TARGET_TRIPLET",
          "value": "x86-windows",
          "type": "STRING"
        },
        {
          "name": "BUILD_PERFORMANCE_TESTS",
          "value": "True",
          "type": "BOOL"
        }
      ]
    },
    {
      "name": "x64-Release",
      "generator": "Ninja",
      "configurationType": "MinSizeRel",
      "buildRoot": "${projectDir}\\out\\build\\${name}",
      "installRoot": "${projectDir}\\out\\install\\${name}",
      "cmakeCommandArgs": "",
      "buildCommandArgs": "",
      "ctestCommandArgs": "",
      "inheritEnvironments": [ "msvc_x64_x64" ],
      "variables": [
        {
          "name": "VCPKG_TARGET_TRIPLET",
          "value": "x64-windows",
          "type": "STRING"
        },
        {
          "name": "BUILD_TESTING",
          "value": "True",
          "type": "BOOL"
        },
        {
          "name": "BUILD_TRANSPORT_CURL",
          "value": "True",
          "type": "BOOL"
        },
        {
          "name": "BUILD_TRANSPORT_WINHTTP",
          "value": "True",
          "type": "BOOL"
        },
        {
          "name": "BUILD_PERFORMANCE_TESTS",
          "value": "True",
          "type": "BOOL"
        },
        {
          "name": "BUILD_SAMPLES",
          "value": "True",
          "type": "BOOL"
        }
      ]
    },
    {
      "name": "x64-Release-static",
      "generator": "Ninja",
      "configurationType": "MinSizeRel",
      "buildRoot": "${projectDir}\\out\\build\\${name}",
      "installRoot": "${projectDir}\\out\\install\\${name}",
      "cmakeCommandArgs": "",
      "buildCommandArgs": "",
      "ctestCommandArgs": "",
      "inheritEnvironments": [ "msvc_x64_x64" ],
      "variables": [
        {
          "name": "BUILD_TESTING",
          "value": "True",
          "type": "BOOL"
        },
        {
          "name": "BUILD_TRANSPORT_CURL",
          "value": "True",
          "type": "BOOL"
        },
        {
          "name": "BUILD_TRANSPORT_WINHTTP",
          "value": "True",
          "type": "BOOL"
        },
        {
          "name": "BUILD_PERFORMANCE_TESTS",
          "value": "True",
          "type": "BOOL"
        }
      ]
    }
  ]
}